<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>月迹的博客</title>
  
  <subtitle>用代码书写人生</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xyueji.github.io/"/>
  <updated>2021-09-23T09:18:46.586Z</updated>
  <id>https://xyueji.github.io/</id>
  
  <author>
    <name>月 迹</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>统计HDFS元数据</title>
    <link href="https://xyueji.github.io/%E7%BB%9F%E8%AE%A1HDFS%E5%85%83%E6%95%B0%E6%8D%AE.html"/>
    <id>https://xyueji.github.io/统计HDFS元数据.html</id>
    <published>2021-09-23T09:17:45.000Z</published>
    <updated>2021-09-23T09:18:46.586Z</updated>
    
    <content type="html"><![CDATA[<ol><li>编写offline_fsimage.sh脚本，解析fsimage文件获取HDFS元数据并上传至HDFS。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载基本配置信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">source</span> ./config-env.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 集群启用了Kerberos，先使用hdfs的Kerberos账号</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kinit -kt hdfs.keytab hdfs/admin</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将HDFS的FsImage导出</span></span><br><span class="line">mkdir -p ./tmp_meta</span><br><span class="line">rm -rf ./tmp_meta/*</span><br><span class="line">hdfs dfsadmin -fetchImage ./tmp_meta</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ];then</span><br><span class="line">echo "获取FsImage失败..."</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用hdfs提供的oiv解析FsImage数据文件，将FsImage转换为csv格式数据</span></span><br><span class="line">hdfs oiv -i ./tmp_meta/* -o ./tmp_meta/fsimage.csv -p Delimited</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将生成的csv文件头去掉，并上传至HDFS的/tmp目录</span></span><br><span class="line">sed -i -e "1d" ./tmp_meta/fsimage.csv</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 切换为Hive的用户进行put</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kinit -kt hive.keytab hive/admin</span></span><br><span class="line"></span><br><span class="line">TMP_DIR=/tmp/meta/fsimage</span><br><span class="line">hdfs dfs -rmr $TMP_DIR</span><br><span class="line">hdfs dfs -mkdir -p $TMP_DIR</span><br><span class="line">echo "创建HDFS临时目录[$&#123;TMP_DIR&#125;]"</span><br><span class="line">hdfs dfs -copyFromLocal ./tmp_meta/fsimage.csv $&#123;TMP_DIR&#125;</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ];then</span><br><span class="line">echo "上传fsimage.csv文件失败..."</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo "上传[./tmp_meta/fsimage.csv文件至[$&#123;TMP_DIR&#125;]成功"</span><br></pre></td></tr></table></figure><a id="more"></a><ol start="2"><li>创建HDFS元数据表。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> meta;</span><br><span class="line"><span class="keyword">use</span> meta;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建FsImage临时表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">EXTERNAL</span> <span class="keyword">TABLE</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> hdfs_meta_tmp (</span><br><span class="line">  <span class="keyword">path</span> <span class="keyword">string</span>,</span><br><span class="line">  repl <span class="built_in">int</span>,</span><br><span class="line">  modification_time <span class="keyword">string</span>,</span><br><span class="line">  access_time <span class="keyword">string</span>,</span><br><span class="line">  preferred_block_size <span class="built_in">int</span>,</span><br><span class="line">  block_count <span class="keyword">double</span>,</span><br><span class="line">  file_size <span class="keyword">double</span>,</span><br><span class="line">  ns_quota <span class="built_in">int</span>,</span><br><span class="line">  ds_quota <span class="built_in">int</span>,</span><br><span class="line">  permission <span class="keyword">string</span>,</span><br><span class="line">  username <span class="keyword">string</span>,</span><br><span class="line">  groupname <span class="keyword">string</span></span><br><span class="line">  )</span><br><span class="line">PARTITIONED <span class="keyword">BY</span> (</span><br><span class="line">  par_dt <span class="keyword">string</span>)</span><br><span class="line"><span class="keyword">ROW</span> <span class="keyword">FORMAT</span> SERDE</span><br><span class="line">  <span class="string">'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'</span></span><br><span class="line"><span class="keyword">WITH</span> SERDEPROPERTIES (</span><br><span class="line">  <span class="string">'field.delim'</span>=<span class="string">'\t'</span>,</span><br><span class="line">  <span class="string">'serialization.format'</span>=<span class="string">'\t'</span>)</span><br><span class="line"><span class="keyword">STORED</span> <span class="keyword">AS</span> INPUTFORMAT</span><br><span class="line">  <span class="string">'org.apache.hadoop.mapred.TextInputFormat'</span></span><br><span class="line">OUTPUTFORMAT</span><br><span class="line">  <span class="string">'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'</span></span><br><span class="line">LOCATION <span class="string">'/tmp/meta/fsimage'</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>用途</li></ol><ul><li>HDFS文件资源统计，文件数、大小、目录、冷热数据、小文件分析等。</li><li>结合Hive meta和Hive hook，进行大查询报警。</li></ul><p>参考</p><ul><li><a href="https://blog.csdn.net/Hadoop_SC/article/details/104097446" target="_blank" rel="noopener">如何离线分析HDFS的FsImage查找集群小文件</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;编写offline_fsimage.sh脚本，解析fsimage文件获取HDFS元数据并上传至HDFS。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; 加载基本配置信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; ./config-env.sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; 集群启用了Kerberos，先使用hdfs的Kerberos账号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; kinit -kt hdfs.keytab hdfs/admin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; 将HDFS的FsImage导出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir -p ./tmp_meta&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm -rf ./tmp_meta/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hdfs dfsadmin -fetchImage ./tmp_meta&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ $? -ne 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	echo &quot;获取FsImage失败...&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	exit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; 使用hdfs提供的oiv解析FsImage数据文件，将FsImage转换为csv格式数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hdfs oiv -i ./tmp_meta/* -o ./tmp_meta/fsimage.csv -p Delimited&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; 将生成的csv文件头去掉，并上传至HDFS的/tmp目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i -e &quot;1d&quot; ./tmp_meta/fsimage.csv&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; 切换为Hive的用户进行put&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; kinit -kt hive.keytab hive/admin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TMP_DIR=/tmp/meta/fsimage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hdfs dfs -rmr $TMP_DIR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hdfs dfs -mkdir -p $TMP_DIR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &quot;创建HDFS临时目录[$&amp;#123;TMP_DIR&amp;#125;]&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hdfs dfs -copyFromLocal ./tmp_meta/fsimage.csv $&amp;#123;TMP_DIR&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ $? -ne 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	echo &quot;上传fsimage.csv文件失败...&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	exit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &quot;上传[./tmp_meta/fsimage.csv文件至[$&amp;#123;TMP_DIR&amp;#125;]成功&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="hadoop" scheme="https://xyueji.github.io/categories/hadoop/"/>
    
    
      <category term="HDFS" scheme="https://xyueji.github.io/tags/HDFS/"/>
    
      <category term="hive" scheme="https://xyueji.github.io/tags/hive/"/>
    
      <category term="元数据" scheme="https://xyueji.github.io/tags/%E5%85%83%E6%95%B0%E6%8D%AE/"/>
    
      <category term="小文件" scheme="https://xyueji.github.io/tags/%E5%B0%8F%E6%96%87%E4%BB%B6/"/>
    
      <category term="大查询" scheme="https://xyueji.github.io/tags/%E5%A4%A7%E6%9F%A5%E8%AF%A2/"/>
    
  </entry>
  
  <entry>
    <title>元数据平台-数据血缘</title>
    <link href="https://xyueji.github.io/%E5%85%83%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0-%E6%95%B0%E6%8D%AE%E8%A1%80%E7%BC%98.html"/>
    <id>https://xyueji.github.io/元数据平台-数据血缘.html</id>
    <published>2021-09-03T09:39:59.000Z</published>
    <updated>2021-09-23T09:17:14.580Z</updated>
    
    <content type="html"><![CDATA[<h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20210903154320404.png" alt="image-20210903154320404"></p><p>首先，我们先了解一下元数据平台架构，主流程是：SQL采集 –》 SQL解析 –》应用层。</p><ol><li>SQL采集：针对各种SQL查询引擎，编写相应的钩子函数进行SQL收集，收集内容有执行时间、执行耗时、执行用户、执行引擎、jobId和执行SQL等等，最后把SQL信息入Kafka。Hive是实现ExecuteWithHookContext接口，Presto是实现EventListener接口，Spark是实现SparkListner接口。</li><li>SQL解析：Flink实时消费Kafka数据，进行SQL解析。解析SQL的过程为：定义词法规则和语法规则文件 –》 使用Antlr实现SQL词法和语法解析 –》生成AST语法树 –》遍历AST语法树，考虑到Presto和Spark的SQL语法类似，因此直接参考Hive底层源码实现SQL解析。解析完成后，把血缘信息和元数据信息分别入JanusGraph和ElasticSearch。</li></ol><a id="more"></a><ol start="3"><li>应用层：数据录入JanusGraph和ElasticSearch后，就可以进行血缘查询和元数据查询。然后通过graph节点的出度入度进行热点分析。</li></ol><h3 id="SQL采集"><a href="#SQL采集" class="headerlink" title="SQL采集"></a>SQL采集</h3><p>本文以Hive的SQL采集为例，编写自定义Hive Hook类，实现SQL采集。此Hook类可通过hive-site.xml配置实现SQL信息入Kafka或JDBC存储引擎。</p><h4 id="SqlCollectionHook"><a href="#SqlCollectionHook" class="headerlink" title="SqlCollectionHook"></a>SqlCollectionHook</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.hive;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Splitter;</span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Strings;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Sets;</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.hive.core.SqlEntity;</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.hive.strategy.JdbcSqlCollectionStrategy;</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.hive.strategy.KafkaSqlCollectionStrategy;</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.hive.strategy.SqlCollectionStrategy;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.time.DateFormatUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.conf.HiveConf;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.QueryPlan;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.TaskRunner;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.hooks.ExecuteWithHookContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.hooks.HookContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.session.SessionState;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-08-16 10:22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SqlCollectionHook</span> <span class="keyword">implements</span> <span class="title">ExecuteWithHookContext</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String DATE_TIME_FORMAT = <span class="string">"yyyy-MM-dd HH:mm:ss"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LINEAGE_SQL_STRATEGY = <span class="string">"lineage.sql.strategy"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LINEAGE_SQL_STRATEGY_JDBC = <span class="string">"jdbc"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LINEAGE_SQL_STRATEGY_KAFKA = <span class="string">"kafka"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(HookContext hookContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">assert</span> (hookContext.getHookType() == HookContext.HookType.POST_EXEC_HOOK);</span><br><span class="line">        QueryPlan plan = hookContext.getQueryPlan();</span><br><span class="line">        SessionState ss = SessionState.get();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            HiveConf conf = ss.getConf();</span><br><span class="line">            <span class="keyword">boolean</span> testMode = conf.getBoolVar(HiveConf.ConfVars.HIVE_IN_TEST);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取hook类名</span></span><br><span class="line">            Set&lt;String&gt; postExecHooks = Sets.newHashSet(Splitter.on(<span class="string">","</span>).trimResults()</span><br><span class="line">                    .omitEmptyStrings()</span><br><span class="line">                    .split(Strings.nullToEmpty(HiveConf.getVar(conf, HiveConf.ConfVars.POSTEXECHOOKS))));</span><br><span class="line">            <span class="keyword">if</span> (!testMode &amp;&amp; postExecHooks.contains(<span class="keyword">this</span>.getClass().getName())) &#123;</span><br><span class="line">                <span class="comment">// Don't emit user/timestamp info in test mode,</span></span><br><span class="line">                <span class="comment">// so that the test golden output file is fixed.</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">long</span> queryTime = plan.getQueryStartTime().longValue();</span><br><span class="line">                <span class="keyword">if</span> (queryTime == <span class="number">0</span>) &#123;</span><br><span class="line">                    queryTime = System.currentTimeMillis();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                String logtime = DateFormatUtils.format(<span class="keyword">new</span> Date(queryTime), DATE_TIME_FORMAT);</span><br><span class="line">                String sql = plan.getQueryStr();</span><br><span class="line">                String user = hookContext.getUgi().getUserName();</span><br><span class="line">                <span class="keyword">long</span> timestamp = queryTime;</span><br><span class="line">                <span class="keyword">long</span> duration = System.currentTimeMillis() - queryTime;</span><br><span class="line"></span><br><span class="line">                StringBuilder jobIdStr = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                List&lt;TaskRunner&gt; tasks = hookContext.getCompleteTaskList();</span><br><span class="line">                <span class="keyword">if</span> (tasks != <span class="keyword">null</span> &amp;&amp; !tasks.isEmpty()) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (TaskRunner task : tasks) &#123;</span><br><span class="line">                        String jobId = task.getTask().getJobID();</span><br><span class="line">                        <span class="keyword">if</span> (jobId != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            jobIdStr.append(jobId).append(<span class="string">","</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (jobIdStr.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        jobIdStr.deleteCharAt(jobIdStr.length() - <span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                String jobIds = jobIdStr.toString();</span><br><span class="line">                String engine = HiveConf.getVar(conf, HiveConf.ConfVars.HIVE_EXECUTION_ENGINE);</span><br><span class="line">                String database = ss.getCurrentDatabase();</span><br><span class="line">                String datasource = <span class="string">"hive"</span>;</span><br><span class="line"></span><br><span class="line">                SqlEntity sqlEntity = SqlEntity.newBuilder()</span><br><span class="line">                        .logtime(logtime)</span><br><span class="line">                        .sql(sql)</span><br><span class="line">                        .user(user)</span><br><span class="line">                        .timestamp(timestamp)</span><br><span class="line">                        .duration(duration)</span><br><span class="line">                        .jobids(jobIds)</span><br><span class="line">                        .engine(engine)</span><br><span class="line">                        .database(database)</span><br><span class="line">                        .datasource(datasource)</span><br><span class="line">                        .build();</span><br><span class="line"></span><br><span class="line">                SqlCollectionStrategy strategy = getStrategy(conf);</span><br><span class="line">                <span class="keyword">if</span> (strategy != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    strategy.invoke(conf, sqlEntity);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">            <span class="comment">// Don't fail the query just because of any lineage issue.</span></span><br><span class="line">            log(<span class="string">"Failed to save lineage sql\n"</span></span><br><span class="line">                    + org.apache.hadoop.util.StringUtils.stringifyException(t));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Logger an error to console if available.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">log</span><span class="params">(String error)</span> </span>&#123;</span><br><span class="line">        SessionState.LogHelper console = SessionState.getConsole();</span><br><span class="line">        <span class="keyword">if</span> (console != <span class="keyword">null</span>) &#123;</span><br><span class="line">            console.printError(error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> SqlCollectionStrategy <span class="title">getStrategy</span><span class="params">(HiveConf conf)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (conf.get(LINEAGE_SQL_STRATEGY)) &#123;</span><br><span class="line">            <span class="keyword">case</span> LINEAGE_SQL_STRATEGY_JDBC:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> JdbcSqlCollectionStrategy();</span><br><span class="line">            <span class="keyword">case</span> LINEAGE_SQL_STRATEGY_KAFKA:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> KafkaSqlCollectionStrategy();</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="SqlCollectionStrategy"><a href="#SqlCollectionStrategy" class="headerlink" title="SqlCollectionStrategy"></a>SqlCollectionStrategy</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.hive.strategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.hive.core.SqlEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.conf.HiveConf;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-08-17 10:27</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SqlCollectionStrategy</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行策略</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conf HiveConf</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sqlEntity sql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">invoke</span><span class="params">(HiveConf conf, SqlEntity sqlEntity)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="KafkaSqlCollectionStrategy"><a href="#KafkaSqlCollectionStrategy" class="headerlink" title="KafkaSqlCollectionStrategy"></a>KafkaSqlCollectionStrategy</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.hive.strategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.hive.core.SqlEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.conf.HiveConf;</span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.clients.producer.KafkaProducer;</span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.clients.producer.ProducerRecord;</span><br><span class="line"><span class="keyword">import</span> org.codehaus.jackson.map.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-08-17 10:52</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KafkaSqlCollectionStrategy</span> <span class="keyword">implements</span> <span class="title">SqlCollectionStrategy</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOG = LoggerFactory.getLogger(KafkaSqlCollectionStrategy.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LINEAGE_BOOTSTRAP_SERVERS = <span class="string">"lineage.bootstrap.servers"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LINEAGE_TOPIC = <span class="string">"lineage.topic"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ObjectMapper MAPPER = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">invoke</span><span class="params">(HiveConf conf, SqlEntity sqlEntity)</span> </span>&#123;</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        properties.put(<span class="string">"bootstrap.servers"</span>, conf.get(LINEAGE_BOOTSTRAP_SERVERS));</span><br><span class="line">        properties.put(<span class="string">"key.serializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringSerializer"</span>);</span><br><span class="line">        properties.put(<span class="string">"value.serializer"</span>, <span class="string">"org.apache.kafka.common.serialization.StringSerializer"</span>);</span><br><span class="line">        <span class="keyword">try</span> (KafkaProducer&lt;String, String&gt; producer = <span class="keyword">new</span> KafkaProducer&lt;&gt;(properties)) &#123;</span><br><span class="line">            String topic = conf.get(LINEAGE_TOPIC);</span><br><span class="line">            producer.send(<span class="keyword">new</span> ProducerRecord&lt;&gt;(topic, MAPPER.writeValueAsString(sqlEntity)));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            LOG.error(<span class="string">"Error send linage sql to kafka, "</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="JdbcSqlCollectionStrategy"><a href="#JdbcSqlCollectionStrategy" class="headerlink" title="JdbcSqlCollectionStrategy"></a>JdbcSqlCollectionStrategy</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.hive.strategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.hive.core.SqlEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.conf.HiveConf;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-08-17 10:34</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcSqlCollectionStrategy</span> <span class="keyword">implements</span> <span class="title">SqlCollectionStrategy</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOG = LoggerFactory.getLogger(JdbcSqlCollectionStrategy.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LINEAGE_DB_DRIVER = <span class="string">"lineage.db.driver"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LINEAGE_DB_URL = <span class="string">"lineage.db.url"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LINEAGE_DB_USER = <span class="string">"lineage.db.user"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LINEAGE_DB_PASSWORD = <span class="string">"lineage.db.password"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LINEAGE_DB_TABLE = <span class="string">"lineage.db.table"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">invoke</span><span class="params">(HiveConf conf, SqlEntity sqlEntity)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = getConnection(conf);</span><br><span class="line">            pstmt = conn.prepareStatement(getInsertLineageSql(conf));</span><br><span class="line"></span><br><span class="line">            pstmt.setString(<span class="number">1</span>, sqlEntity.getLogtime());</span><br><span class="line">            pstmt.setString(<span class="number">2</span>, sqlEntity.getSql());</span><br><span class="line">            pstmt.setString(<span class="number">3</span>, sqlEntity.getUser());</span><br><span class="line">            pstmt.setLong(<span class="number">4</span>, sqlEntity.getTimestamp());</span><br><span class="line">            pstmt.setLong(<span class="number">5</span>, sqlEntity.getDuration());</span><br><span class="line">            pstmt.setString(<span class="number">6</span>, sqlEntity.getJobids());</span><br><span class="line">            pstmt.setString(<span class="number">7</span>, sqlEntity.getEngine());</span><br><span class="line">            pstmt.setString(<span class="number">8</span>, sqlEntity.getDatabase());</span><br><span class="line">            pstmt.setString(<span class="number">9</span>, sqlEntity.getDatasource());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> pstmt.execute();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            LOG.error(<span class="string">"Error insert lineage sql table, "</span> + e.getMessage());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeResources(conn, pstmt, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Connection <span class="title">getConnection</span><span class="params">(HiveConf conf)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String jdbcDriver = conf.get(LINEAGE_DB_DRIVER);</span><br><span class="line">        Driver driver = (Driver) Class.forName(jdbcDriver).newInstance();</span><br><span class="line">        Properties prop = <span class="keyword">new</span> Properties();</span><br><span class="line">        prop.setProperty(<span class="string">"user"</span>, conf.get(LINEAGE_DB_USER));</span><br><span class="line">        prop.setProperty(<span class="string">"password"</span>, conf.get(LINEAGE_DB_PASSWORD));</span><br><span class="line">        Connection conn = driver.connect(conf.get(LINEAGE_DB_URL), prop);</span><br><span class="line">        conn.setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">return</span> conn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getInsertLineageSql</span><span class="params">(HiveConf conf)</span> </span>&#123;</span><br><span class="line">        String table = conf.get(LINEAGE_DB_TABLE);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"insert into "</span> + table</span><br><span class="line">                + <span class="string">"(`logtime`, `sql`, `user`, `timestamp`, `duration`, `jobids`, `engine`, `database`, `datasource`) "</span></span><br><span class="line">                + <span class="string">"values(?, ?, ?, ?, ?, ?, ?, ?, ?)"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">closeResources</span><span class="params">(Connection conn, Statement stmt, ResultSet rs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                rs.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                LOG.error(<span class="string">"Error closing ResultSet: "</span> + e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (stmt != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                stmt.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                System.err.println(<span class="string">"Error closing Statement: "</span> + e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                System.err.println(<span class="string">"Error closing Connection: "</span> + e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="hive-site-xml"><a href="#hive-site-xml" class="headerlink" title="hive-site.xml"></a>hive-site.xml</h4><p>添加自定义Hook类配置，有两种SQL存储策略：Kafka和JDBC，选择一种配置。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.exec.post.hooks<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.xyueji.traffic.hive.SqlCollectionHook<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span>Comma-separated list of post-execution hooks to be invoked for each statement.  A post-execution hook is specified as the name of a Java class which implements the org.apache.hadoop.hive.ql.hooks.ExecuteWithHookContext interface.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--kafka存储策略--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>lineage.sql.strategy<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>kafka<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>lineage.bootstrap.servers<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>localhost:9092<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>lineage.topic<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>lineage_sql<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--jdbc存储策略--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  &lt;property&gt;</span></span><br><span class="line"><span class="comment">  &lt;name&gt;lineage.sql.strategy&lt;/name&gt;</span></span><br><span class="line"><span class="comment">  &lt;value&gt;jdbc&lt;/value&gt;</span></span><br><span class="line"><span class="comment">&lt;/property&gt;</span></span><br><span class="line"><span class="comment">&lt;property&gt;</span></span><br><span class="line"><span class="comment">  &lt;name&gt;lineage.db.driver&lt;/name&gt;</span></span><br><span class="line"><span class="comment">  &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;</span></span><br><span class="line"><span class="comment">&lt;/property&gt;</span></span><br><span class="line"><span class="comment">&lt;property&gt;</span></span><br><span class="line"><span class="comment">  &lt;name&gt;lineage.db.url&lt;/name&gt;</span></span><br><span class="line"><span class="comment">  &lt;value&gt;jdbc:mysql://<span class="doctag">xxx:</span>3306/traffic?useUnicode=true&amp;characterEncoding=utf-8&lt;/value&gt;</span></span><br><span class="line"><span class="comment">&lt;/property&gt;</span></span><br><span class="line"><span class="comment">&lt;property&gt;</span></span><br><span class="line"><span class="comment">  &lt;name&gt;lineage.db.user&lt;/name&gt;</span></span><br><span class="line"><span class="comment">  &lt;value&gt;xxx&lt;/value&gt;</span></span><br><span class="line"><span class="comment">&lt;/property&gt;</span></span><br><span class="line"><span class="comment">&lt;property&gt;</span></span><br><span class="line"><span class="comment">  &lt;name&gt;lineage.db.password&lt;/name&gt;</span></span><br><span class="line"><span class="comment">  &lt;value&gt;xxx&lt;/value&gt;</span></span><br><span class="line"><span class="comment">&lt;/property&gt;</span></span><br><span class="line"><span class="comment">&lt;property&gt;</span></span><br><span class="line"><span class="comment">  &lt;name&gt;lineage.db.table&lt;/name&gt;</span></span><br><span class="line"><span class="comment">  &lt;value&gt;lineage_sql&lt;/value&gt;</span></span><br><span class="line"><span class="comment">&lt;/property&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>重启Hive metastore使Hive Hook生效</p></blockquote><h3 id="SQL解析"><a href="#SQL解析" class="headerlink" title="SQL解析"></a>SQL解析</h3><p>参考Hive源码模仿编写SQL解析工具，先经过类进行语法分析，再根据Schema生成执行计划QueryPlan。字段血缘可根据LineageLogger类进行实现，表血缘根据字段血缘获取。</p><h4 id="SQLParse2"><a href="#SQLParse2" class="headerlink" title="SQLParse2"></a>SQLParse2</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.hive;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.stream.JsonWriter;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.codec.digest.DigestUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.SetUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.output.StringBuilderWriter;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.time.DateFormatUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.common.ObjectPair;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.conf.HiveConf;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.metastore.api.FieldSchema;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.metastore.api.Schema;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.Context;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.Driver;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.QueryPlan;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.QueryState;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.ColumnInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.SelectOperator;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.exec.Utilities;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.hooks.Entity;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.hooks.LineageInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.hooks.WriteEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.metadata.Table;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.optimizer.lineage.LineageCtx.Index;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.parse.ASTNode;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.parse.BaseSemanticAnalyzer;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.parse.ParseUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.parse.SemanticAnalyzerFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.plan.HiveOperation;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.hive.ql.session.SessionState;</span><br><span class="line"><span class="keyword">import</span> org.joor.Reflect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-08-11 11:58</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SQLParse2</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DATE_FORMAT = <span class="string">"yyyy-MM-dd HH:mm:ss"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Edge</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;Vertex&gt; sources;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;Vertex&gt; targets;</span><br><span class="line">        <span class="keyword">private</span> String expr;</span><br><span class="line">        <span class="keyword">private</span> HiveOperation operation;</span><br><span class="line"></span><br><span class="line">        Edge(Set&lt;Vertex&gt; sources, Set&lt;Vertex&gt; targets, String expr, HiveOperation operation) &#123;</span><br><span class="line">            <span class="keyword">this</span>.sources = sources;</span><br><span class="line">            <span class="keyword">this</span>.targets = targets;</span><br><span class="line">            <span class="keyword">this</span>.expr = expr;</span><br><span class="line">            <span class="keyword">this</span>.operation = operation;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;Vertex&gt; <span class="title">getSources</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> sources;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSources</span><span class="params">(Set&lt;Vertex&gt; sources)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.sources = sources;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;Vertex&gt; <span class="title">getTargets</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> targets;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTargets</span><span class="params">(Set&lt;Vertex&gt; targets)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.targets = targets;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getExpr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> expr;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExpr</span><span class="params">(String expr)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.expr = expr;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> HiveOperation <span class="title">getOperation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> operation;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOperation</span><span class="params">(HiveOperation operation)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.operation = operation;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Vertex</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">enum</span> Type &#123;</span><br><span class="line">            COLUMN, TABLE</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">enum</span> Status &#123;</span><br><span class="line">            OFFLINE, ONLINE</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Vertex.Type type;</span><br><span class="line">        <span class="keyword">private</span> String createAt;</span><br><span class="line">        <span class="keyword">private</span> String db;</span><br><span class="line">        <span class="keyword">private</span> String owner;</span><br><span class="line">        <span class="keyword">private</span> String table;</span><br><span class="line">        <span class="keyword">private</span> String tableType;</span><br><span class="line">        <span class="keyword">private</span> String col;</span><br><span class="line">        <span class="keyword">private</span> String colType;</span><br><span class="line">        <span class="keyword">private</span> Vertex.Status status;</span><br><span class="line">        <span class="keyword">private</span> String md5;</span><br><span class="line"></span><br><span class="line">        Vertex(Type type, String createAt, String db, String owner, String table, String tableType, Status status, String md5) &#123;</span><br><span class="line">            <span class="keyword">this</span>.type = type;</span><br><span class="line">            <span class="keyword">this</span>.createAt = createAt;</span><br><span class="line">            <span class="keyword">this</span>.db = db;</span><br><span class="line">            <span class="keyword">this</span>.owner = owner;</span><br><span class="line">            <span class="keyword">this</span>.table = table;</span><br><span class="line">            <span class="keyword">this</span>.tableType = tableType;</span><br><span class="line">            <span class="keyword">this</span>.status = status;</span><br><span class="line">            <span class="keyword">this</span>.md5 = md5;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Vertex(Type type, String createAt, String db, String owner, String table, String tableType, String col, String colType, Status status, String md5) &#123;</span><br><span class="line">            <span class="keyword">this</span>(type, createAt, db, owner, table, tableType, status, md5);</span><br><span class="line">            <span class="keyword">this</span>.col = col;</span><br><span class="line">            <span class="keyword">this</span>.colType = colType;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            result = result * <span class="number">31</span> + type.hashCode();</span><br><span class="line">            result = result * <span class="number">31</span> + db.hashCode();</span><br><span class="line">            result = result * <span class="number">31</span> + table.hashCode();</span><br><span class="line">            result = result * <span class="number">31</span> + (col == <span class="keyword">null</span> ? <span class="number">0</span> : col.hashCode());</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span> == obj) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!(obj <span class="keyword">instanceof</span> SQLParse2.Vertex)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            SQLParse2.Vertex vertex = (SQLParse2.Vertex) obj;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (type != <span class="keyword">null</span> &amp;&amp; !type.equals(vertex.type)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (db != <span class="keyword">null</span> &amp;&amp; !db.equals(vertex.db)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (table != <span class="keyword">null</span> &amp;&amp; !table.equals(vertex.table)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (col != <span class="keyword">null</span> &amp;&amp; !col.equals(vertex.col)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Type <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> type;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setType</span><span class="params">(Type type)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.type = type;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getCreateAt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> createAt;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateAt</span><span class="params">(String createAt)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.createAt = createAt;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getDb</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> db;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDb</span><span class="params">(String db)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.db = db;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getOwner</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> owner;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOwner</span><span class="params">(String owner)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.owner = owner;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getTable</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> table;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTable</span><span class="params">(String table)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.table = table;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getTableType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> tableType;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTableType</span><span class="params">(String tableType)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.tableType = tableType;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getCol</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> col;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCol</span><span class="params">(String col)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.col = col;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getColType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> colType;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColType</span><span class="params">(String colType)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.colType = colType;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Status <span class="title">getStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> status;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatus</span><span class="params">(Status status)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.status = status;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getMd5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> md5;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMd5</span><span class="params">(String md5)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.md5 = md5;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HiveConf conf = <span class="keyword">new</span> HiveConf();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        conf.setVar(HiveConf.ConfVars.HIVE_AUTHORIZATION_MANAGER,</span><br><span class="line">                <span class="string">"org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdHiveAuthorizerFactory"</span>);</span><br><span class="line">        conf.setVar(HiveConf.ConfVars.DYNAMICPARTITIONINGMODE, <span class="string">"nonstrict"</span>);</span><br><span class="line">        conf.setVar(HiveConf.ConfVars.HIVE_TXN_MANAGER, <span class="string">"org.apache.hadoop.hive.ql.lockmgr.DbTxnManager"</span>);</span><br><span class="line">        conf.setVar(HiveConf.ConfVars.METASTOREURIS, <span class="string">"thrift://hadoop3:9083"</span>);</span><br><span class="line">        conf.setVar(HiveConf.ConfVars.DOWNLOADED_RESOURCES_DIR, <span class="string">"/tmp/hive"</span>);</span><br><span class="line">        conf.setVar(HiveConf.ConfVars.METASTOREWAREHOUSE, <span class="string">"/tmp/user/hive/warehouse"</span>);</span><br><span class="line">        conf.setVar(HiveConf.ConfVars.LOCALSCRATCHDIR, <span class="string">"/tmp"</span>);</span><br><span class="line">        conf.setVar(HiveConf.ConfVars.POSTEXECHOOKS, <span class="string">"org.apache.hadoop.hive.ql.hooks.PostExecutePrinter"</span>);</span><br><span class="line"></span><br><span class="line">        SessionState.start(conf);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"insert overwrite table temp select coalesce(blockid, EXPONENT) blockid_exponent from ods.road_real_time group by blockid, EXPONENT limit 10"</span>;</span><br><span class="line">        SQLParse2 sqlParse2 = <span class="keyword">new</span> SQLParse2();</span><br><span class="line">        sqlParse2.run(sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Edge&gt; <span class="title">run</span><span class="params">(String query)</span> </span>&#123;</span><br><span class="line">        init();</span><br><span class="line">        List&lt;Edge&gt; edges = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            QueryState queryState = <span class="keyword">new</span> QueryState(conf);</span><br><span class="line">            Context context = <span class="keyword">new</span> Context(conf);</span><br><span class="line"></span><br><span class="line">            context.setHDFSCleanup(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            ASTNode astNode = ParseUtils.parse(query, context);</span><br><span class="line"></span><br><span class="line">            BaseSemanticAnalyzer sem = SemanticAnalyzerFactory.get(queryState, astNode);</span><br><span class="line"></span><br><span class="line">            sem.analyze(astNode, context);</span><br><span class="line"></span><br><span class="line">            Schema schema = Reflect.on(Driver.class).call(<span class="string">"getSchema"</span>, sem, conf).get();</span><br><span class="line">            QueryPlan plan = <span class="keyword">new</span> QueryPlan(query, sem, <span class="number">0L</span>, <span class="keyword">null</span>, queryState.getHiveOperation(), schema);</span><br><span class="line"></span><br><span class="line">            Index index = SessionState.get() != <span class="keyword">null</span> ?</span><br><span class="line">                    SessionState.get().getLineageState().getIndex() : <span class="keyword">new</span> Index();</span><br><span class="line"></span><br><span class="line">            edges = getEdges(plan, index);</span><br><span class="line">            Set&lt;Vertex&gt; vertices = getVertices(edges);</span><br><span class="line"></span><br><span class="line">            StringBuilderWriter out = <span class="keyword">new</span> StringBuilderWriter(<span class="number">1024</span>);</span><br><span class="line">            JsonWriter writer = <span class="keyword">new</span> JsonWriter(out);</span><br><span class="line">            writer.beginObject();</span><br><span class="line">            writeEdges(writer, edges);</span><br><span class="line">            writeVertices(writer, vertices);</span><br><span class="line">            writer.endObject();</span><br><span class="line">            writer.close();</span><br><span class="line">            System.out.println(out.toString());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 此处还可构建任务血缘，根据hive（ExecuteWithHookContext）、spark(SparkListener)、presto(EventListener)收集的sql以及任务信息（可参考LineageLogger）</span></span><br><span class="line">            <span class="comment">// TODO 构建任务血缘</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// TODO 根据DDL操作更新图信息</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log(<span class="string">"SQL parse failed, msg is : "</span></span><br><span class="line">                    + org.apache.hadoop.util.StringUtils.stringifyException(e));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> edges;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Logger an error to console if available.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">log</span><span class="params">(String error)</span> </span>&#123;</span><br><span class="line">        SessionState.LogHelper console = SessionState.getConsole();</span><br><span class="line">        <span class="keyword">if</span> (console != <span class="keyword">null</span>) &#123;</span><br><span class="line">            console.printError(error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Based on the final select operator, find out all the target columns.</span></span><br><span class="line"><span class="comment">     * For each target column, find out its sources based on the dependency index.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Edge&gt; <span class="title">getEdges</span><span class="params">(QueryPlan plan, Index index)</span> </span>&#123;</span><br><span class="line">        LinkedHashMap&lt;String, ObjectPair&lt;SelectOperator,</span><br><span class="line">                Table&gt;&gt; finalSelOps = index.getFinalSelectOps();</span><br><span class="line">        Map&lt;String, Vertex&gt; vertexCache = <span class="keyword">new</span> LinkedHashMap&lt;String, Vertex&gt;();</span><br><span class="line">        List&lt;Edge&gt; edges = <span class="keyword">new</span> ArrayList&lt;Edge&gt;();</span><br><span class="line">        <span class="keyword">for</span> (ObjectPair&lt;SelectOperator,</span><br><span class="line">                org.apache.hadoop.hive.ql.metadata.Table&gt; pair : finalSelOps.values()) &#123;</span><br><span class="line">            List&lt;FieldSchema&gt; fieldSchemas = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            SelectOperator finalSelOp = pair.getFirst();</span><br><span class="line">            org.apache.hadoop.hive.ql.metadata.Table t = pair.getSecond();</span><br><span class="line">            List&lt;String&gt; colNames = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (t != <span class="keyword">null</span>) &#123;</span><br><span class="line">                fieldSchemas = t.getCols();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Based on the plan outputs, find out the target table name and column names.</span></span><br><span class="line">                <span class="keyword">for</span> (WriteEntity output : plan.getOutputs()) &#123;</span><br><span class="line">                    Entity.Type entityType = output.getType();</span><br><span class="line">                    <span class="keyword">if</span> (entityType == Entity.Type.TABLE</span><br><span class="line">                            || entityType == Entity.Type.PARTITION) &#123;</span><br><span class="line">                        t = output.getTable();</span><br><span class="line">                        fieldSchemas = t.getCols();</span><br><span class="line">                        List&lt;FieldSchema&gt; cols = t.getCols();</span><br><span class="line">                        <span class="keyword">if</span> (cols != <span class="keyword">null</span> &amp;&amp; !cols.isEmpty()) &#123;</span><br><span class="line">                            colNames = Utilities.getColumnNamesFromFieldSchema(cols);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Map&lt;ColumnInfo, LineageInfo.Dependency&gt; colMap = index.getDependencies(finalSelOp);</span><br><span class="line">            List&lt;LineageInfo.Dependency&gt; dependencies = colMap != <span class="keyword">null</span> ? Lists.newArrayList(colMap.values()) : <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">int</span> fields = fieldSchemas.size();</span><br><span class="line">            <span class="keyword">if</span> (t != <span class="keyword">null</span> &amp;&amp; colMap != <span class="keyword">null</span> &amp;&amp; fields &lt; colMap.size()) &#123;</span><br><span class="line">                <span class="comment">// Dynamic partition keys should be added to field schemas.</span></span><br><span class="line">                List&lt;FieldSchema&gt; partitionKeys = t.getPartitionKeys();</span><br><span class="line">                <span class="keyword">int</span> dynamicKeyCount = colMap.size() - fields;</span><br><span class="line">                <span class="keyword">int</span> keyOffset = partitionKeys.size() - dynamicKeyCount;</span><br><span class="line">                <span class="keyword">if</span> (keyOffset &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    fields += dynamicKeyCount;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dynamicKeyCount; i++) &#123;</span><br><span class="line">                        FieldSchema field = partitionKeys.get(keyOffset + i);</span><br><span class="line">                        fieldSchemas.add(field);</span><br><span class="line">                        <span class="keyword">if</span> (colNames != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            colNames.add(field.getName());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (dependencies == <span class="keyword">null</span> || dependencies.size() != fields) &#123;</span><br><span class="line">                log(<span class="string">"Result schema has "</span> + fields</span><br><span class="line">                        + <span class="string">" fields, but we don't get as many dependencies"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Go through each target column, generate the lineage edges.</span></span><br><span class="line">                Set&lt;Vertex&gt; targets = <span class="keyword">new</span> LinkedHashSet&lt;Vertex&gt;();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fields; i++) &#123;</span><br><span class="line">                    Vertex target = getOrCreateVertex(vertexCache,</span><br><span class="line">                            t.getTTable(), fieldSchemas.get(i),</span><br><span class="line">                            Vertex.Type.COLUMN);</span><br><span class="line"></span><br><span class="line">                    targets.add(target);</span><br><span class="line"></span><br><span class="line">                    LineageInfo.Dependency dep = dependencies.get(i);</span><br><span class="line">                    addEdge(vertexCache, edges, dep.getBaseCols(), target,</span><br><span class="line">                            dep.getExpr(), plan.getOperation());</span><br><span class="line"></span><br><span class="line">                    Vertex tTarget = getOrCreateVertex(vertexCache,</span><br><span class="line">                            t.getTTable(), <span class="keyword">null</span>,</span><br><span class="line">                            Vertex.Type.TABLE);</span><br><span class="line">                    targets.add(target);</span><br><span class="line">                    <span class="keyword">for</span> (LineageInfo.BaseColumnInfo baseCol : dep.getBaseCols()) &#123;</span><br><span class="line">                        baseCol.setColumn(<span class="keyword">null</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    addEdge(vertexCache, edges, dep.getBaseCols(), tTarget,</span><br><span class="line">                            plan.getQueryString(), plan.getOperation());</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                Set&lt;LineageInfo.Predicate&gt; conds = index.getPredicates(finalSelOp);</span><br><span class="line">                <span class="keyword">if</span> (conds != <span class="keyword">null</span> &amp;&amp; !conds.isEmpty()) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (LineageInfo.Predicate cond : conds) &#123;</span><br><span class="line">                        addEdge(vertexCache, edges, cond.getBaseCols(),</span><br><span class="line">                                <span class="keyword">new</span> LinkedHashSet&lt;Vertex&gt;(targets), cond.getExpr(), plan.getOperation());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> edges;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(Map&lt;String, Vertex&gt; vertexCache, List&lt;Edge&gt; edges,</span></span></span><br><span class="line"><span class="function"><span class="params">                         Set&lt;LineageInfo.BaseColumnInfo&gt; srcCols, Vertex target, String expr, HiveOperation operation)</span> </span>&#123;</span><br><span class="line">        Set&lt;Vertex&gt; targets = <span class="keyword">new</span> LinkedHashSet&lt;Vertex&gt;();</span><br><span class="line">        targets.add(target);</span><br><span class="line">        addEdge(vertexCache, edges, srcCols, targets, expr, operation);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Find an edge from all edges that has the same source vertices.</span></span><br><span class="line"><span class="comment">     * If found, add the more targets to this edge's target vertex list.</span></span><br><span class="line"><span class="comment">     * Otherwise, create a new edge and add to edge list.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(Map&lt;String, Vertex&gt; vertexCache, List&lt;Edge&gt; edges,</span></span></span><br><span class="line"><span class="function"><span class="params">                         Set&lt;LineageInfo.BaseColumnInfo&gt; srcCols, Set&lt;Vertex&gt; targets, String expr, HiveOperation operation)</span> </span>&#123;</span><br><span class="line">        Set&lt;Vertex&gt; sources = createSourceVertices(vertexCache, srcCols);</span><br><span class="line">        Edge edge = findSimilarEdgeBySources(edges, sources, expr, operation);</span><br><span class="line">        <span class="keyword">if</span> (edge == <span class="keyword">null</span>) &#123;</span><br><span class="line">            edges.add(<span class="keyword">new</span> Edge(sources, targets, expr, operation));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            edge.targets.addAll(targets);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Convert a list of columns to a set of vertices.</span></span><br><span class="line"><span class="comment">     * Use cached vertices if possible.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Set&lt;Vertex&gt; <span class="title">createSourceVertices</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            Map&lt;String, Vertex&gt; vertexCache, Collection&lt;LineageInfo.BaseColumnInfo&gt; baseCols)</span> </span>&#123;</span><br><span class="line">        Set&lt;Vertex&gt; sources = <span class="keyword">new</span> LinkedHashSet&lt;Vertex&gt;();</span><br><span class="line">        <span class="keyword">if</span> (baseCols != <span class="keyword">null</span> &amp;&amp; !baseCols.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">for</span> (LineageInfo.BaseColumnInfo col : baseCols) &#123;</span><br><span class="line">                org.apache.hadoop.hive.metastore.api.Table table = col.getTabAlias().getTable();</span><br><span class="line">                <span class="keyword">if</span> (table.isTemporary()) &#123;</span><br><span class="line">                    <span class="comment">// Ignore temporary tables</span></span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Vertex.Type type = Vertex.Type.TABLE;</span><br><span class="line">                FieldSchema fieldSchema = col.getColumn();</span><br><span class="line">                <span class="keyword">if</span> (fieldSchema != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    type = Vertex.Type.COLUMN;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                sources.add(getOrCreateVertex(vertexCache, table, fieldSchema, type));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sources;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Find a vertex from a cache, or create one if not.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Vertex <span class="title">getOrCreateVertex</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            Map&lt;String, Vertex&gt; vertices, org.apache.hadoop.hive.metastore.api.Table t, FieldSchema fieldSchema, Vertex.Type type)</span> </span>&#123;</span><br><span class="line">        Vertex vertex;</span><br><span class="line">        <span class="keyword">if</span> (type.equals(Vertex.Type.TABLE)) &#123;</span><br><span class="line">            String key = getMd5Hash(type.name() + <span class="string">"."</span> + t.getDbName() + <span class="string">"."</span> + t.getTableName());</span><br><span class="line">            vertex = vertices.get(key);</span><br><span class="line">            <span class="keyword">if</span> (vertex == <span class="keyword">null</span>) &#123;</span><br><span class="line">                vertex = <span class="keyword">new</span> Vertex(type, DateFormatUtils.format(<span class="keyword">new</span> Date(t.getCreateTime() * <span class="number">1000L</span>), DATE_FORMAT), t.getDbName(),</span><br><span class="line">                        t.getOwner(), t.getTableName(), t.getTableType(), Vertex.Status.ONLINE, key);</span><br><span class="line">                vertices.put(key, vertex);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            String key = getMd5Hash(type.name() + <span class="string">"."</span> + t.getDbName() + <span class="string">"."</span> + t.getTableName() + <span class="string">"."</span> + fieldSchema.getName());</span><br><span class="line">            vertex = vertices.get(key);</span><br><span class="line">            <span class="keyword">if</span> (vertex == <span class="keyword">null</span>) &#123;</span><br><span class="line">                vertex = <span class="keyword">new</span> Vertex(type, DateFormatUtils.format(<span class="keyword">new</span> Date(t.getCreateTime() * <span class="number">1000L</span>), DATE_FORMAT), t.getDbName(),</span><br><span class="line">                        t.getOwner(), t.getTableName(), t.getTableType(), fieldSchema.getName(), fieldSchema.getType(), Vertex.Status.ONLINE, key);</span><br><span class="line">                vertices.put(key, vertex);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> vertex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Find an edge that has the same type, expression, and sources.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Edge <span class="title">findSimilarEdgeBySources</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            List&lt;Edge&gt; edges, Set&lt;Vertex&gt; sources, String expr, HiveOperation operation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Edge edge : edges) &#123;</span><br><span class="line">            <span class="keyword">if</span> (edge.operation == operation &amp;&amp; StringUtils.equals(edge.expr, expr)</span><br><span class="line">                    &amp;&amp; SetUtils.isEqualSet(edge.sources, sources)) &#123;</span><br><span class="line">                <span class="keyword">return</span> edge;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get all the vertices of all edges. Targets at first,</span></span><br><span class="line"><span class="comment">     * then sources. Assign id to each vertex.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Vertex&gt; <span class="title">getVertices</span><span class="params">(List&lt;Edge&gt; edges)</span> </span>&#123;</span><br><span class="line">        Set&lt;Vertex&gt; vertices = <span class="keyword">new</span> LinkedHashSet&lt;Vertex&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Edge edge : edges) &#123;</span><br><span class="line">            vertices.addAll(edge.targets);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (Edge edge : edges) &#123;</span><br><span class="line">            vertices.addAll(edge.sources);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> vertices;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Generate query string md5 hash.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getMd5Hash</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DigestUtils.md5Hex(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Write out an JSON array of edges.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeEdges</span><span class="params">(JsonWriter writer, List&lt;SQLParse2.Edge&gt; edges)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        writer.name(<span class="string">"edges"</span>);</span><br><span class="line">        writer.beginArray();</span><br><span class="line">        <span class="keyword">for</span> (SQLParse2.Edge edge : edges) &#123;</span><br><span class="line">            writer.beginObject();</span><br><span class="line">            writer.name(<span class="string">"sources"</span>);</span><br><span class="line">            writer.beginArray();</span><br><span class="line">            <span class="keyword">for</span> (SQLParse2.Vertex vertex : edge.sources) &#123;</span><br><span class="line">                writer.value(vertex.md5);</span><br><span class="line">            &#125;</span><br><span class="line">            writer.endArray();</span><br><span class="line">            writer.name(<span class="string">"targets"</span>);</span><br><span class="line">            writer.beginArray();</span><br><span class="line">            <span class="keyword">for</span> (SQLParse2.Vertex vertex : edge.targets) &#123;</span><br><span class="line">                writer.value(vertex.md5);</span><br><span class="line">            &#125;</span><br><span class="line">            writer.endArray();</span><br><span class="line">            <span class="keyword">if</span> (edge.expr != <span class="keyword">null</span>) &#123;</span><br><span class="line">                writer.name(<span class="string">"expr"</span>).value(edge.expr);</span><br><span class="line">            &#125;</span><br><span class="line">            writer.name(<span class="string">"operation"</span>).value(edge.operation.name());</span><br><span class="line">            writer.endObject();</span><br><span class="line">        &#125;</span><br><span class="line">        writer.endArray();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Write out an JSON array of vertices.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeVertices</span><span class="params">(JsonWriter writer, Set&lt;SQLParse2.Vertex&gt; vertices)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        writer.name(<span class="string">"vertices"</span>);</span><br><span class="line">        writer.beginArray();</span><br><span class="line">        <span class="keyword">for</span> (SQLParse2.Vertex vertex : vertices) &#123;</span><br><span class="line">            writer.beginObject();</span><br><span class="line">            writer.name(<span class="string">"md5"</span>).value(vertex.md5);</span><br><span class="line">            writer.name(<span class="string">"type"</span>).value(vertex.type.name());</span><br><span class="line">            writer.name(<span class="string">"createAt"</span>).value(vertex.createAt);</span><br><span class="line">            writer.name(<span class="string">"db"</span>).value(vertex.db);</span><br><span class="line">            writer.name(<span class="string">"owner"</span>).value(vertex.owner);</span><br><span class="line">            writer.name(<span class="string">"table"</span>).value(vertex.table);</span><br><span class="line">            writer.name(<span class="string">"tableType"</span>).value(vertex.tableType);</span><br><span class="line">            writer.name(<span class="string">"col"</span>).value(vertex.col);</span><br><span class="line">            writer.name(<span class="string">"colType"</span>).value(vertex.colType);</span><br><span class="line">            writer.name(<span class="string">"status"</span>).value(vertex.status.name());</span><br><span class="line">            writer.endObject();</span><br><span class="line">        &#125;</span><br><span class="line">        writer.endArray();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意事项</p></blockquote><ul><li>开启血缘信息：查看hive源码发现hive的hive.exec.post.hooks配置需要包含org.apache.hadoop.hive.ql.hooks.PostExecutePrinter、org.apache.hadoop.hive.ql.hooks.LineageLogger或org.apache.atlas.hive.hook.HiveHook中任意一个Hook函数，SessionState中才会有血缘关系。因此可以在配置中加入其中任意一个Hook配置：conf.setVar(HiveConf.ConfVars.POSTEXECHOOKS, “org.apache.hadoop.hive.ql.hooks.PostExecutePrinter”)。</li></ul><p>相关代码可以参见SemanticAnalyzer类：</p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20210903170253930.png" alt="image-20210903170253930"></p><ul><li>过滤表/视图存在与否检测：修改SemanticAnalyzer中检查表/视图存在与否的代码，重新打包，使SQL解析工具使用这个hive-exec-2.3.7.jar这个包。不然SQL解析过程中会报错。</li><li>开启动态分区非严格模式：conf.setVar(HiveConf.ConfVars.DYNAMICPARTITIONINGMODE, “nonstrict”)</li></ul><h4 id="Flink任务"><a href="#Flink任务" class="headerlink" title="Flink任务"></a>Flink任务</h4><p>有了SQL解析工具后，就可以编写Flink程序消费Kafka数据解析SQL，然后录入JanusGraph。本文只提供录入JanusGraph方案，录入ElasticSearch请自行实现。</p><h5 id="LineageTask"><a href="#LineageTask" class="headerlink" title="LineageTask"></a>LineageTask</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.task.service</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.Duration</span><br><span class="line"><span class="keyword">import</span> java.util.Properties</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.core.bean.Constants</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.core.util.&#123;EnvUtil, PropertiesUtil&#125;</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.hive.core.SqlEntity</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.task.function.&#123;LineageBuildMapFunction, LineageProcessWindowFunction&#125;</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.task.sink.LineageToGraphSinkFunction</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.JobExecutionResult</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.eventtime.&#123;SerializableTimestampAssigner, WatermarkStrategy&#125;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.functions.RichMapFunction</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.serialization.SimpleStringSchema</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.scala._</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.configuration.Configuration</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.TimeCharacteristic</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.scala.OutputTag</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.windowing.time.Time</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.windowing.triggers.EventTimeTrigger</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer</span><br><span class="line"><span class="keyword">import</span> org.codehaus.jackson.map.ObjectMapper</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@date</span> 2021-08-17 14:07</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span> </span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LineageTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">buildGraph</span><span class="params">(topic: String, configurationFile: String, remoteTraversalSourceName: String)</span>: JobExecutionResult </span>= &#123;</span><br><span class="line">    val env = EnvUtil.getFlinkStreamEnv()</span><br><span class="line">    env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)</span><br><span class="line">    env.setParallelism(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    val properties = <span class="keyword">new</span> Properties()</span><br><span class="line">    properties.setProperty(Constants.KAFKA_BOOTSTRAP_SERVERS, PropertiesUtil.getValue(Constants.KAFKA_BOOTSTRAP_SERVERS))</span><br><span class="line">    properties.setProperty(Constants.KAFKA_GROUP_ID, PropertiesUtil.getValue(Constants.KAFKA_GROUP_ID))</span><br><span class="line"></span><br><span class="line">    val consumer = <span class="keyword">new</span> FlinkKafkaConsumer[String](topic, <span class="keyword">new</span> SimpleStringSchema(), properties)</span><br><span class="line">    val consumerStream = env.addSource(consumer)</span><br><span class="line">      .map(<span class="keyword">new</span> RichMapFunction[String, SqlEntity] &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">var</span> MAPPER: ObjectMapper = _</span><br><span class="line"></span><br><span class="line">        <span class="function">override def <span class="title">open</span><span class="params">(parameters: Configuration)</span>: Unit </span>= &#123;</span><br><span class="line">          MAPPER = <span class="keyword">new</span> ObjectMapper</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function">override def <span class="title">map</span><span class="params">(element: String)</span>: SqlEntity </span>= &#123;</span><br><span class="line">          MAPPER.readValue[SqlEntity](element, classOf[SqlEntity])</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">    val watermarkStrategy = WatermarkStrategy</span><br><span class="line">      .forBoundedOutOfOrderness[SqlEntity](Duration.ofSeconds(<span class="number">10</span>))</span><br><span class="line">      .withTimestampAssigner(<span class="keyword">new</span> SerializableTimestampAssigner[SqlEntity] &#123;</span><br><span class="line">        <span class="function">override def <span class="title">extractTimestamp</span><span class="params">(sqlEntity: SqlEntity, l: Long)</span>: Long </span>= &#123;</span><br><span class="line">          println(sqlEntity.getTimestamp)</span><br><span class="line">          sqlEntity.getTimestamp</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">    val watermarkStream = consumerStream.assignTimestampsAndWatermarks(watermarkStrategy)</span><br><span class="line"></span><br><span class="line">    val outPutTag = <span class="keyword">new</span> OutputTag[SqlEntity](<span class="string">"late-data"</span>) &#123;&#125;</span><br><span class="line">    val lineageStream = watermarkStream.</span><br><span class="line">      keyBy(_.getDatabase)</span><br><span class="line">      .timeWindow(Time.seconds(<span class="number">20</span>))</span><br><span class="line">      .allowedLateness(Time.seconds(<span class="number">5</span>))</span><br><span class="line">      .sideOutputLateData(outPutTag)</span><br><span class="line">      .trigger(EventTimeTrigger.create())</span><br><span class="line">      .process(<span class="keyword">new</span> LineageProcessWindowFunction)</span><br><span class="line">      .map(<span class="keyword">new</span> LineageBuildMapFunction)</span><br><span class="line"></span><br><span class="line">    lineageStream.addSink(<span class="keyword">new</span> LineageToGraphSinkFunction(configurationFile, remoteTraversalSourceName))</span><br><span class="line">    <span class="comment">//获取迟到太久的数据</span></span><br><span class="line">    val sideOutput = watermarkStream.getSideOutput[SqlEntity](outPutTag)</span><br><span class="line">    val sideOutPutStream = sideOutput.map(<span class="keyword">new</span> LineageBuildMapFunction)</span><br><span class="line">    sideOutPutStream.addSink(<span class="keyword">new</span> LineageToGraphSinkFunction(configurationFile, remoteTraversalSourceName))</span><br><span class="line"></span><br><span class="line">    env.execute()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">object LineageTask &#123;</span><br><span class="line">  <span class="function">def <span class="title">main</span><span class="params">(args: Array[String])</span>: Unit </span>= &#123;</span><br><span class="line">    <span class="keyword">new</span> LineageTask().buildGraph(<span class="string">"lineage_sql"</span>, <span class="string">"remote.yaml"</span>, <span class="string">"hive_traversal"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="SqlEntity"><a href="#SqlEntity" class="headerlink" title="SqlEntity"></a>SqlEntity</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.hive.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-08-17 10:43</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SqlEntity</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String logtime;</span><br><span class="line">    <span class="keyword">private</span> String sql;</span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> timestamp;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> duration;</span><br><span class="line">    <span class="keyword">private</span> String jobids;</span><br><span class="line">    <span class="keyword">private</span> String engine;</span><br><span class="line">    <span class="keyword">private</span> String database;</span><br><span class="line">    <span class="keyword">private</span> String datasource;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SqlEntity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SqlEntity</span><span class="params">(String logtime, String sql, String user, <span class="keyword">long</span> timestamp, <span class="keyword">long</span> duration, String jobids, String engine, String database, String datasource)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.logtime = logtime;</span><br><span class="line">        <span class="keyword">this</span>.sql = sql;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">        <span class="keyword">this</span>.timestamp = timestamp;</span><br><span class="line">        <span class="keyword">this</span>.duration = duration;</span><br><span class="line">        <span class="keyword">this</span>.jobids = jobids;</span><br><span class="line">        <span class="keyword">this</span>.engine = engine;</span><br><span class="line">        <span class="keyword">this</span>.database = database;</span><br><span class="line">        <span class="keyword">this</span>.datasource = datasource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Builder <span class="title">newBuilder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Builder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String logtime;</span><br><span class="line">        <span class="keyword">private</span> String sql;</span><br><span class="line">        <span class="keyword">private</span> String user;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">long</span> timestamp;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">long</span> duration;</span><br><span class="line">        <span class="keyword">private</span> String jobids;</span><br><span class="line">        <span class="keyword">private</span> String engine;</span><br><span class="line">        <span class="keyword">private</span> String database;</span><br><span class="line">        <span class="keyword">private</span> String datasource;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">Builder</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">logtime</span><span class="params">(String logtime)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.logtime = logtime;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">sql</span><span class="params">(String sql)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.sql = sql;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">user</span><span class="params">(String user)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.user = user;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">timestamp</span><span class="params">(<span class="keyword">long</span> timestamp)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.timestamp = timestamp;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">duration</span><span class="params">(<span class="keyword">long</span> duration)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.duration = duration;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">jobids</span><span class="params">(String jobids)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.jobids = jobids;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">engine</span><span class="params">(String engine)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.engine = engine;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">database</span><span class="params">(String database)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.database = database;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">datasource</span><span class="params">(String datasource)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.datasource = datasource;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> SqlEntity <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> SqlEntity(<span class="keyword">this</span>.logtime, <span class="keyword">this</span>.sql, <span class="keyword">this</span>.user, <span class="keyword">this</span>.timestamp, <span class="keyword">this</span>.duration</span><br><span class="line">                    , <span class="keyword">this</span>.jobids, <span class="keyword">this</span>.engine, <span class="keyword">this</span>.database, <span class="keyword">this</span>.datasource);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLogtime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> logtime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLogtime</span><span class="params">(String logtime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.logtime = logtime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSql</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sql;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSql</span><span class="params">(String sql)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sql = sql;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(String user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getTimestamp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> timestamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTimestamp</span><span class="params">(<span class="keyword">long</span> timestamp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.timestamp = timestamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getDuration</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> duration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDuration</span><span class="params">(<span class="keyword">long</span> duration)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.duration = duration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getJobids</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jobids;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJobids</span><span class="params">(String jobids)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.jobids = jobids;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEngine</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> engine;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEngine</span><span class="params">(String engine)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.engine = engine;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDatabase</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> database;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDatabase</span><span class="params">(String database)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.database = database;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDatasource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> datasource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDatasource</span><span class="params">(String datasource)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.datasource = datasource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="LineageProcessWindowFunction"><a href="#LineageProcessWindowFunction" class="headerlink" title="LineageProcessWindowFunction"></a>LineageProcessWindowFunction</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.task.function</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.hive.core.SqlEntity</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.scala.function.ProcessWindowFunction</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.windowing.windows.TimeWindow</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.util.Collector</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.collection.mutable</span><br><span class="line"><span class="keyword">import</span> scala.collection.mutable.ArrayBuffer</span><br><span class="line"><span class="keyword">import</span> scala.util.Sorting</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@date</span> 2021-08-17 15:34</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">class LineageProcessWindowFunction() extends ProcessWindowFunction[SqlEntity, SqlEntity, String, TimeWindow] &#123;</span><br><span class="line">  <span class="function">override def <span class="title">process</span><span class="params">(key: String, context: Context, elements: Iterable[SqlEntity], out: Collector[SqlEntity])</span>: Unit </span>= &#123;</span><br><span class="line">    val arrBuf = ArrayBuffer[Long]()</span><br><span class="line">    val map = <span class="keyword">new</span> mutable.HashMap[Long, SqlEntity]()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//组装结果</span></span><br><span class="line">    elements.map(line =&gt; &#123;</span><br><span class="line">      arrBuf.append(line.getTimestamp)</span><br><span class="line">      map.put(line.getTimestamp, line)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    val arr = arrBuf.toArray</span><br><span class="line">    <span class="comment">//对窗口内的数据按照时间进行排序</span></span><br><span class="line">    Sorting.quickSort(arr)</span><br><span class="line">    val arrayLength = arr.length</span><br><span class="line">    <span class="keyword">for</span> (i &lt;- <span class="number">0</span> until arrayLength) &#123;</span><br><span class="line">      val timestamp = arr(i)</span><br><span class="line">      val sqlEntity = map(timestamp)</span><br><span class="line"></span><br><span class="line">      out.collect(sqlEntity)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="LineageBuildMapFunction"><a href="#LineageBuildMapFunction" class="headerlink" title="LineageBuildMapFunction"></a>LineageBuildMapFunction</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.task.function</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.hive.SQLParse2</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.hive.core.SqlEntity</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.functions.RichMapFunction</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.configuration.Configuration</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@date</span> 2021-08-17 16:18</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">class LineageBuildMapFunction extends RichMapFunction[SqlEntity, java.util.List[SQLParse2.Edge]]&#123;</span><br><span class="line">  <span class="keyword">var</span> sqlParse2: SQLParse2 = _</span><br><span class="line"></span><br><span class="line">  <span class="function">override def <span class="title">open</span><span class="params">(parameters: Configuration)</span>: Unit </span>= &#123;</span><br><span class="line">    sqlParse2 = <span class="keyword">new</span> SQLParse2</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">override def <span class="title">map</span><span class="params">(sqlEntity: SqlEntity)</span>: util.List[SQLParse2.Edge] </span>= &#123;</span><br><span class="line">    sqlParse2.run(sqlEntity.getSql)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="LineageToGraphSinkFunction"><a href="#LineageToGraphSinkFunction" class="headerlink" title="LineageToGraphSinkFunction"></a>LineageToGraphSinkFunction</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.task.sink</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.hive.SQLParse2</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.configuration</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.functions.sink.RichSinkFunction</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.util.SerializableObject</span><br><span class="line"><span class="keyword">import</span> org.apache.tinkerpop.gremlin.driver.Cluster</span><br><span class="line"><span class="keyword">import</span> org.apache.tinkerpop.gremlin.driver.remote.DriverRemoteConnection</span><br><span class="line"><span class="keyword">import</span> org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversalSource</span><br><span class="line"><span class="keyword">import</span> org.apache.tinkerpop.gremlin.structure.util.empty.EmptyGraph</span><br><span class="line"><span class="keyword">import</span> org.apache.tinkerpop.gremlin.structure.&#123;Graph, Vertex&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.collection.JavaConversions._</span><br><span class="line"><span class="keyword">import</span> scala.util.control.Breaks._</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@date</span> 2021-08-17 16:18</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">class LineageToGraphSinkFunction(configurationFile: String, remoteTraversalSourceName: String, maxNumRetries: Int = 3) extends RichSinkFunction[java.util.List[SQLParse2.Edge]] &#123;</span><br><span class="line">  <span class="keyword">var</span> cluster: Cluster = _</span><br><span class="line">  <span class="keyword">var</span> graph: Graph = _</span><br><span class="line">  <span class="keyword">var</span> g: GraphTraversalSource = _</span><br><span class="line">  val lock: SerializableObject = <span class="keyword">new</span> SerializableObject</span><br><span class="line">  <span class="keyword">var</span> isRunning: Boolean = <span class="keyword">true</span></span><br><span class="line">  <span class="keyword">var</span> retries: Int = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 创建连接</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="function">def <span class="title">createConnection</span><span class="params">()</span>: Unit </span>= &#123;</span><br><span class="line">    <span class="comment">//连接Gremlin Server</span></span><br><span class="line">    cluster = Cluster.open(configurationFile)</span><br><span class="line"></span><br><span class="line">    graph = EmptyGraph.instance</span><br><span class="line">    g = graph.traversal.withRemote(DriverRemoteConnection.using(cluster, remoteTraversalSourceName))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">override def <span class="title">open</span><span class="params">(parameters: configuration.Configuration)</span>: Unit </span>= &#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">      <span class="keyword">this</span>.lock <span class="keyword">synchronized</span> <span class="keyword">this</span>.createConnection()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">catch</span> &#123;</span><br><span class="line">      <span class="keyword">case</span> var5: Exception =&gt;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Cannot connect to gremlin server"</span>, var5)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">override def <span class="title">invoke</span><span class="params">(edges: util.List[SQLParse2.Edge])</span>: Unit </span>= &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      addElements(edges)</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">      <span class="keyword">case</span> var12: Exception =&gt;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.maxNumRetries == <span class="number">0</span>) <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Failed to insert elements to graph. Connection re-tries are not enabled."</span>, var12)</span><br><span class="line">        <span class="keyword">this</span>.lock <span class="keyword">synchronized</span> &#123;</span><br><span class="line">          <span class="keyword">var</span> lastException: Exception = <span class="keyword">null</span></span><br><span class="line">          <span class="keyword">this</span>.retries = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">          breakable &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">this</span>.isRunning) &#123;</span><br><span class="line">              <span class="keyword">if</span> (!<span class="keyword">this</span>.isRunning || <span class="keyword">this</span>.maxNumRetries &gt;= <span class="number">0</span> &amp;&amp; <span class="keyword">this</span>.retries &gt;= <span class="keyword">this</span>.maxNumRetries) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.isRunning) <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Failed to insert elements to graph. Failed after "</span> + <span class="keyword">this</span>.retries + <span class="string">" retries."</span>, lastException)</span><br><span class="line">                <span class="keyword">this</span>.isRunning = <span class="keyword">false</span></span><br><span class="line">                <span class="keyword">break</span>() <span class="comment">//todo: break is not supported</span></span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">try</span></span><br><span class="line">                  <span class="keyword">if</span> (g != <span class="keyword">null</span>) g.close()</span><br><span class="line">              <span class="keyword">catch</span> &#123;</span><br><span class="line">                <span class="keyword">case</span> var9: Exception =&gt;</span><br><span class="line">                  println(<span class="string">"Could not close g"</span>, var9)</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">try</span></span><br><span class="line">                  <span class="keyword">if</span> (cluster != <span class="keyword">null</span>) cluster.close()</span><br><span class="line">              <span class="keyword">catch</span> &#123;</span><br><span class="line">                <span class="keyword">case</span> var8: Exception =&gt;</span><br><span class="line">                  println(<span class="string">"Could not close cluster"</span>, var8)</span><br><span class="line">              &#125;</span><br><span class="line">              graph = <span class="keyword">null</span></span><br><span class="line">              <span class="keyword">this</span>.retries += <span class="number">1</span></span><br><span class="line">              <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.createConnection()</span><br><span class="line">                addElements(edges)</span><br><span class="line">              &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">                <span class="keyword">case</span> var10: Exception =&gt;</span><br><span class="line">                  lastException = var10</span><br><span class="line">                  println(<span class="string">"Re-connect to gremlin server failed. Retry time(s): "</span> + <span class="keyword">this</span>.retries, var10)</span><br><span class="line">                  <span class="keyword">this</span>.lock.wait(<span class="number">500L</span>)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">addElements</span><span class="params">(edges: util.List[SQLParse2.Edge])</span>: Unit </span>= &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (edge &lt;- edges) &#123;</span><br><span class="line">      <span class="keyword">for</span> (source &lt;- edge.getSources) &#123;</span><br><span class="line">        val fromV: Vertex = getVertex(source)</span><br><span class="line">        <span class="keyword">for</span> (target &lt;- edge.getTargets) &#123;</span><br><span class="line">          val toV: Vertex = getVertex(target)</span><br><span class="line"></span><br><span class="line">          buildEdge(edge, fromV, toV)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">buildEdge</span><span class="params">(e: SQLParse2.Edge, fromV: Vertex, toV: Vertex)</span>: Unit </span>= &#123;</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isNotEmpty(e.getExpr)) &#123;</span><br><span class="line">      g.addE(e.getOperation.getOperationName).from(fromV).to(toV).property(<span class="string">"expr"</span>, e.getExpr).next()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      g.addE(e.getOperation.getOperationName).from(fromV).to(toV).next()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">getVertex</span><span class="params">(v: SQLParse2.Vertex)</span>: Vertex </span>= &#123;</span><br><span class="line">    val exist = g.V().has(<span class="string">"md5"</span>, v.getMd5).hasNext</span><br><span class="line">    <span class="keyword">if</span> (!exist) &#123;</span><br><span class="line">      v.getType match &#123;</span><br><span class="line">        <span class="keyword">case</span> SQLParse2.Vertex.Type.TABLE =&gt; <span class="keyword">return</span> g.addV(v.getType.name())</span><br><span class="line">          .property(<span class="string">"md5"</span>, v.getMd5)</span><br><span class="line">          .property(<span class="string">"createAt"</span>, v.getCreateAt)</span><br><span class="line">          .property(<span class="string">"db"</span>, v.getDb)</span><br><span class="line">          .property(<span class="string">"owner"</span>, v.getOwner)</span><br><span class="line">          .property(<span class="string">"table"</span>, v.getTable)</span><br><span class="line">          .property(<span class="string">"tableType"</span>, v.getTableType)</span><br><span class="line">          .property(<span class="string">"status"</span>, v.getStatus.name())</span><br><span class="line">          .next()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> SQLParse2.Vertex.Type.COLUMN =&gt; <span class="keyword">return</span> g.addV(v.getType.name())</span><br><span class="line">          .property(<span class="string">"md5"</span>, v.getMd5)</span><br><span class="line">          .property(<span class="string">"createAt"</span>, v.getCreateAt)</span><br><span class="line">          .property(<span class="string">"db"</span>, v.getDb)</span><br><span class="line">          .property(<span class="string">"owner"</span>, v.getOwner)</span><br><span class="line">          .property(<span class="string">"table"</span>, v.getTable)</span><br><span class="line">          .property(<span class="string">"tableType"</span>, v.getTableType)</span><br><span class="line">          .property(<span class="string">"col"</span>, v.getCol)</span><br><span class="line">          .property(<span class="string">"colType"</span>, v.getColType)</span><br><span class="line">          .property(<span class="string">"status"</span>, v.getStatus.name())</span><br><span class="line">          .next()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    g.V().has(<span class="string">"md5"</span>, v.getMd5).next()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">override def <span class="title">close</span><span class="params">()</span>: Unit </span>= &#123;</span><br><span class="line">    <span class="keyword">this</span>.isRunning = <span class="keyword">false</span></span><br><span class="line">    <span class="keyword">this</span>.lock <span class="keyword">synchronized</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.lock.notifyAll()</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (g != <span class="keyword">null</span>) &#123; <span class="comment">// this closes the remote, no need to close the empty graph</span></span><br><span class="line">          g.close()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cluster != <span class="keyword">null</span>) &#123; <span class="comment">// the cluster closes all of its clients</span></span><br><span class="line">          cluster.close()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        g = <span class="keyword">null</span></span><br><span class="line">        graph = <span class="keyword">null</span></span><br><span class="line">        cluster = <span class="keyword">null</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="remote-yaml"><a href="#remote-yaml" class="headerlink" title="remote.yaml"></a>remote.yaml</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hosts:</span> <span class="string">[hadoop2]</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">8182</span></span><br><span class="line"><span class="attr">username:</span> <span class="string">bigdata</span></span><br><span class="line"><span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">serializer:</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">  className:</span> <span class="string">org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV3d0,</span></span><br><span class="line"><span class="attr">  config:</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">    ioRegistries:</span> <span class="string">[org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistry]</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="数据血缘查询"><a href="#数据血缘查询" class="headerlink" title="数据血缘查询"></a>数据血缘查询</h3><p>数据录入JanusGraph后就可以通过连接GremlinServer来查询血缘数据。本文编写一个spark程序例子，查询GremlinServer生成供Echarts使用的图json文件。</p><h4 id="GraphToJsonTask"><a href="#GraphToJsonTask" class="headerlink" title="GraphToJsonTask"></a>GraphToJsonTask</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> spark.com.xyueji.traffic.service</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.core.util.EnvUtil</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.SparkConf</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.sql.SaveMode</span><br><span class="line"><span class="keyword">import</span> spark.com.xyueji.traffic.bean.&#123;Categories, Edge, Vertex&#125;</span><br><span class="line"><span class="keyword">import</span> spark.com.xyueji.traffic.dao.GraphDao</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.collection.JavaConverters._</span><br><span class="line"><span class="keyword">import</span> scala.util.Random</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@date</span> 2021-08-24 11:49</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GraphToJsonTask</span> </span>&#123;</span><br><span class="line">  val graphDao: GraphDao = <span class="keyword">new</span> GraphDao(<span class="string">"remote.yaml"</span>, <span class="string">"hive_traversal"</span>)</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">save</span><span class="params">()</span>: Unit </span>= &#123;</span><br><span class="line">    val conf = <span class="keyword">new</span> SparkConf().setMaster(<span class="string">"local[*]"</span>).setAppName(<span class="string">"GraphToJson"</span>)</span><br><span class="line">    <span class="comment">// 设置序列化器为KryoSerializer。</span></span><br><span class="line">    conf.set(<span class="string">"spark.serializer"</span>, <span class="string">"org.apache.spark.serializer.KryoSerializer"</span>)</span><br><span class="line">    <span class="comment">// 注册要序列化的自定义类型。</span></span><br><span class="line">    conf.registerKryoClasses(Array(classOf[Vertex], classOf[Edge], classOf[Categories]))</span><br><span class="line"></span><br><span class="line">    val spark = EnvUtil.getSparkEnv(conf)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> spark.implicits._</span><br><span class="line"></span><br><span class="line">    val sc = spark.sparkContext</span><br><span class="line"></span><br><span class="line">    val vertexes = graphDao.listAllV()</span><br><span class="line">    val labels = <span class="keyword">new</span> util.HashSet[String]</span><br><span class="line">    vertexes.foreach(v =&gt; &#123;</span><br><span class="line">      labels.add(v.get(<span class="string">"label"</span>).mkString)</span><br><span class="line">    &#125;)</span><br><span class="line">    val bothVertexes = graphDao.listAllBothVertex</span><br><span class="line"></span><br><span class="line">    graphDao.close()</span><br><span class="line">    val vertexesRdd = sc.parallelize(vertexes)</span><br><span class="line">    val labelList = labels.asScala.toList</span><br><span class="line">    val labelsRdd = sc.parallelize(labelList)</span><br><span class="line">    val bothVertexesRdd = sc.parallelize(bothVertexes)</span><br><span class="line"></span><br><span class="line">    val vertexesDF = vertexesRdd.map(v =&gt; &#123;</span><br><span class="line">      val id = v.get(<span class="string">"id"</span>).mkString</span><br><span class="line">      val db = v.get(<span class="string">"db"</span>).mkString</span><br><span class="line">      val table = v.get(<span class="string">"table"</span>).mkString</span><br><span class="line">      val owner = v.get(<span class="string">"owner"</span>).mkString</span><br><span class="line">      val tableType = v.get(<span class="string">"tableType"</span>).mkString</span><br><span class="line">      val col = v.get(<span class="string">"col"</span>).mkString</span><br><span class="line">      val colType = v.get(<span class="string">"colType"</span>).mkString</span><br><span class="line">      val status = v.get(<span class="string">"status"</span>).mkString</span><br><span class="line"></span><br><span class="line">      val category = v.get(<span class="string">"label"</span>).mkString</span><br><span class="line">      val createAt = v.get(<span class="string">"createAt"</span>).mkString</span><br><span class="line"></span><br><span class="line">      <span class="keyword">new</span> Tuple10[String, String, String, String, String, String, String, String, String, String](id, db, table, owner, tableType, col, colType, status, category, createAt)</span><br><span class="line">    &#125;).toDF(<span class="string">"id"</span>, <span class="string">"db"</span>, <span class="string">"table"</span>, <span class="string">"owner"</span>, <span class="string">"tableType"</span>, <span class="string">"col"</span>, <span class="string">"colType"</span>, <span class="string">"status"</span>, <span class="string">"category"</span>, <span class="string">"createAt"</span>)</span><br><span class="line"></span><br><span class="line">    vertexesDF.createOrReplaceTempView(<span class="string">"t_vertex"</span>)</span><br><span class="line"></span><br><span class="line">    val bothVertexesDF = bothVertexesRdd.map(bothV =&gt; &#123;</span><br><span class="line">      val label = bothV._3.get(<span class="string">"label"</span>).mkString</span><br><span class="line">      val expr = bothV._3.get(<span class="string">"expr"</span>).mkString</span><br><span class="line">      <span class="keyword">new</span> Tuple4[String, String, String, String](bothV._1.id().toString, bothV._2.id().toString, label, expr)</span><br><span class="line">    &#125;).toDF(<span class="string">"source"</span>, <span class="string">"target"</span>, <span class="string">"label"</span>, <span class="string">"expr"</span>)</span><br><span class="line">    bothVertexesDF.createOrReplaceTempView(<span class="string">"t_edge"</span>)</span><br><span class="line"></span><br><span class="line">    val categoryDF = labelsRdd.toDF(<span class="string">"category"</span>)</span><br><span class="line">    categoryDF.createOrReplaceTempView(<span class="string">"t_category"</span>)</span><br><span class="line"></span><br><span class="line">    val nodes = spark.sql(</span><br><span class="line">      <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">        | select v.id, v.db, v.table, v.owner, v.tableType, v.col, v.colType, v.status, v.createAt, c.id - 1 category</span></span><br><span class="line"><span class="string">        |  from t_vertex v</span></span><br><span class="line"><span class="string">        |  left join</span></span><br><span class="line"><span class="string">        |  (</span></span><br><span class="line"><span class="string">        |   select row_number() over(order by category) id, category</span></span><br><span class="line"><span class="string">        |   from t_category</span></span><br><span class="line"><span class="string">        |  ) c on v.category = c.category</span></span><br><span class="line"><span class="string">        |</span></span><br><span class="line"><span class="string">      "</span><span class="string">""</span>.stripMargin)</span><br><span class="line">      .collect()</span><br><span class="line">      .map(r =&gt; &#123;</span><br><span class="line">        val id = r.getString(<span class="number">0</span>)</span><br><span class="line">        val db = r.getString(<span class="number">1</span>)</span><br><span class="line">        val table = r.getString(<span class="number">2</span>)</span><br><span class="line">        val owner = r.getString(<span class="number">3</span>)</span><br><span class="line">        val tableType = r.getString(<span class="number">4</span>)</span><br><span class="line">        val col = r.getString(<span class="number">5</span>)</span><br><span class="line">        val colType = r.getString(<span class="number">6</span>)</span><br><span class="line">        val status = r.getString(<span class="number">7</span>)</span><br><span class="line">        val createAt = r.getString(<span class="number">8</span>)</span><br><span class="line">        val category = r.getInt(<span class="number">9</span>)</span><br><span class="line">        val name = <span class="keyword">if</span> (StringUtils.isEmpty(col)) db + <span class="string">"."</span> + table <span class="keyword">else</span> db + <span class="string">"."</span> + table + <span class="string">"."</span> + col</span><br><span class="line">        val w = <span class="number">1000</span></span><br><span class="line">        val h = <span class="number">800</span></span><br><span class="line">        val x = Random.nextInt(w)</span><br><span class="line">        val y = Random.nextInt(h)</span><br><span class="line"></span><br><span class="line">        Vertex(id,</span><br><span class="line">          name,</span><br><span class="line">          db,</span><br><span class="line">          table,</span><br><span class="line">          owner,</span><br><span class="line">          tableType,</span><br><span class="line">          col,</span><br><span class="line">          colType,</span><br><span class="line">          status,</span><br><span class="line">          createAt,</span><br><span class="line">          category,</span><br><span class="line">          x,</span><br><span class="line">          y</span><br><span class="line">        )</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">    val links = spark.sql(</span><br><span class="line">      <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">        | select source, target, label, expr</span></span><br><span class="line"><span class="string">        | from t_edge</span></span><br><span class="line"><span class="string">      "</span><span class="string">""</span>.stripMargin)</span><br><span class="line">      .collect()</span><br><span class="line">      .map(r =&gt; &#123;</span><br><span class="line">        val source = r.getString(<span class="number">0</span>)</span><br><span class="line">        val target = r.getString(<span class="number">1</span>)</span><br><span class="line">        val label = r.getString(<span class="number">2</span>)</span><br><span class="line">        val expr = r.getString(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        Edge(source,</span><br><span class="line">          target,</span><br><span class="line">          label,</span><br><span class="line">          expr</span><br><span class="line">        )</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">    val categories = spark.sql(</span><br><span class="line">      <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">        | select category name</span></span><br><span class="line"><span class="string">        | from t_category</span></span><br><span class="line"><span class="string">        | order by category</span></span><br><span class="line"><span class="string">      "</span><span class="string">""</span>.stripMargin)</span><br><span class="line">      .collect()</span><br><span class="line">      .map(r =&gt; &#123;</span><br><span class="line">        val name = r.getString(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        Categories(name)</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">    sc.parallelize(Array((nodes, links, categories)))</span><br><span class="line">      .toDF(<span class="string">"nodes"</span>, <span class="string">"links"</span>, <span class="string">"categories"</span>)</span><br><span class="line">      .createOrReplaceTempView(<span class="string">"t"</span>)</span><br><span class="line"></span><br><span class="line">    spark.sql(</span><br><span class="line">      <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">        | select *</span></span><br><span class="line"><span class="string">        | from t</span></span><br><span class="line"><span class="string">      "</span><span class="string">""</span>.stripMargin)</span><br><span class="line">      .coalesce(<span class="number">1</span>)</span><br><span class="line">      .write.mode(SaveMode.Overwrite)</span><br><span class="line">      .json(<span class="string">"/graph"</span>)</span><br><span class="line"></span><br><span class="line">    spark.stop()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">object GraphToJsonTask &#123;</span><br><span class="line">  <span class="function">def <span class="title">main</span><span class="params">(args: Array[String])</span>: Unit </span>= &#123;</span><br><span class="line">    <span class="keyword">new</span> GraphToJsonService().save()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="GraphDao"><a href="#GraphDao" class="headerlink" title="GraphDao"></a>GraphDao</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> spark.com.xyueji.traffic.dao</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.tinkerpop.gremlin.driver.Cluster</span><br><span class="line"><span class="keyword">import</span> org.apache.tinkerpop.gremlin.driver.remote.DriverRemoteConnection</span><br><span class="line"><span class="keyword">import</span> org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversalSource</span><br><span class="line"><span class="keyword">import</span> org.apache.tinkerpop.gremlin.structure.util.empty.EmptyGraph</span><br><span class="line"><span class="keyword">import</span> org.apache.tinkerpop.gremlin.structure.&#123;Edge, Graph, Vertex&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.collection.JavaConverters._</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@date</span> 2021-07-07 10:50</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span> </span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GraphDao</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> cluster: Cluster = _</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> graph: Graph = _</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> g: GraphTraversalSource = _</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">this</span><span class="params">(configurationFile: String, remoteTraversalSourceName: String)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>()</span><br><span class="line">    createConnection(configurationFile, remoteTraversalSourceName)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 创建连接</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="function">def <span class="title">createConnection</span><span class="params">(configurationFile: String, remoteTraversalSourceName: String)</span>: Unit </span>= &#123;</span><br><span class="line">    <span class="comment">//连接Gremlin Server</span></span><br><span class="line">    cluster = Cluster.open(configurationFile)</span><br><span class="line"></span><br><span class="line">    graph = EmptyGraph.instance</span><br><span class="line">    g = graph.traversal.withRemote(DriverRemoteConnection.using(cluster, remoteTraversalSourceName))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">close</span><span class="params">()</span>: Unit </span>= &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (g != <span class="keyword">null</span>) &#123; <span class="comment">// this closes the remote, no need to close the empty graph</span></span><br><span class="line">        g.close()</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (cluster != <span class="keyword">null</span>) &#123; <span class="comment">// the cluster closes all of its clients</span></span><br><span class="line">        cluster.close()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      g = <span class="keyword">null</span></span><br><span class="line">      graph = <span class="keyword">null</span></span><br><span class="line">      cluster = <span class="keyword">null</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  def getGraph: GraphTraversalSource = g</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">getV</span><span class="params">(id: AnyRef)</span>: Vertex </span>= &#123;</span><br><span class="line">    g.V(id).next()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">getV</span><span class="params">(key: String, value: String)</span>: Vertex </span>= &#123;</span><br><span class="line">    g.V().has(key, value).next()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">getProperties</span><span class="params">(id: AnyRef)</span>: Map[String, String] </span>= &#123;</span><br><span class="line">    val props = g.V(id).properties()</span><br><span class="line">    val label = getV(id).label()</span><br><span class="line"></span><br><span class="line">    val res = <span class="keyword">new</span> util.HashMap[String, String]()</span><br><span class="line">    res.put(<span class="string">"id"</span>, id.toString)</span><br><span class="line">    res.put(<span class="string">"label"</span>, label)</span><br><span class="line">    <span class="keyword">while</span> (props.hasNext) &#123;</span><br><span class="line">      val prop = props.next()</span><br><span class="line">      res.put(prop.key(), prop.value().toString)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res.asScala.toMap</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">getEdgeProperties</span><span class="params">(id: AnyRef)</span>: Map[String, String] </span>= &#123;</span><br><span class="line">    val props = g.E(id).properties()</span><br><span class="line">    val label = getE(id).label()</span><br><span class="line"></span><br><span class="line">    val res = <span class="keyword">new</span> util.HashMap[String, String]()</span><br><span class="line">    res.put(<span class="string">"id"</span>, id.toString)</span><br><span class="line">    res.put(<span class="string">"label"</span>, label)</span><br><span class="line">    <span class="keyword">while</span> (props.hasNext) &#123;</span><br><span class="line">      val prop = props.next()</span><br><span class="line">      res.put(prop.key(), prop.value().toString)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res.asScala.toMap</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">listAllVertexIds</span><span class="params">()</span>: util.List[AnyRef] </span>= &#123;</span><br><span class="line">    g.V().id().toList</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">listAllV</span><span class="params">()</span>: List[Map[String, String]] </span>= &#123;</span><br><span class="line">    val ids = listAllVertexIds()</span><br><span class="line">    val res = <span class="keyword">new</span> util.ArrayList[Map[String, String]]()</span><br><span class="line">    ids.asScala.foreach(id =&gt; &#123;</span><br><span class="line">      val map = getProperties(id)</span><br><span class="line">      res.add(map)</span><br><span class="line">    &#125;)</span><br><span class="line">    res.asScala.toList</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">getE</span><span class="params">(id: AnyRef)</span>: Edge </span>= &#123;</span><br><span class="line">    g.E(id).next()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  def listAllEdgeIds: util.List[AnyRef] = &#123;</span><br><span class="line">    g.E().id().toList</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">def <span class="title">getBothVertexByEdge</span><span class="params">(edge: Edge)</span>: <span class="params">(Vertex, Vertex, Map[String, String])</span> </span>= &#123;</span><br><span class="line">    (edge.outVertex(), edge.inVertex(), getEdgeProperties(edge.id()))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  def listAllBothVertex: List[(Vertex, Vertex, Map[String, String])] = &#123;</span><br><span class="line">    val ids = listAllEdgeIds</span><br><span class="line">    val res = <span class="keyword">new</span> util.ArrayList[(Vertex, Vertex, Map[String, String])]()</span><br><span class="line">    ids.asScala.foreach(id =&gt; &#123;</span><br><span class="line">      val edge = getE(id)</span><br><span class="line">      res.add(getBothVertexByEdge(edge))</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    res.asScala.toList</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>生成json文件后，Echarts就可以直接使用</p></blockquote><h4 id="Echarts文件"><a href="#Echarts文件" class="headerlink" title="Echarts文件"></a>Echarts文件</h4><p>参考：<a href="https://github.com/xyueji/traffic/blob/master/graph.html" target="_blank" rel="noopener">https://github.com/xyueji/traffic/blob/master/graph.html</a></p><h4 id="效果图-https-xyueji-github-io-traffic-graph-html"><a href="#效果图-https-xyueji-github-io-traffic-graph-html" class="headerlink" title="效果图(https://xyueji.github.io/traffic/graph.html):"></a><a href="https://xyueji.github.io/traffic/graph.html">效果图(https://xyueji.github.io/traffic/graph.html):</a></h4><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20210902172517522.png" alt="image-20210902172517522"></p><p>参考：</p><ul><li><a href="https://dbaplus.cn/news-73-2143-1.html" target="_blank" rel="noopener">饿了么元数据管理实践之路</a></li><li><a href="https://docs.janusgraph.org/" target="_blank" rel="noopener">JanusGraph</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;架构&quot;&gt;&lt;a href=&quot;#架构&quot; class=&quot;headerlink&quot; title=&quot;架构&quot;&gt;&lt;/a&gt;架构&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20210903154320404.png&quot; alt=&quot;image-20210903154320404&quot;&gt;&lt;/p&gt;
&lt;p&gt;首先，我们先了解一下元数据平台架构，主流程是：SQL采集 –》 SQL解析 –》应用层。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SQL采集：针对各种SQL查询引擎，编写相应的钩子函数进行SQL收集，收集内容有执行时间、执行耗时、执行用户、执行引擎、jobId和执行SQL等等，最后把SQL信息入Kafka。Hive是实现ExecuteWithHookContext接口，Presto是实现EventListener接口，Spark是实现SparkListner接口。&lt;/li&gt;
&lt;li&gt;SQL解析：Flink实时消费Kafka数据，进行SQL解析。解析SQL的过程为：定义词法规则和语法规则文件 –》 使用Antlr实现SQL词法和语法解析 –》生成AST语法树 –》遍历AST语法树，考虑到Presto和Spark的SQL语法类似，因此直接参考Hive底层源码实现SQL解析。解析完成后，把血缘信息和元数据信息分别入JanusGraph和ElasticSearch。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="元数据平台" scheme="https://xyueji.github.io/categories/%E5%85%83%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0/"/>
    
    
      <category term="大数据" scheme="https://xyueji.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="hive" scheme="https://xyueji.github.io/tags/hive/"/>
    
      <category term="数据血缘" scheme="https://xyueji.github.io/tags/%E6%95%B0%E6%8D%AE%E8%A1%80%E7%BC%98/"/>
    
      <category term="SQL采集" scheme="https://xyueji.github.io/tags/SQL%E9%87%87%E9%9B%86/"/>
    
      <category term="SQL解析" scheme="https://xyueji.github.io/tags/SQL%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>精准去重-字典编码+Bitmap</title>
    <link href="https://xyueji.github.io/%E7%B2%BE%E5%87%86%E5%8E%BB%E9%87%8D-%E5%AD%97%E5%85%B8%E7%BC%96%E7%A0%81+Bitmap.html"/>
    <id>https://xyueji.github.io/精准去重-字典编码+Bitmap.html</id>
    <published>2021-09-02T08:59:45.000Z</published>
    <updated>2021-09-02T08:59:45.117Z</updated>
    
    <content type="html"><![CDATA[<p>Bitmap的基本思想是以一个bit位来表示一个元素对应的value，即使用bit数组下标来表示元素值，以大大缩小存储空间。BitMap一般用来快速查找、去重、删除等操作，但是它只能用于数字类型。那么如果要使用字符串类型的该怎么办呢？</p><p>这就需要先把字符串字典编码，生成字符串到数字的映射。本文参考kylin的全局字典编码配合RoaringBitmap以实现精准去重。</p><h3 id="AppendTrie树"><a href="#AppendTrie树" class="headerlink" title="AppendTrie树"></a>AppendTrie树</h3><a id="more"></a><p><strong>Trie树</strong></p><p>Trie树又名前缀树，是是一种有序树，一个节点的所有子孙都有相同的前缀，也就是这个节点对应的字符串，根节点对应空字符串，而每个字符串对应的编码值由对应节点在树中的位置来决定。</p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20210902161324316.png" alt="image-20210902161324316"></p><p><strong>AppendTrie树</strong></p><p>Trie 树模型可以实现 Append，有两种方式：</p><ul><li>按照节点 ( 而不是位置 ) 保存 ID，从而保持已有 ID 不变。</li><li>记录当前模型最大 ID，便于给新增节点分配 ID 。</li></ul><p>但是这种模型会带来一个问题：假如基数特别大，Trie 树在内存中就会无限扩张。为了控制内存占用率，选择单颗子树设定阈值，超过即分裂，进而控制单颗子树内存消耗。分裂后，每棵树负责一个范围 ( 类似于 HBase 中的 region 分区 ) ；查询时候只需要查询一颗子树即可。</p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20210902161548529.png" alt="image-20210902161548529"></p><p>注：本文直接使用Kylin构建全局字典类AppendTrieDictionaryBuilder。</p><h3 id="构建字典任务"><a href="#构建字典任务" class="headerlink" title="构建字典任务"></a>构建字典任务</h3><p><strong>BuildDictJob</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.dict;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.core.bean.Constants;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.LongWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.NullWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Partitioner;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.kylin.dict.AppendTrieDictionary;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-07-28 11:07</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 实现文本的固定列精准去重</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BuildDictJob</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(BuildDictJob.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (args.length != <span class="number">2</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"&lt;Usage&gt;: &lt;InputPath&gt; &lt;OutputPath&gt;"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Configuration conf = <span class="keyword">new</span> Configuration();</span><br><span class="line">        conf.set(<span class="string">"dict.zookeeper.quorum"</span>, <span class="string">"hadoop1:2181"</span>);</span><br><span class="line">        conf.set(<span class="string">"dict.znode.lock.bath"</span>, <span class="string">"/dict"</span>);</span><br><span class="line">        conf.set(<span class="string">"dict.datasource"</span>, <span class="string">"traffic"</span>);</span><br><span class="line">        conf.set(<span class="string">"dict.table"</span>, Constants.ROAD_SECT_SPEED_TABLE());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建job</span></span><br><span class="line">        Job job = Job.getInstance(conf);</span><br><span class="line">        job.setJobName(<span class="string">"BuildDictJob"</span>);</span><br><span class="line">        job.setJarByClass(BuildDictJob.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置mapper、reducer</span></span><br><span class="line">        job.setMapperClass(BuildDictMapper.class);</span><br><span class="line">        job.setReducerClass(BuildDictReducer.class);</span><br><span class="line"></span><br><span class="line">        job.setCombinerClass(BuildDictCombine.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置map输出的k-v</span></span><br><span class="line">        job.setMapOutputKeyClass(SelfDefineSortableKey.class);</span><br><span class="line">        job.setMapOutputValueClass(NullWritable.class);</span><br><span class="line"></span><br><span class="line">        job.setPartitionerClass(BuildDictPartitioner.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置最终输出的k-v</span></span><br><span class="line">        job.setOutputKeyClass(NullWritable.class);</span><br><span class="line">        job.setOutputValueClass(NullWritable.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置输入输出路径</span></span><br><span class="line">        FileInputFormat.setInputPaths(job, <span class="keyword">new</span> Path(args[<span class="number">0</span>]));</span><br><span class="line">        FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(args[<span class="number">1</span>]));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> res = job.waitForCompletion(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        System.exit(res ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">BuildDictMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">LongWritable</span>, <span class="title">Text</span>, <span class="title">SelfDefineSortableKey</span>, <span class="title">NullWritable</span>&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String columnIndexes;</span><br><span class="line">        <span class="keyword">private</span> String splitChar;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> maxIndex;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> isLegal;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Text outputKey = <span class="keyword">new</span> Text();</span><br><span class="line">        <span class="keyword">private</span> ByteBuffer tmpBuf;</span><br><span class="line">        <span class="keyword">private</span> SelfDefineSortableKey sortableKey = <span class="keyword">new</span> SelfDefineSortableKey();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">setup</span><span class="params">(Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">            Configuration conf = context.getConfiguration();</span><br><span class="line">            columnIndexes = conf.get(<span class="string">"dict.column.index.quorum"</span>);</span><br><span class="line">            splitChar = conf.get(<span class="string">"dict.column.split.char"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(splitChar)) &#123;</span><br><span class="line">                splitChar = <span class="string">","</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (isLegal = isLegal() &amp;&amp; StringUtils.isNotEmpty(columnIndexes)) &#123;</span><br><span class="line">                maxIndex = getMaxIndex(columnIndexes);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            tmpBuf = ByteBuffer.allocate(<span class="number">4096</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(LongWritable key, Text value, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(columnIndexes)) &#123;</span><br><span class="line">                writeValue(value.toString(), context);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                String line = value.toString();</span><br><span class="line">                String[] fields = line.split(splitChar);</span><br><span class="line">                <span class="keyword">if</span> (isLegal &amp;&amp; maxIndex &lt; fields.length) &#123;</span><br><span class="line">                    String[] indexes = columnIndexes.split(<span class="string">","</span>);</span><br><span class="line">                    StringBuilder val = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                    <span class="keyword">for</span> (String index : indexes) &#123;</span><br><span class="line">                        val.append(fields[Integer.parseInt(index)]).append(splitChar);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    writeValue(val.substring(<span class="number">0</span>, val.length() - <span class="number">1</span>), context);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeValue</span><span class="params">(String value, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">            <span class="keyword">byte</span>[] bytesValue = value.getBytes(Charset.forName(<span class="string">"UTF-8"</span>));</span><br><span class="line"></span><br><span class="line">            tmpBuf.clear();</span><br><span class="line">            <span class="keyword">int</span> size = bytesValue.length;</span><br><span class="line">            <span class="keyword">if</span> (size &gt;= tmpBuf.capacity()) &#123;</span><br><span class="line">                tmpBuf = ByteBuffer.allocate(countNewSize(tmpBuf.capacity(), size));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            tmpBuf.put(bytesValue, <span class="number">0</span>, bytesValue.length);</span><br><span class="line">            outputKey.set(tmpBuf.array(), <span class="number">0</span>, tmpBuf.position());</span><br><span class="line">            sortableKey.init(outputKey);</span><br><span class="line"></span><br><span class="line">            context.write(sortableKey, NullWritable.get());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">countNewSize</span><span class="params">(<span class="keyword">int</span> oldSize, <span class="keyword">int</span> dataSize)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> newSize = oldSize * <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">while</span> (newSize &lt; dataSize) &#123;</span><br><span class="line">                newSize *= <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> newSize;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 检查数据是否合法</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isLegal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotEmpty(columnIndexes)) &#123;</span><br><span class="line">                String indexes = columnIndexes.replaceAll(<span class="string">","</span>, <span class="string">""</span>);</span><br><span class="line">                <span class="keyword">return</span> StringUtils.isNumeric(indexes);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getMaxIndex</span><span class="params">(String columnIndexes)</span> </span>&#123;</span><br><span class="line">            String[] indexes = columnIndexes.split(<span class="string">","</span>);</span><br><span class="line">            <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (String i : indexes) &#123;</span><br><span class="line">                index = Math.max(Integer.parseInt(i), index);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> index;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">BuildDictCombine</span> <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">SelfDefineSortableKey</span>, <span class="title">NullWritable</span>, <span class="title">SelfDefineSortableKey</span>, <span class="title">NullWritable</span>&gt; </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(SelfDefineSortableKey key, Iterable&lt;NullWritable&gt; values, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">            context.write(key, NullWritable.get());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">BuildDictReducer</span> <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">SelfDefineSortableKey</span>, <span class="title">NullWritable</span>, <span class="title">NullWritable</span>, <span class="title">NullWritable</span>&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> GlobalDictionaryBuilder builder;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">setup</span><span class="params">(Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">            Configuration conf = context.getConfiguration();</span><br><span class="line">            String datasource = conf.get(<span class="string">"dict.datasource"</span>);</span><br><span class="line">            String table = conf.get(<span class="string">"dict.table"</span>);</span><br><span class="line">            String column = conf.get(<span class="string">"dict.column"</span>);</span><br><span class="line">            String zkHosts = conf.get(<span class="string">"dict.zookeeper.quorum"</span>);</span><br><span class="line">            String zkBase = conf.get(<span class="string">"dict.znode.lock.bath"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.builder = <span class="keyword">new</span> GlobalDictionaryBuilder();</span><br><span class="line">            <span class="keyword">this</span>.builder.init(datasource, table, column, zkHosts, zkBase);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(SelfDefineSortableKey key, Iterable&lt;NullWritable&gt; values, Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">            Text keyText = key.getText();</span><br><span class="line">            String value = toString(keyText.getBytes(), <span class="number">0</span>, keyText.getLength());</span><br><span class="line">            <span class="keyword">this</span>.builder.addValue(value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">toString</span><span class="params">(<span class="keyword">final</span> <span class="keyword">byte</span>[] b, <span class="keyword">int</span> off, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (b == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (len == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(b, off, len, Charset.forName(<span class="string">"UTF-8"</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">cleanup</span><span class="params">(Context context)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">            AppendTrieDictionary dict = <span class="keyword">this</span>.builder.build();</span><br><span class="line">            <span class="keyword">final</span> ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">            <span class="keyword">try</span> (PrintStream ps = <span class="keyword">new</span> PrintStream(baos, <span class="keyword">true</span>, <span class="string">"UTF-8"</span>)) &#123;</span><br><span class="line">                dict.dump(ps);</span><br><span class="line">            &#125;</span><br><span class="line">            String dictInfo = <span class="keyword">new</span> String(baos.toByteArray(), StandardCharsets.UTF_8);</span><br><span class="line"></span><br><span class="line">            log.info(<span class="string">"dict info:&#123;&#125;,min:&#123;&#125;,max:&#123;&#125;"</span>, dictInfo, dict.getMinId(), dict.getMaxId() &amp; <span class="number">0xFFFFFFFFL</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">BuildDictPartitioner</span> <span class="keyword">extends</span> <span class="title">Partitioner</span>&lt;<span class="title">SelfDefineSortableKey</span>, <span class="title">NullWritable</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPartition</span><span class="params">(SelfDefineSortableKey sKey, NullWritable nullWritable, <span class="keyword">int</span> numReduceTasks)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (readUnsigned(sKey.getText().getBytes(), <span class="number">0</span>, <span class="number">1</span>) &amp; <span class="number">2147483647</span>) % numReduceTasks;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">readUnsigned</span><span class="params">(<span class="keyword">byte</span>[] bytes, <span class="keyword">int</span> offset, <span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = offset, n = offset + size; i &lt; n; i++) &#123;</span><br><span class="line">                res &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">                res |= (<span class="keyword">int</span>)(bytes[i]) &amp; <span class="number">0xFF</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>SelfDefineSortableKey</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Licensed to the Apache Software Foundation (ASF) under one</span></span><br><span class="line"><span class="comment"> * or more contributor license agreements.  See the NOTICE file</span></span><br><span class="line"><span class="comment"> * distributed with this work for additional information</span></span><br><span class="line"><span class="comment"> * regarding copyright ownership.  The ASF licenses this file</span></span><br><span class="line"><span class="comment"> * to you under the Apache License, Version 2.0 (the</span></span><br><span class="line"><span class="comment"> * "License"); you may not use this file except in compliance</span></span><br><span class="line"><span class="comment"> * with the License.  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing,</span></span><br><span class="line"><span class="comment"> * software distributed under the License is distributed on an</span></span><br><span class="line"><span class="comment"> * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span></span><br><span class="line"><span class="comment"> * KIND, either express or implied.  See the License for the</span></span><br><span class="line"><span class="comment"> * specific language governing permissions and limitations</span></span><br><span class="line"><span class="comment"> * under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.xyueji.traffic.dict;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.WritableComparable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.DataInput;</span><br><span class="line"><span class="keyword">import</span> java.io.DataOutput;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Modified from the SelfDefineSortableKey in https://github.com/apache/kylin</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelfDefineSortableKey</span> <span class="keyword">implements</span> <span class="title">WritableComparable</span>&lt;<span class="title">SelfDefineSortableKey</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">enum</span> TypeFlag &#123;</span><br><span class="line">    NONE_NUMERIC_TYPE,</span><br><span class="line">    INTEGER_FAMILY_TYPE,</span><br><span class="line">    DOUBLE_FAMILY_TYPE</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">byte</span> typeId = (<span class="keyword">byte</span>) TypeFlag.NONE_NUMERIC_TYPE.ordinal(); <span class="comment">//non-numeric(0000 0000) int(0000 0001) other numberic(0000 0010)</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Text rawKey;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Object keyInObj;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">SelfDefineSortableKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">SelfDefineSortableKey</span><span class="params">(Text key)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    init(key, (<span class="keyword">byte</span>) TypeFlag.NONE_NUMERIC_TYPE.ordinal());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Text key, <span class="keyword">byte</span> typeId)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.typeId = typeId;</span><br><span class="line">    <span class="keyword">this</span>.rawKey = key;</span><br><span class="line">    <span class="keyword">this</span>.keyInObj = key;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Text key)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    init(key, (<span class="keyword">byte</span>) TypeFlag.NONE_NUMERIC_TYPE.ordinal());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(SelfDefineSortableKey o)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.typeId != o.typeId) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Error. Incompatible types"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ((Text) <span class="keyword">this</span>.keyInObj).compareTo(((Text) o.keyInObj));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(DataOutput dataOutput)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    dataOutput.writeByte(typeId);</span><br><span class="line">    rawKey.write(dataOutput);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readFields</span><span class="params">(DataInput dataInput)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.typeId = dataInput.readByte();</span><br><span class="line">    Text inputKey = <span class="keyword">new</span> Text();</span><br><span class="line">    inputKey.readFields(dataInput);</span><br><span class="line">    init(inputKey, typeId);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">short</span> <span class="title">getTypeId</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> typeId;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Text <span class="title">getText</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rawKey;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTypeId</span><span class="params">(<span class="keyword">byte</span> typeId)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.typeId = typeId;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>GlobalDictionaryBuilder</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.dict;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.kylin.common.KylinConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.kylin.dict.AppendTrieDictionary;</span><br><span class="line"><span class="keyword">import</span> org.apache.kylin.dict.global.AppendTrieDictionaryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-07-28 15:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalDictionaryBuilder</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(GlobalDictionaryBuilder.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AppendTrieDictionaryBuilder builder;</span><br><span class="line">    <span class="keyword">private</span> DistributedLock lock;</span><br><span class="line">    <span class="keyword">private</span> String lockPath;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> counter;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String EMPTY_FILL = <span class="string">"all"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CONNECT_CHAR = <span class="string">"_"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化appendtrie，因需并发操作hdfs同目录，则需使用分布式锁，此处采用zk实现。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datasource</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> table</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> column</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> zkHosts</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> zkBase</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(String datasource, String table, String column, String zkHosts, String zkBase)</span> </span>&#123;</span><br><span class="line">        datasource = StringUtils.isEmpty(datasource) ? EMPTY_FILL : datasource;</span><br><span class="line">        table = StringUtils.isEmpty(table) ? EMPTY_FILL : table;</span><br><span class="line">        column = StringUtils.isEmpty(column) ? EMPTY_FILL : column;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.lockPath = datasource + CONNECT_CHAR + table + CONNECT_CHAR + column;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取锁</span></span><br><span class="line">        <span class="keyword">this</span>.lock = <span class="keyword">new</span> ZookeeperDistributedLock.Factory(zkHosts, zkBase).lockForCurrentThread();</span><br><span class="line">        lock.lock(getLockPath(<span class="keyword">this</span>.lockPath), Long.MAX_VALUE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// build in kylin job server</span></span><br><span class="line">        String hdfsDir = KylinConfig.getInstanceFromEnv().getHdfsWorkingDirectory();</span><br><span class="line"></span><br><span class="line">        String baseDir = hdfsDir + <span class="string">"/resources/GlobalDict/dict/"</span></span><br><span class="line">                + datasource + <span class="string">"/"</span> + table + <span class="string">"/"</span> + column;</span><br><span class="line">        <span class="keyword">int</span> maxEntriesPerSlice = KylinConfig.getInstanceFromEnv().getAppendDictEntrySize();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.builder = <span class="keyword">new</span> AppendTrieDictionaryBuilder(baseDir, maxEntriesPerSlice, <span class="keyword">true</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">this</span>.lock.unlock(lockPath);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(String.format(<span class="string">"Failed to create global dictionary on %s"</span>, lockPath), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addValue</span><span class="params">(String value)</span> </span>&#123;</span><br><span class="line">        counter++;</span><br><span class="line">        <span class="keyword">if</span> (counter % <span class="number">1_000_000</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (lock.lock(getLockPath(lockPath))) &#123;</span><br><span class="line">                log.info(<span class="string">"processed &#123;&#125; values for &#123;&#125;"</span>, counter, lockPath);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Failed to create global dictionary on "</span> + lockPath + <span class="string">" This client doesn't keep the lock"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.builder.addValue(value);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">            lock.unlock(getLockPath(lockPath));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(String.format(<span class="string">"Failed to create global dictionary on %s "</span>, lockPath), e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AppendTrieDictionary <span class="title">build</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (lock.lock(getLockPath(lockPath))) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.builder.build(<span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Failed to create global dictionary on "</span> + lockPath + <span class="string">" This client doesn't keep the lock"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock(getLockPath(lockPath));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getLockPath</span><span class="params">(String pathName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"/dict/"</span> + pathName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="分布式锁"><a href="#分布式锁" class="headerlink" title="分布式锁"></a>分布式锁</h5><p><strong>DistributedLock</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Licensed to the Apache Software Foundation (ASF) under one</span></span><br><span class="line"><span class="comment"> * or more contributor license agreements.  See the NOTICE file</span></span><br><span class="line"><span class="comment"> * distributed with this work for additional information</span></span><br><span class="line"><span class="comment"> * regarding copyright ownership.  The ASF licenses this file</span></span><br><span class="line"><span class="comment"> * to you under the Apache License, Version 2.0 (the</span></span><br><span class="line"><span class="comment"> * "License"); you may not use this file except in compliance</span></span><br><span class="line"><span class="comment"> * with the License.  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing,</span></span><br><span class="line"><span class="comment"> * software distributed under the License is distributed on an</span></span><br><span class="line"><span class="comment"> * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span></span><br><span class="line"><span class="comment"> * KIND, either express or implied.  See the License for the</span></span><br><span class="line"><span class="comment"> * specific language governing permissions and limitations</span></span><br><span class="line"><span class="comment"> * under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.xyueji.traffic.dict;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Modified from the DistributedLock in https://github.com/apache/kylin</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * A distributed lock. Every instance is owned by a client, on whose behalf locks are acquired and/or released.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * Implementation must ensure all &lt;code&gt;lockPath&lt;/code&gt; will be prefix-ed with "/kylin/metadata-prefix" automatically.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DistributedLock</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns the client that owns this instance.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">getClient</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Acquire the lock at given path, non-blocking.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> If the lock is acquired or not.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">lock</span><span class="params">(String lockPath)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Acquire the lock at given path, block until given timeout.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> If the lock is acquired or not.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">lock</span><span class="params">(String lockPath, <span class="keyword">long</span> timeout)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns if lock is available at given path.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isLocked</span><span class="params">(String lockPath)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns if lock is available at given path.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isLockedByMe</span><span class="params">(String lockPath)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns the owner of a lock path; returns null if the path is not locked by any one.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">peekLock</span><span class="params">(String lockPath)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Unlock the lock at given path.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalStateException if the client is not holding the lock.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">unlock</span><span class="params">(String lockPath)</span> <span class="keyword">throws</span> IllegalStateException</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Purge all locks under given path. For clean up.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">purgeLocks</span><span class="params">(String lockPathRoot)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ZookeeperDistributedLock</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.dict;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.curator.framework.CuratorFramework;</span><br><span class="line"><span class="keyword">import</span> org.apache.curator.framework.CuratorFrameworkFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.curator.retry.ExponentialBackoffRetry;</span><br><span class="line"><span class="keyword">import</span> org.apache.zookeeper.CreateMode;</span><br><span class="line"><span class="keyword">import</span> org.apache.zookeeper.KeeperException;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.management.ManagementFactory;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ThreadLocalRandom;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-07-28 15:32</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> zk分布式锁</span></span><br><span class="line"><span class="comment"> * Modified from the ZookeeperDistributedLock in https://github.com/apache/kylin</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZookeeperDistributedLock</span> <span class="keyword">implements</span> <span class="title">DistributedLock</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(ZookeeperDistributedLock.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CuratorFramework curator;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String zkPathBase;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String client;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] clientBytes;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ZookeeperDistributedLock</span><span class="params">(CuratorFramework curator, String zkPathBase, String client)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (client == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"client must not be null"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (zkPathBase == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"zkPathBase must not be null"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.curator = curator;</span><br><span class="line">        <span class="keyword">this</span>.zkPathBase = zkPathBase;</span><br><span class="line">        <span class="keyword">this</span>.client = client;</span><br><span class="line">        <span class="keyword">this</span>.clientBytes = client.getBytes(Charset.forName(<span class="string">"UTF-8"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 封装curator工厂</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ConcurrentHashMap&lt;String, CuratorFramework&gt; CACHE = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String zkPathBase;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> CuratorFramework curator;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> &#123;</span><br><span class="line">            Runtime.getRuntime().addShutdownHook(<span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (CuratorFramework curator : CACHE.values()) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            curator.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                            log.error(<span class="string">"closing curator failed"</span>, e);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> CuratorFramework <span class="title">getZkClient</span><span class="params">(String zkHosts)</span> </span>&#123;</span><br><span class="line">            CuratorFramework zkClient = CACHE.get(zkHosts);</span><br><span class="line">            <span class="keyword">if</span> (zkClient == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (ZookeeperDistributedLock.class) &#123;</span><br><span class="line">                    zkClient = CACHE.get(zkHosts);</span><br><span class="line">                    <span class="keyword">if</span> (zkClient == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        ExponentialBackoffRetry retryPolicy = <span class="keyword">new</span> ExponentialBackoffRetry(<span class="number">1000</span>, <span class="number">3</span>);</span><br><span class="line">                        zkClient = CuratorFrameworkFactory.builder()</span><br><span class="line">                                .connectString(zkHosts)</span><br><span class="line">                                .sessionTimeoutMs(<span class="number">120000</span>)</span><br><span class="line">                                .connectionTimeoutMs(<span class="number">15000</span>)</span><br><span class="line">                                .retryPolicy(retryPolicy)</span><br><span class="line">                                .build();</span><br><span class="line"></span><br><span class="line">                        zkClient.start();</span><br><span class="line">                        CACHE.put(zkHosts, zkClient);</span><br><span class="line">                        <span class="keyword">if</span> (CACHE.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                            log.warn(<span class="string">"More than one singleton exist"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> zkClient;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Factory</span><span class="params">(String zkHosts, String zkBase)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.curator = getZkClient(zkHosts);</span><br><span class="line">            <span class="keyword">this</span>.zkPathBase = fixFlash(zkBase + <span class="string">"/"</span> + <span class="string">"global_lock"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> DistributedLock <span class="title">lockForClient</span><span class="params">(String client)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ZookeeperDistributedLock(<span class="keyword">this</span>.curator, <span class="keyword">this</span>.zkPathBase, client);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> DistributedLock <span class="title">lockForCurrentThread</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> lockForClient(threadProcessAndHost());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">threadProcessAndHost</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Thread.currentThread().getId() + <span class="string">"-"</span> + processAndHost();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">processAndHost</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> ManagementFactory.getRuntimeMXBean().getName();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.client;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lock</span><span class="params">(String lockPath)</span> </span>&#123;</span><br><span class="line">        lockPath = normalize(lockPath);</span><br><span class="line"></span><br><span class="line">        log.debug(client + <span class="string">" trying to lock "</span> + lockPath);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            curator.create()</span><br><span class="line">                    .creatingParentsIfNeeded()</span><br><span class="line">                    .withMode(CreateMode.EPHEMERAL)</span><br><span class="line">                    .forPath(lockPath, clientBytes);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (KeeperException.NodeExistsException e) &#123;</span><br><span class="line">            log.debug(client + <span class="string">" see "</span> + lockPath + <span class="string">" is already locked"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Error while "</span> + client + <span class="string">" trying to lock "</span> + lockPath, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String lockOwner = peekLock(lockPath);</span><br><span class="line">        <span class="keyword">if</span> (client.equals(lockOwner)) &#123;</span><br><span class="line">            log.info(client + <span class="string">" acquired lock at "</span> + lockPath);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.debug(client + <span class="string">" failed to acquire lock at "</span> + lockPath + <span class="string">", which is held by "</span> + lockOwner);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lock</span><span class="params">(String lockPath, <span class="keyword">long</span> timeout)</span> </span>&#123;</span><br><span class="line">        lockPath = normalize(lockPath);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lock(lockPath)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (timeout == <span class="number">0</span>) &#123;</span><br><span class="line">            timeout = Long.MAX_VALUE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        log.debug(client + <span class="string">" will wait for lock path "</span> + lockPath);</span><br><span class="line">        <span class="keyword">long</span> waitStart = System.currentTimeMillis();</span><br><span class="line">        Random random = ThreadLocalRandom.current();</span><br><span class="line">        <span class="comment">// 10 seconds</span></span><br><span class="line">        <span class="keyword">long</span> sleep = <span class="number">10</span> * <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (System.currentTimeMillis() - waitStart &lt;= timeout) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep((<span class="keyword">long</span>) (<span class="number">1000</span> + sleep * random.nextDouble()));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (lock(lockPath)) &#123;</span><br><span class="line">                log.debug(client + <span class="string">" waited "</span> + (System.currentTimeMillis() - waitStart) + <span class="string">" ms for lock path "</span> + lockPath);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// timeout</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLocked</span><span class="params">(String lockPath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> peekLock(lockPath) != <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLockedByMe</span><span class="params">(String lockPath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> client.equals(peekLock(lockPath));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">peekLock</span><span class="params">(String lockPath)</span> </span>&#123;</span><br><span class="line">        lockPath = normalize(lockPath);</span><br><span class="line"></span><br><span class="line">        lockPath = normalize(lockPath);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = curator.getData().forPath(lockPath);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(bytes, Charset.forName(<span class="string">"UTF-8"</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (KeeperException.NoNodeException ex) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Error while peeking at "</span> + lockPath, ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unlock</span><span class="params">(String lockPath)</span> <span class="keyword">throws</span> IllegalStateException </span>&#123;</span><br><span class="line">        lockPath = normalize(lockPath);</span><br><span class="line"></span><br><span class="line">        log.debug(client + <span class="string">" trying to unlock "</span> + lockPath);</span><br><span class="line"></span><br><span class="line">        String owner = peekLock(lockPath);</span><br><span class="line">        <span class="keyword">if</span> (owner == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(client + <span class="string">" cannot unlock path "</span> + lockPath + <span class="string">" which is not locked currently"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!client.equals(owner)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(client + <span class="string">" cannot unlock path "</span> + lockPath + <span class="string">" which is locked by "</span> + owner);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            curator.delete().guaranteed().deletingChildrenIfNeeded().forPath(lockPath);</span><br><span class="line"></span><br><span class="line">            log.info(client + <span class="string">" released lock at "</span> + lockPath);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Error while "</span> + client + <span class="string">" trying to unlock "</span> + lockPath, ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">purgeLocks</span><span class="params">(String lockPathRoot)</span> </span>&#123;</span><br><span class="line">        lockPathRoot = normalize(lockPathRoot);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            curator.delete().guaranteed().deletingChildrenIfNeeded().forPath(lockPathRoot);</span><br><span class="line"></span><br><span class="line">            log.info(client + <span class="string">" purged all locks under "</span> + lockPathRoot);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Error while "</span> + client + <span class="string">" trying to purge "</span> + lockPathRoot, ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">normalize</span><span class="params">(String lockPath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!lockPath.startsWith(zkPathBase)) &#123;</span><br><span class="line">            lockPath = zkPathBase + (lockPath.startsWith(<span class="string">"/"</span>) ? <span class="string">""</span> : <span class="string">"/"</span>) + lockPath;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fixFlash(lockPath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">fixFlash</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!path.startsWith(<span class="string">"/"</span>)) &#123;</span><br><span class="line">            path = <span class="string">"/"</span> + path;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (path.endsWith(<span class="string">"/"</span>)) &#123;</span><br><span class="line">            path = path.substring(<span class="number">0</span>, path.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> n = Integer.MAX_VALUE; n &gt; path.length(); ) &#123;</span><br><span class="line">            n = path.length();</span><br><span class="line">            path = path.replaceAll(<span class="string">"//"</span>, <span class="string">"/"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> path;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="精准去重-举例"><a href="#精准去重-举例" class="headerlink" title="精准去重-举例"></a>精准去重-举例</h3><p>此处举个使用精准去重的例子，我们使用flink消费kafka数据入ClickHouse的过程中按天去重。</p><p><strong>使用字典</strong></p><p>自定义MapFunction，把字符串通过字典转为编码id。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class BitIndexBuilderMap(topic: String) extends RichMapFunction[String, (String, Int)] &#123;</span><br><span class="line">    <span class="keyword">var</span> dict: AppendTrieDictionary[String] = _</span><br><span class="line"></span><br><span class="line">    <span class="function">override def <span class="title">open</span><span class="params">(parameters: Configuration)</span>: Unit </span>= &#123;</span><br><span class="line">      dict = HdfsDao.flinkReadDict(<span class="string">"traffic"</span>, topic)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">override def <span class="title">map</span><span class="params">(in: String)</span>: <span class="params">(String, Int)</span> </span>= &#123;</span><br><span class="line">      (in, dict.getIdFromValue(in))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>构建Bitmap</strong></p><p>自定义ProcessFunction，此处我们使用性能较好的RoaringBitmap构建Bitmap，并且在第二天0时清空Bitmap。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.task.function</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.task.dao.HdfsDao</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.configuration.Configuration</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.functions.KeyedProcessFunction</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.util.Collector</span><br><span class="line"><span class="keyword">import</span> org.apache.kylin.dict.AppendTrieDictionary</span><br><span class="line"><span class="keyword">import</span> org.roaringbitmap.buffer.MutableRoaringBitmap</span><br><span class="line"></span><br><span class="line">class BitDistinctFunction(topic: String = "") extends KeyedProcessFunction[Int, (String, Int), String] &#123;</span><br><span class="line">  val dict: AppendTrieDictionary[String] = HdfsDao.flinkReadDict(<span class="string">"traffic"</span>, topic)</span><br><span class="line">  <span class="keyword">var</span> bitmap: MutableRoaringBitmap = _</span><br><span class="line"></span><br><span class="line">  <span class="function">override def <span class="title">open</span><span class="params">(parameters: Configuration)</span>: Unit </span>= &#123;</span><br><span class="line">    bitmap = <span class="keyword">new</span> MutableRoaringBitmap()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">override def <span class="title">processElement</span><span class="params">(i: (String, Int)</span>, context: KeyedProcessFunction[Int, <span class="params">(String, Int)</span>, String]#Context, out: Collector[String]): Unit </span>= &#123;</span><br><span class="line">    <span class="keyword">if</span> (!bitmap.contains(i._2)) &#123;</span><br><span class="line">      bitmap.add(i._2)</span><br><span class="line">      out.collect(i._1)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      println(<span class="string">"repeat data is : "</span> + i._1)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    context.timerService().registerEventTimeTimer(tomorrowZeroTimestampMs(System.currentTimeMillis(), <span class="number">8</span>) + <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">override def <span class="title">onTimer</span><span class="params">(timestamp: Long, ctx: KeyedProcessFunction[Int, (String, Int)</span>, String]#OnTimerContext, out: Collector[String]): Unit </span>= &#123;</span><br><span class="line">    bitmap.clear()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 根据当前时间戳获取第二天0时0分0秒的时间戳</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="function">def <span class="title">tomorrowZeroTimestampMs</span><span class="params">(now: Long, timeZone: Int)</span>: Long </span>= now - (now + timeZone * <span class="number">3600000</span>) % <span class="number">86400000</span> + <span class="number">86400000</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>自定义Sink</strong></p><p>自定义Sink入ClickHouse：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.task.dao</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.core.bean.Constants</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.task.sink.CkSinkBuilderSinkFunction</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.connector.jdbc.&#123;JdbcConnectionOptions, JdbcExecutionOptions, JdbcSink&#125;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.functions.sink.SinkFunction</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@date</span> 2021-07-15 15:10</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span> clickhouse操作</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">object ClickHouseDao &#123;</span><br><span class="line">  <span class="function">def <span class="title">insert</span><span class="params">(sql: String)</span>: SinkFunction[Array[String]] </span>= &#123;</span><br><span class="line">    JdbcSink.sink(sql,</span><br><span class="line">      <span class="keyword">new</span> CkSinkBuilderSinkFunction,</span><br><span class="line">      <span class="keyword">new</span> JdbcExecutionOptions.Builder()</span><br><span class="line">        .withBatchSize(<span class="number">1000</span>)</span><br><span class="line">        .build(),</span><br><span class="line">      <span class="keyword">new</span> JdbcConnectionOptions.JdbcConnectionOptionsBuilder()</span><br><span class="line">        .withDriverName(Constants.CLICKHOUSE_DRIVER)</span><br><span class="line">        .withUrl(Constants.CLICKHOUSE_URL)</span><br><span class="line">        .withUsername(Constants.CLICKHOUSE_USER)</span><br><span class="line">        .withPassword(Constants.CLICKHOUSE_PASSWORD)</span><br><span class="line">        .build()</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>任务</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.task.service</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Properties</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.core.bean.Constants</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.core.util.&#123;EnvUtil, PropertiesUtil&#125;</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.task.dao.ClickHouseDao</span><br><span class="line"><span class="keyword">import</span> com.xyueji.traffic.task.function.&#123;BitDistinctFunction, BitIndexBuilderMap&#125;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.JobExecutionResult</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.serialization.SimpleStringSchema</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.scala._</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.connectors.kafka.FlinkKafkaConsumer</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@date</span> 2021-07-23 15:18</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KafkaToClickHouse</span></span>&#123;</span><br><span class="line">  <span class="function">def <span class="title">toCkFromKafka</span><span class="params">(sql: String, topic: String)</span>: JobExecutionResult </span>= &#123;</span><br><span class="line">    val env = EnvUtil.getFlinkStreamEnv()</span><br><span class="line">    val properties = <span class="keyword">new</span> Properties()</span><br><span class="line">    properties.setProperty(Constants.KAFKA_BOOTSTRAP_SERVERS, PropertiesUtil.getValue(Constants.KAFKA_BOOTSTRAP_SERVERS))</span><br><span class="line">    properties.setProperty(Constants.KAFKA_GROUP_ID, PropertiesUtil.getValue(Constants.KAFKA_GROUP_ID))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    val consumer = <span class="keyword">new</span> FlinkKafkaConsumer[String](topic, <span class="keyword">new</span> SimpleStringSchema(), properties)</span><br><span class="line">    consumer.setStartFromEarliest()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 以字典编码+BitMap做精准去重</span></span><br><span class="line">    val consumeStream = env</span><br><span class="line">      .addSource(consumer)</span><br><span class="line">      .map(<span class="keyword">new</span> BitIndexBuilderMap(topic))</span><br><span class="line">      .keyBy(_._2)</span><br><span class="line">      .process(<span class="keyword">new</span> BitDistinctFunction(topic))</span><br><span class="line">      .map(line =&gt; line.split(<span class="string">","</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 以RocksDB做精准去重</span></span><br><span class="line">    <span class="comment">//    val consumeStream = env</span></span><br><span class="line">    <span class="comment">//      .addSource(consumer)</span></span><br><span class="line">    <span class="comment">//      .keyBy(_.mkString)</span></span><br><span class="line">    <span class="comment">//      .process(new RocksDBDistinctFunction)</span></span><br><span class="line">    <span class="comment">//      .map(line =&gt; line.split(","))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    consumeStream.addSink(ClickHouseDao.insert(sql))</span><br><span class="line">    env.execute()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">object KafkaToClickHouse &#123;</span><br><span class="line">  <span class="function">def <span class="title">main</span><span class="params">(args: Array[String])</span>: Unit </span>= &#123;</span><br><span class="line">    val sql =</span><br><span class="line">      <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">        | insert into road_sect_speed (</span></span><br><span class="line"><span class="string">        |  logtime,</span></span><br><span class="line"><span class="string">        |  roadsect_id,</span></span><br><span class="line"><span class="string">        |  gotime,</span></span><br><span class="line"><span class="string">        |  gocount,</span></span><br><span class="line"><span class="string">        |  golen,</span></span><br><span class="line"><span class="string">        |  period</span></span><br><span class="line"><span class="string">        |) values (</span></span><br><span class="line"><span class="string">        |  ?,</span></span><br><span class="line"><span class="string">        |  ?,</span></span><br><span class="line"><span class="string">        |  ?,</span></span><br><span class="line"><span class="string">        |  ?,</span></span><br><span class="line"><span class="string">        |  ?,</span></span><br><span class="line"><span class="string">        |  ?</span></span><br><span class="line"><span class="string">        |  )</span></span><br><span class="line"><span class="string">      "</span><span class="string">""</span>.stripMargin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> KafkaToClickHouse().toCkFromKafka(sql, Constants.ROAD_REAL_TIME_TABLE)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>其他精准去重</strong></p><ul><li>基于Redis自增id，实时生成编码，进行去重。</li><li>使用Flink自带的RocksDB进行去重，此方式不适合大数据量。</li></ul><p>此处我们提供RocksDB去重例子，RocksDBDistinctFunction：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.traffic.task.function</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.state.StateTtlConfig.&#123;StateVisibility, UpdateType&#125;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.state.&#123;StateTtlConfig, ValueState, ValueStateDescriptor&#125;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.time.Time</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.configuration.Configuration</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.functions.KeyedProcessFunction</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.util.Collector</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@date</span> 2021-07-30 14:54</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">class RocksDBDistinctFunction extends KeyedProcessFunction[String, String, String]&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> existState: ValueState[Boolean] = _</span><br><span class="line"></span><br><span class="line">  <span class="function">override def <span class="title">open</span><span class="params">(parameters: Configuration)</span>: Unit </span>= &#123;</span><br><span class="line">    val stateTtlConfig = StateTtlConfig.newBuilder(Time.days(<span class="number">1</span>))</span><br><span class="line">      .setStateVisibility(StateVisibility.NeverReturnExpired)</span><br><span class="line">      .setUpdateType(UpdateType.OnCreateAndWrite)</span><br><span class="line">      .cleanupInRocksdbCompactFilter(<span class="number">10000</span>)</span><br><span class="line">      .build()</span><br><span class="line"></span><br><span class="line">    val valueStateDesc = <span class="keyword">new</span> ValueStateDescriptor(<span class="string">"dict-state"</span>, Boolean.getClass)</span><br><span class="line">    valueStateDesc.enableTimeToLive(stateTtlConfig)</span><br><span class="line"></span><br><span class="line">    existState = <span class="keyword">this</span>.getRuntimeContext.getState(valueStateDesc).asInstanceOf[ValueState[Boolean]]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">override def <span class="title">processElement</span><span class="params">(i: String, context: KeyedProcessFunction[String, String, String]#Context, out: Collector[String])</span>: Unit </span>= &#123;</span><br><span class="line">    <span class="keyword">if</span> (existState.value() == <span class="keyword">null</span>) &#123;</span><br><span class="line">      existState.update(<span class="keyword">true</span>)</span><br><span class="line">      out.collect(i)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      println(<span class="string">"repeat data is: "</span> + i)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考：</p><ul><li><a href="https://www.infoq.cn/article/ydplyzwccq5spr_iktvz" target="_blank" rel="noopener">快手 Druid 精确去重的设计和实现</a></li><li><a href="https://hexiaoqiao.github.io/blog/2016/11/27/exact-count-and-global-dictionary-of-apache-kylin/" target="_blank" rel="noopener">Apache Kylin精确计数与全局字典揭秘</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Bitmap的基本思想是以一个bit位来表示一个元素对应的value，即使用bit数组下标来表示元素值，以大大缩小存储空间。BitMap一般用来快速查找、去重、删除等操作，但是它只能用于数字类型。那么如果要使用字符串类型的该怎么办呢？&lt;/p&gt;
&lt;p&gt;这就需要先把字符串字典编码，生成字符串到数字的映射。本文参考kylin的全局字典编码配合RoaringBitmap以实现精准去重。&lt;/p&gt;
&lt;h3 id=&quot;AppendTrie树&quot;&gt;&lt;a href=&quot;#AppendTrie树&quot; class=&quot;headerlink&quot; title=&quot;AppendTrie树&quot;&gt;&lt;/a&gt;AppendTrie树&lt;/h3&gt;
    
    </summary>
    
      <category term="功能小记" scheme="https://xyueji.github.io/categories/%E5%8A%9F%E8%83%BD%E5%B0%8F%E8%AE%B0/"/>
    
    
      <category term="大数据" scheme="https://xyueji.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="精准去重" scheme="https://xyueji.github.io/tags/%E7%B2%BE%E5%87%86%E5%8E%BB%E9%87%8D/"/>
    
      <category term="bitmap" scheme="https://xyueji.github.io/tags/bitmap/"/>
    
      <category term="AppendTrie树" scheme="https://xyueji.github.io/tags/AppendTrie%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>大数据监控-Metrics2录入指标到OpenTSDB</title>
    <link href="https://xyueji.github.io/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9B%91%E6%8E%A7-Metrics2%E5%BD%95%E5%85%A5%E6%8C%87%E6%A0%87%E5%88%B0OpenTSDB.html"/>
    <id>https://xyueji.github.io/大数据监控-Metrics2录入指标到OpenTSDB.html</id>
    <published>2021-08-09T06:10:59.000Z</published>
    <updated>2021-08-09T06:16:02.441Z</updated>
    
    <content type="html"><![CDATA[<p>Hadoop Metrics2是一个收集各种指标的监控工具，可应用于Hadoop、HBase、Kylin等大数据组件监控指标收集。主要分为3个主要部分：MetricsSystemImpl、Source和Sink，其中Source和Sink都可以自定义。本文讲述如何自定义Sink，来收集指标入OpenTSDB。<br>首先来看看这3个部分的代码结构：</p><h4 id="MetricsSystemImpl"><a href="#MetricsSystemImpl" class="headerlink" title="MetricsSystemImpl"></a>MetricsSystemImpl</h4><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 注册source和sink</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(String prefix)</span> </span>&#123;</span><br><span class="line">    config = MetricsConfig.create(prefix);</span><br><span class="line">    configureSinks();</span><br><span class="line">    configureSources();</span><br><span class="line">    configureSystem();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    checkNotNull(prefix, <span class="string">"prefix"</span>);</span><br><span class="line">    <span class="keyword">if</span> (monitoring) &#123;</span><br><span class="line">      LOG.warn(prefix +<span class="string">" metrics system already started!"</span>,</span><br><span class="line">               <span class="keyword">new</span> MetricsException(<span class="string">"Illegal start"</span>));</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (Callback cb : callbacks) cb.preStart();</span><br><span class="line">    <span class="keyword">for</span> (Callback cb : namedCallbacks.values()) cb.preStart();</span><br><span class="line">    configure(prefix);</span><br><span class="line">    <span class="comment">// 2. 启动一个定时器</span></span><br><span class="line">    startTimer();</span><br><span class="line">    monitoring = <span class="keyword">true</span>;</span><br><span class="line">    LOG.info(prefix +<span class="string">" metrics system started"</span>);</span><br><span class="line">    <span class="keyword">for</span> (Callback cb : callbacks) cb.postStart();</span><br><span class="line">    <span class="keyword">for</span> (Callback cb : namedCallbacks.values()) cb.postStart();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">startTimer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (timer != <span class="keyword">null</span>) &#123;</span><br><span class="line">      LOG.warn(prefix +<span class="string">" metrics system timer already started!"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    logicalTime = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> millis = period;</span><br><span class="line">    timer = <span class="keyword">new</span> Timer(<span class="string">"Timer for '"</span>+ prefix +<span class="string">"' metrics system"</span>, <span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">// 3. 根据period定时执行metrics任务</span></span><br><span class="line">    timer.scheduleAtFixedRate(<span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">              onTimerEvent();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">              LOG.warn(<span class="string">"Error invoking metrics timer"</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;, millis, millis);</span><br><span class="line">    LOG.info(<span class="string">"Scheduled Metric snapshot period at "</span> + (period / <span class="number">1000</span>)</span><br><span class="line">        + <span class="string">" second(s)."</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 从所有的sources中收集metrics</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> MetricsBuffer <span class="title">sampleMetrics</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    collector.clear();</span><br><span class="line">    MetricsBufferBuilder bufferBuilder = <span class="keyword">new</span> MetricsBufferBuilder();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Entry&lt;String, MetricsSourceAdapter&gt; entry : sources.entrySet()) &#123;</span><br><span class="line">      <span class="keyword">if</span> (sourceFilter == <span class="keyword">null</span> || sourceFilter.accepts(entry.getKey())) &#123;</span><br><span class="line">        snapshotMetrics(entry.getValue(), bufferBuilder);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (publishSelfMetrics) &#123;</span><br><span class="line">      snapshotMetrics(sysSource, bufferBuilder);</span><br><span class="line">    &#125;</span><br><span class="line">    MetricsBuffer buffer = bufferBuilder.get();</span><br><span class="line">    <span class="keyword">return</span> buffer;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5. 发送metrics到所有的sinks</span></span><br><span class="line"> <span class="function"><span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">onTimerEvent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    logicalTime += period;</span><br><span class="line">    <span class="keyword">if</span> (sinks.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      publishMetrics(sampleMetrics(), <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h4><p>实现MetricsSource接口以自定义Source<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MetricsSource</span> </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Get metrics from the source</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> collector to contain the resulting metrics snapshot</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> all if true, return all metrics even if unchanged.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">getMetrics</span><span class="params">(MetricsCollector collector, <span class="keyword">boolean</span> all)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>以<strong>JvmMetrics</strong>为例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getMetrics</span><span class="params">(MetricsCollector collector, <span class="keyword">boolean</span> all)</span> </span>&#123;</span><br><span class="line">    MetricsRecordBuilder rb = collector.addRecord(JvmMetrics)</span><br><span class="line">        .setContext(<span class="string">"jvm"</span>).tag(ProcessName, processName)</span><br><span class="line">        .tag(SessionId, sessionId);</span><br><span class="line">    <span class="comment">// 内存指标</span></span><br><span class="line">    getMemoryUsage(rb);</span><br><span class="line">    <span class="comment">// GC指标</span></span><br><span class="line">    getGcUsage(rb);</span><br><span class="line">    <span class="comment">// 线程指标</span></span><br><span class="line">    getThreadUsage(rb);</span><br><span class="line">    <span class="comment">// 事件（LogFatal、LogError、LogWarn、LogInfo）计数指标</span></span><br><span class="line">    getEventCounters(rb);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><h4 id="Sink"><a href="#Sink" class="headerlink" title="Sink"></a>Sink</h4><p>实现MetricsSink以自定义Sink<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MetricsSink</span> <span class="keyword">extends</span> <span class="title">MetricsPlugin</span> </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Put a metrics record in the sink</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> record  the record to put</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">putMetrics</span><span class="params">(MetricsRecord record)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Flush any buffered metrics</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>以FileSink为例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileSink</span> <span class="keyword">implements</span> <span class="title">MetricsSink</span>, <span class="title">Closeable</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FILENAME_KEY = <span class="string">"filename"</span>;</span><br><span class="line">  <span class="keyword">private</span> PrintStream writer;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(SubsetConfiguration conf)</span> </span>&#123;</span><br><span class="line">    String filename = conf.getString(FILENAME_KEY);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 初始化打印流</span></span><br><span class="line">      writer = filename == <span class="keyword">null</span> ? System.out</span><br><span class="line">          : <span class="keyword">new</span> PrintStream(<span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(filename)),</span><br><span class="line">                            <span class="keyword">true</span>, <span class="string">"UTF-8"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> MetricsException(<span class="string">"Error creating "</span>+ filename, e);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2. 写入指标</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMetrics</span><span class="params">(MetricsRecord record)</span> </span>&#123;</span><br><span class="line">    writer.print(record.timestamp());</span><br><span class="line">    writer.print(<span class="string">" "</span>);</span><br><span class="line">    writer.print(record.context());</span><br><span class="line">    writer.print(<span class="string">"."</span>);</span><br><span class="line">    writer.print(record.name());</span><br><span class="line">    String separator = <span class="string">": "</span>;</span><br><span class="line">    <span class="keyword">for</span> (MetricsTag tag : record.tags()) &#123;</span><br><span class="line">      writer.print(separator);</span><br><span class="line">      separator = <span class="string">", "</span>;</span><br><span class="line">      writer.print(tag.name());</span><br><span class="line">      writer.print(<span class="string">"="</span>);</span><br><span class="line">      writer.print(tag.value());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (AbstractMetric metric : record.metrics()) &#123;</span><br><span class="line">      writer.print(separator);</span><br><span class="line">      separator = <span class="string">", "</span>;</span><br><span class="line">      writer.print(metric.name());</span><br><span class="line">      writer.print(<span class="string">"="</span>);</span><br><span class="line">      writer.print(metric.value());</span><br><span class="line">    &#125;</span><br><span class="line">    writer.println();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    writer.flush();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    writer.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="自定义OpenTSDBHttpSink"><a href="#自定义OpenTSDBHttpSink" class="headerlink" title="自定义OpenTSDBHttpSink"></a>自定义OpenTSDBHttpSink</h3><p>自定义sink把指标收集到OpenTSDB以实现集群监控，我们以http的方式录入指标到OpenTSDB，因此首先写一个HttpUtils类：</p><h4 id="HttpUtils"><a href="#HttpUtils" class="headerlink" title="HttpUtils"></a>HttpUtils</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.apache.hadoop.metrics2.sink.opentsdb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonElement;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.AuthSchemes;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.CookieSpecs;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.config.Registry;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.config.RegistryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.socket.ConnectionSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.socket.PlainConnectionSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.NoopHostnameVerifier;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.SSLConnectionSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.StringEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.conn.PoolingHttpClientConnectionManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLContext;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.TrustManager;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.X509TrustManager;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyManagementException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * http utils</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(HttpUtils.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">HttpUtils</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"Construct HttpUtils"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> CloseableHttpClient <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> HttpClientInstance.httpClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpClientInstance</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> CloseableHttpClient httpClient = HttpClients.custom().setConnectionManager(cm).setDefaultRequestConfig(requestConfig).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String paramJson;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> PoolingHttpClientConnectionManager cm;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SSLContext ctx = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SSLConnectionSocketFactory socketFactory;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> RequestConfig requestConfig;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Registry&lt;ConnectionSocketFactory&gt; socketFactoryRegistry;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> X509TrustManager xtm = <span class="keyword">new</span> X509TrustManager() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkClientTrusted</span><span class="params">(X509Certificate[] chain, String authType)</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkServerTrusted</span><span class="params">(X509Certificate[] chain, String authType)</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> X509Certificate[] getAcceptedIssuers() &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ctx = SSLContext.getInstance(SSLConnectionSocketFactory.TLS);</span><br><span class="line">            ctx.init(<span class="keyword">null</span>, <span class="keyword">new</span> TrustManager[]&#123;xtm&#125;, <span class="keyword">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            logger.error(<span class="string">"SSLContext init with NoSuchAlgorithmException"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (KeyManagementException e) &#123;</span><br><span class="line">            logger.error(<span class="string">"SSLContext init with KeyManagementException"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        socketFactory = <span class="keyword">new</span> SSLConnectionSocketFactory(ctx, NoopHostnameVerifier.INSTANCE);</span><br><span class="line">        <span class="comment">/** set timeout、request time、socket timeout */</span></span><br><span class="line">        requestConfig = RequestConfig.custom().setCookieSpec(CookieSpecs.IGNORE_COOKIES)</span><br><span class="line">                .setExpectContinueEnabled(Boolean.TRUE)</span><br><span class="line">                .setTargetPreferredAuthSchemes(Arrays.asList(AuthSchemes.NTLM, AuthSchemes.DIGEST))</span><br><span class="line">                .setProxyPreferredAuthSchemes(Arrays.asList(AuthSchemes.BASIC))</span><br><span class="line">                .setConnectTimeout(<span class="number">60</span> * <span class="number">1000</span>).setSocketTimeout(<span class="number">60</span> * <span class="number">1000</span>)</span><br><span class="line">                .setConnectionRequestTimeout(<span class="number">60</span> * <span class="number">1000</span>).setRedirectsEnabled(<span class="keyword">true</span>)</span><br><span class="line">                .build();</span><br><span class="line">        socketFactoryRegistry = RegistryBuilder.&lt;ConnectionSocketFactory&gt;create()</span><br><span class="line">                .register(<span class="string">"http"</span>, PlainConnectionSocketFactory.INSTANCE).register(<span class="string">"https"</span>, socketFactory).build();</span><br><span class="line">        cm = <span class="keyword">new</span> PoolingHttpClientConnectionManager(socketFactoryRegistry);</span><br><span class="line">        cm.setDefaultMaxPerRoute(<span class="number">60</span>);</span><br><span class="line">        cm.setMaxTotal(<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * get http request content</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> http get request response content</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        CloseableHttpClient httpclient = HttpUtils.getInstance();</span><br><span class="line">        HttpGet httpget = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line">        <span class="keyword">return</span> getResponseContentString(httpget, httpclient);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * get http response content</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> httpget    httpget</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> httpClient httpClient</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> http get request response content</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getResponseContentString</span><span class="params">(HttpGet httpget, CloseableHttpClient httpClient)</span> </span>&#123;</span><br><span class="line">        String responseContent = <span class="keyword">null</span>;</span><br><span class="line">        CloseableHttpResponse response = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            response = httpClient.execute(httpget);</span><br><span class="line">            <span class="comment">// check response status is 200</span></span><br><span class="line">            <span class="keyword">if</span> (response.getStatusLine().getStatusCode() == <span class="number">200</span>) &#123;</span><br><span class="line">                HttpEntity entity = response.getEntity();</span><br><span class="line">                <span class="keyword">if</span> (entity != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    responseContent = EntityUtils.toString(entity, <span class="string">"UTF-8"</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    logger.warn(<span class="string">"http entity is null"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                logger.error(<span class="string">"http get:&#123;&#125; response status code is not 200!"</span>, response.getStatusLine().getStatusCode());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ioe) &#123;</span><br><span class="line">            logger.error(ioe.getMessage(), ioe);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    EntityUtils.consume(response.getEntity());</span><br><span class="line">                    response.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                logger.error(e.getMessage(), e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!httpget.isAborted()) &#123;</span><br><span class="line">                httpget.releaseConnection();</span><br><span class="line">                httpget.abort();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> responseContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * post http</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> http post request response content</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url, JsonElement json)</span> </span>&#123;</span><br><span class="line">        CloseableHttpClient httpclient = HttpUtils.getInstance();</span><br><span class="line">        HttpPost httpPost = <span class="keyword">new</span> HttpPost(url);</span><br><span class="line">        httpPost.addHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/json;charset=UTF-8"</span>);</span><br><span class="line">        <span class="comment">// 解决中文乱码问题</span></span><br><span class="line">        StringEntity stringEntity = <span class="keyword">new</span> StringEntity(json.toString(), <span class="string">"UTF-8"</span>);</span><br><span class="line">        stringEntity.setContentEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        paramJson = json.toString();</span><br><span class="line"></span><br><span class="line">        httpPost.setEntity(stringEntity);</span><br><span class="line">        <span class="keyword">return</span> post(httpPost, httpclient);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * post http</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> httpPost   httpget</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> httpClient httpClient</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> http post request response content</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(HttpPost httpPost, CloseableHttpClient httpClient)</span> </span>&#123;</span><br><span class="line">        String responseContent = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ResponseHandler&lt;String&gt; responseHandler = <span class="keyword">new</span> BasicResponseHandler();</span><br><span class="line"></span><br><span class="line">            httpClient = HttpClients.createDefault();</span><br><span class="line">            responseContent = httpClient.execute(httpPost, responseHandler);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ioe) &#123;</span><br><span class="line">            logger.error(<span class="string">"put opentsdb failed, body is &#123;&#125;"</span>, paramJson);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!httpPost.isAborted()) &#123;</span><br><span class="line">                httpPost.releaseConnection();</span><br><span class="line">                httpPost.abort();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> responseContent;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="OpenTSDBHttpSink"><a href="#OpenTSDBHttpSink" class="headerlink" title="OpenTSDBHttpSink"></a>OpenTSDBHttpSink</h4><p>在hadoop-common-project/hadoop-common下新建一个org.apache.hadoop.metrics2.sink.opentsdb.OpenTSDBHttpSink类，内容如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.apache.hadoop.metrics2.sink.opentsdb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.configuration.SubsetConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.metrics2.AbstractMetric;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.metrics2.MetricsRecord;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.metrics2.MetricsSink;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.metrics2.MetricsTag;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.metrics2.util.MetricsCache;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021-08-02 16:44</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OpenTSDBHttpSink</span> <span class="keyword">implements</span> <span class="title">MetricsSink</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger LOG = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> SUPPORT_SPARSE_METRICS_DEFAULT = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SUPPORT_SPARSE_METRICS_PROPERTY = <span class="string">"supportsparse"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> supportSparseMetrics = SUPPORT_SPARSE_METRICS_DEFAULT;</span><br><span class="line">    <span class="keyword">private</span> MetricsCache metricsCache = <span class="keyword">new</span> MetricsCache();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String METRIC = <span class="string">"metric"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TIMESTAMP = <span class="string">"timestamp"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String VALUE = <span class="string">"value"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAGS = <span class="string">"tags"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SERVERS_PROPERTY = <span class="string">"servers"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CONTEXT = <span class="string">"Context"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String HOSTANME = <span class="string">"Hostname"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLUSTERID = <span class="string">"clusterId"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String HTTP_PREFIX = <span class="string">"http"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SLASH = <span class="string">"/"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PUT = <span class="string">"/api/put"</span>;</span><br><span class="line">    <span class="keyword">private</span> String metricsServers;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(SubsetConfiguration conf)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// see if sparseMetrics is supported. Default is false</span></span><br><span class="line">        supportSparseMetrics = conf.getBoolean(SUPPORT_SPARSE_METRICS_PROPERTY,</span><br><span class="line">                SUPPORT_SPARSE_METRICS_DEFAULT);</span><br><span class="line">        metricsServers = parseServer(conf.getString(SERVERS_PROPERTY));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">parseServer</span><span class="params">(String servers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(servers)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!servers.startsWith(HTTP_PREFIX)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (servers.startsWith(SLASH)) &#123;</span><br><span class="line">                    servers = servers.substring(<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                servers = HTTP_PREFIX + <span class="string">":"</span> + SLASH + SLASH + servers;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> servers + PUT;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打入指标</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record the record to put</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMetrics</span><span class="params">(MetricsRecord record)</span> </span>&#123;</span><br><span class="line"><span class="comment">// The method handles both cases whether Ganglia support dense publish</span></span><br><span class="line">        <span class="comment">// of metrics of sparse (only on change) publish of metrics</span></span><br><span class="line">        String recordName = record.name();</span><br><span class="line">        String contextName = record.context();</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        sb.append(contextName);</span><br><span class="line">        sb.append(<span class="string">'.'</span>);</span><br><span class="line">        sb.append(recordName);</span><br><span class="line">        sb.append(<span class="string">'.'</span>);</span><br><span class="line">        <span class="keyword">int</span> sbBaseLen = sb.length();</span><br><span class="line">        MetricsCache.Record cachedMetrics;</span><br><span class="line">        <span class="keyword">if</span> (!isSupportSparseMetrics()) &#123;</span><br><span class="line">            <span class="comment">// for sending dense metrics, update metrics cache</span></span><br><span class="line">            <span class="comment">// and get the updated data</span></span><br><span class="line">            cachedMetrics = metricsCache.update(record);</span><br><span class="line">            <span class="keyword">if</span> (cachedMetrics != <span class="keyword">null</span> &amp;&amp; cachedMetrics.metricsEntrySet() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (Map.Entry&lt;String, AbstractMetric&gt; entry : cachedMetrics</span><br><span class="line">                        .metricsEntrySet()) &#123;</span><br><span class="line">                    AbstractMetric metric = entry.getValue();</span><br><span class="line">                    sb.append(metric.name());</span><br><span class="line">                    String name = sb.toString();</span><br><span class="line">                    <span class="comment">// send metric to opentsdb</span></span><br><span class="line">                    emitMetric(name, metric.value(), record.timestamp(), record.tags());</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// reset the length of the buffer for next iteration</span></span><br><span class="line">                    sb.setLength(sbBaseLen);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// we support sparse updates</span></span><br><span class="line">            Collection&lt;AbstractMetric&gt; metrics = (Collection&lt;AbstractMetric&gt;) record</span><br><span class="line">                    .metrics();</span><br><span class="line">            <span class="keyword">if</span> (metrics.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// we got metrics. so send the latest</span></span><br><span class="line">                <span class="keyword">for</span> (AbstractMetric metric : record.metrics()) &#123;</span><br><span class="line">                    sb.append(metric.name());</span><br><span class="line">                    String name = sb.toString();</span><br><span class="line">                    <span class="comment">// send metric to opentsdb</span></span><br><span class="line">                    emitMetric(name, metric.value(), record.timestamp(), record.tags());</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// reset the length of the buffer for next iteration</span></span><br><span class="line">                    sb.setLength(sbBaseLen);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">emitMetric</span><span class="params">(String name, Number value, <span class="keyword">long</span> timestamp, Collection&lt;MetricsTag&gt; tags)</span> </span>&#123;</span><br><span class="line">        JsonObject params = <span class="keyword">new</span> JsonObject();</span><br><span class="line">        params.addProperty(METRIC, name);</span><br><span class="line">        params.addProperty(VALUE, value);</span><br><span class="line">        params.addProperty(TIMESTAMP, timestamp);</span><br><span class="line"></span><br><span class="line">        JsonObject tagsJson = getTags(tags);</span><br><span class="line">        <span class="keyword">if</span> (tagsJson.entrySet().size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            params.add(TAGS, tagsJson);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        LOG.info("put metric to openTSDB, data is: &#123;&#125;", params.toString());</span></span><br><span class="line">        HttpUtils.post(metricsServers, params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> JsonObject <span class="title">getTags</span><span class="params">(Collection&lt;MetricsTag&gt; tags)</span> </span>&#123;</span><br><span class="line">        JsonObject tagsJson = <span class="keyword">new</span> JsonObject();</span><br><span class="line">        <span class="keyword">if</span> (tags != <span class="keyword">null</span> &amp;&amp; tags.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// opentsdb tags应该尽量少，因此值存储必要的tag</span></span><br><span class="line">            <span class="keyword">for</span> (MetricsTag next : tags) &#123;</span><br><span class="line">                String name = next.name();</span><br><span class="line">                String value = next.value();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (StringUtils.isNotEmpty(name) &amp;&amp; StringUtils.isNotEmpty(value)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (HOSTANME.equals(name) || CONTEXT.equals(name) || CLUSTERID.equals(name)) &#123;</span><br><span class="line">                        tagsJson.addProperty(name, value);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tagsJson;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> whether sparse metrics are supported</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isSupportSparseMetrics</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> supportSparseMetrics;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="hadoop-metrics2-properties"><a href="#hadoop-metrics2-properties" class="headerlink" title="hadoop-metrics2.properties"></a>hadoop-metrics2.properties</h4><p>修改hadoop-metrics2.properties内容：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># syntax: [prefix].[source|sink].[instance].[options]</span></span><br><span class="line"><span class="comment"># See javadoc of package-info.java for org.apache.hadoop.metrics2 for details</span></span><br><span class="line"></span><br><span class="line"><span class="string">*.sink.file.class=org.apache.hadoop.metrics2.sink.FileSink</span></span><br><span class="line"><span class="comment"># default sampling period, in seconds</span></span><br><span class="line"><span class="string">*.period=10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The namenode-metrics.out will contain metrics from all context</span></span><br><span class="line"><span class="comment">#namenode.sink.file.filename=namenode-metrics.out</span></span><br><span class="line"><span class="comment"># Specifying a special sampling period for namenode:</span></span><br><span class="line"><span class="comment">#namenode.sink.*.period=8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#datanode.sink.file.filename=datanode-metrics.out</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#resourcemanager.sink.file.filename=resourcemanager-metrics.out</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#nodemanager.sink.file.filename=nodemanager-metrics.out</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#mrappmaster.sink.file.filename=mrappmaster-metrics.out</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#jobhistoryserver.sink.file.filename=jobhistoryserver-metrics.out</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># the following example split metrics of different</span></span><br><span class="line"><span class="comment"># context to different sinks (in this case files)</span></span><br><span class="line"><span class="comment">#nodemanager.sink.file_jvm.class=org.apache.hadoop.metrics2.sink.FileSink</span></span><br><span class="line"><span class="comment">#nodemanager.sink.file_jvm.context=jvm</span></span><br><span class="line"><span class="comment">#nodemanager.sink.file_jvm.filename=nodemanager-jvm-metrics.out</span></span><br><span class="line"><span class="comment">#nodemanager.sink.file_mapred.class=org.apache.hadoop.metrics2.sink.FileSink</span></span><br><span class="line"><span class="comment">#nodemanager.sink.file_mapred.context=mapred</span></span><br><span class="line"><span class="comment">#nodemanager.sink.file_mapred.filename=nodemanager-mapred-metrics.out</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Below are for sending metrics to Ganglia</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># for Ganglia 3.0 support</span></span><br><span class="line"><span class="comment"># *.sink.ganglia.class=org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># for Ganglia 3.1 support</span></span><br><span class="line"><span class="comment"># *.sink.ganglia.class=org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># *.sink.ganglia.period=10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># default for supportsparse is false</span></span><br><span class="line"><span class="comment"># *.sink.ganglia.supportsparse=true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#*.sink.ganglia.slope=jvm.metrics.gcCount=zero,jvm.metrics.memHeapUsedM=both</span></span><br><span class="line"><span class="comment">#*.sink.ganglia.dmax=jvm.metrics.threadsBlocked=70,jvm.metrics.memHeapUsedM=40</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tag values to use for the ganglia prefix. If not defined no tags are used.</span></span><br><span class="line"><span class="comment"># If '*' all tags are used. If specifiying multiple tags separate them with</span></span><br><span class="line"><span class="comment"># commas. Note that the last segment of the property name is the context name.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#*.sink.ganglia.tagsForPrefix.jvm=ProcesName</span></span><br><span class="line"><span class="comment">#*.sink.ganglia.tagsForPrefix.dfs=</span></span><br><span class="line"><span class="comment">#*.sink.ganglia.tagsForPrefix.rpc=</span></span><br><span class="line"><span class="comment">#*.sink.ganglia.tagsForPrefix.mapred=</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#namenode.sink.ganglia.servers=yourgangliahost_1:8649,yourgangliahost_2:8649</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#datanode.sink.ganglia.servers=yourgangliahost_1:8649,yourgangliahost_2:8649</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#resourcemanager.sink.ganglia.servers=yourgangliahost_1:8649,yourgangliahost_2:8649</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#nodemanager.sink.ganglia.servers=yourgangliahost_1:8649,yourgangliahost_2:8649</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#mrappmaster.sink.ganglia.servers=yourgangliahost_1:8649,yourgangliahost_2:8649</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#jobhistoryserver.sink.ganglia.servers=yourgangliahost_1:8649,yourgangliahost_2:8649</span></span><br><span class="line"></span><br><span class="line"><span class="comment">######## OpenTSDB Collect Metrics #########</span></span><br><span class="line"><span class="string">*.sink.opentsdb.class=org.apache.hadoop.metrics2.sink.opentsdb.OpenTSDBHttpSink</span></span><br><span class="line"><span class="string">namenode.sink.opentsdb.servers=opentsdb地址</span></span><br><span class="line"><span class="string">datanode.sink.opentsdb.servers=opentsdb地址</span></span><br><span class="line"><span class="string">*.period=60</span></span><br><span class="line"><span class="string">*.source.filter.class=org.apache.hadoop.metrics2.filter.RegexFilter</span></span><br><span class="line"><span class="string">*.record.filter.class=$&#123;*.source.filter.class&#125;</span></span><br><span class="line"><span class="string">*.metric.filter.class=$&#123;*.source.filter.class&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="string">hbase.sink.opentsdb.source.filter.include=^(.*IPC.*)$</span></span><br><span class="line"><span class="string">hbase.sink.opentsdb.source.filter.exclude=^(.*ClassPath.*)|(MetaHlog\\w+)|(.*\\.jar.*)|(.*SystemProperties.*)|(.*Balancer.*)|(.*AssignmentManager.*)|(.*Control.*)|(.*Stats.*)|(.*FileSystem.*)|(.*Procedure.*)|(.*Coprocessor.*)|(.*Memory.*)$</span></span><br><span class="line"><span class="comment">#hbase.sink.opentsdb.metric.filter.include=^(.*Master.*)|(.*Server.*)|(.*JvmMetrics.*)|(.*WAL.*)|(.*RegionServer.*)|(.*Regions.*)$</span></span><br><span class="line"><span class="string">hbase.sink.opentsdb.servers=opentsdb地址</span></span><br><span class="line"><span class="string">hbase.sink.opentsdb.period=60</span></span><br></pre></td></tr></table></figure></p><h4 id="部署服务"><a href="#部署服务" class="headerlink" title="部署服务"></a>部署服务</h4><ol><li>打包编译hadoop，编译教程见<a href="https://segmentfault.com/a/1190000019146236" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019146236</a>。</li><li>编译完成后，进入hadoop-dist/target/hadoop-2.9.2拷贝.//share/hadoop/common/hadoop-common-2.9.2.jar到hadoop集群的各个节点。</li><li>拷贝hadoop-metrics2.properties文件到各个hadoop节点。</li><li><p>重启hadoop集群，就可看见监控指标每分钟打入OpenTSDB。</p><h3 id="安装OpenTSDB"><a href="#安装OpenTSDB" class="headerlink" title="安装OpenTSDB"></a>安装OpenTSDB</h3></li><li><p>编译，在build目录会生成tsdb和tsdb-2.4.0.jar文件，注意：若直接./build.sh报错，则需要把third_party目录下的文件拷到build。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/OpenTSDB/opentsdb/releases/download/v2.4.0/opentsdb-2.4.0.tar.gz</span><br><span class="line">tar -zxf opentsdb-2.4.0.tar.gz</span><br><span class="line">cd opentsdb-2.4.0</span><br><span class="line">mkdir build</span><br><span class="line">cp -r third_party build/</span><br><span class="line">./build.sh</span><br></pre></td></tr></table></figure></li><li><p>修改src/opentsdb.conf，主要内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">tsd.network.port</span> <span class="string">=</span> <span class="number">4399</span></span><br><span class="line"><span class="string">tsd.network.bind</span> <span class="string">=</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="string">tsd.http.staticroot</span> <span class="string">=</span> <span class="string">/home/bigdata/tsdb/staticroot</span></span><br><span class="line"><span class="string">tsd.http.cachedir</span> <span class="string">=</span> <span class="string">/home/bigdata/tsdb/cachedir</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tsdb数据表，rowkey: &lt;加盐（一个字节）&gt;&lt;metric&gt;&lt;timestamp&gt;&lt;tagN&gt;&lt;tagV&gt;，其中timestamp取得是整小时时间戳，此处metric、tagN和tagV都是uid形式。</span></span><br><span class="line"><span class="string">tsd.storage.hbase.data_table</span> <span class="string">=</span> <span class="attr">opentsdb:tsdb</span></span><br><span class="line"><span class="comment"># uid映射表，分为两种：uid-&gt;字符串和字符串-&gt;uid</span></span><br><span class="line"><span class="string">tsd.storage.hbase.uid_table</span> <span class="string">=</span> <span class="attr">opentsdb:tsdb-uid</span></span><br><span class="line"><span class="comment"># 树形表，以树状层次关系来表示metric的结构</span></span><br><span class="line"><span class="string">tsd.storage.hbase.tree_table</span> <span class="string">=</span> <span class="attr">opentsdb:tsdb-tree</span></span><br><span class="line"><span class="comment"># 元数据表，用来存储时间序列索引和元数据的表</span></span><br><span class="line"><span class="string">tsd.storage.hbase.meta_table</span> <span class="string">=</span> <span class="attr">opentsdb:tsdb-meta</span></span><br><span class="line"></span><br><span class="line"><span class="string">tsd.storage.hbase.zk_quorum</span> <span class="string">=</span> <span class="string">hadoop1</span></span><br></pre></td></tr></table></figure></li><li><p>启动服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./build/tsdb tsd --config=src/opentsdb.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 后台启动</span></span><br><span class="line">nohup ./build/tsdb tsd --config=src/opentsdb.conf  &gt;&gt; logs/opentsdb-out.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></li></ol><h3 id="安装Grafana"><a href="#安装Grafana" class="headerlink" title="安装Grafana"></a>安装Grafana</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.grafana.com/oss/release/grafana-8.0.6.linux-amd64.tar.gz</span><br><span class="line">tar -zxf grafana-8.0.6.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 配置grafana，启动</span></span></span><br></pre></td></tr></table></figure><h3 id="配置监控指标"><a href="#配置监控指标" class="headerlink" title="配置监控指标"></a>配置监控指标</h3><p>指标可参考：<a href="https://intl.cloud.tencent.com/zh/document/product/1026/36879" target="_blank" rel="noopener">https://intl.cloud.tencent.com/zh/document/product/1026/36879</a>进行配置</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hadoop Metrics2是一个收集各种指标的监控工具，可应用于Hadoop、HBase、Kylin等大数据组件监控指标收集。主要分为3个主要部分：MetricsSystemImpl、Source和Sink，其中Source和Sink都可以自定义。本文讲述如何自定义Sink，来收集指标入OpenTSDB。&lt;br&gt;首先来看看这3个部分的代码结构：&lt;/p&gt;
&lt;h4 id=&quot;MetricsSystemImpl&quot;&gt;&lt;a href=&quot;#MetricsSystemImpl&quot; class=&quot;headerlink&quot; title=&quot;MetricsSystemImpl&quot;&gt;&lt;/a&gt;MetricsSystemImpl&lt;/h4&gt;
    
    </summary>
    
      <category term="集群监控" scheme="https://xyueji.github.io/categories/%E9%9B%86%E7%BE%A4%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="hbase" scheme="https://xyueji.github.io/tags/hbase/"/>
    
      <category term="hadoop" scheme="https://xyueji.github.io/tags/hadoop/"/>
    
      <category term="metrics2" scheme="https://xyueji.github.io/tags/metrics2/"/>
    
      <category term="opentsdb" scheme="https://xyueji.github.io/tags/opentsdb/"/>
    
      <category term="grafana" scheme="https://xyueji.github.io/tags/grafana/"/>
    
  </entry>
  
  <entry>
    <title>Spark解决数据倾斜问题</title>
    <link href="https://xyueji.github.io/Spark%E8%A7%A3%E5%86%B3%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C%E9%97%AE%E9%A2%98.html"/>
    <id>https://xyueji.github.io/Spark解决数据倾斜问题.html</id>
    <published>2020-10-14T11:51:03.000Z</published>
    <updated>2020-10-14T11:51:03.690Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1、使用Hive ETL预处理数据方案适用场景：</strong><br>如果导致数据倾斜的是Hive表。如果该Hive表中的数据本身很不均匀（比如某个key对应了100万数据，其他key才对应了10条数据），而且业务场景需要频繁使用Spark对Hive表执行某个分析操作，那么比较适合使用这种技术方案。</p><blockquote><p>方案实现思路：</p></blockquote><p>此时可以评估一下，是否可以通过Hive来进行数据预处理（即通过Hive ETL预先对数据按照key进行聚合，或者是预先和其他表进行join），然后在Spark作业中针对的数据源就不是原来的Hive表了，而是预处理后的Hive表。此时由于数据已经预先进行过聚合或join操作了，那么在Spark作业中也就不需要使用原先的shuffle类算子执行这类操作了。</p><blockquote><p>方案实现原理：</p></blockquote><p>这种方案从根源上解决了数据倾斜，因为彻底避免了在Spark中执行shuffle类算子，那么肯定就不会有数据倾斜的问题了。但是这里也要提醒一下大家，这种方式属于治标不治本。因为毕竟数据本身就存在分布不均匀的问题，所以Hive ETL中进行group by或者join等shuffle操作时，还是会出现数据倾斜，导致Hive ETL的速度很慢。我们只是把数据倾斜的发生提前到了Hive ETL中，避免Spark程序发生数据倾斜而已。</p><a id="more"></a><p><strong>2、过滤少数导致倾斜的key方案适用场景：</strong><br>如果发现导致倾斜的key就少数几个，而且对计算本身的影响并不大的话，那么很适合使用这种方案。比如99%的key就对应10条数据，但是只有一个key对应了100万数据，从而导致了数据倾斜。</p><blockquote><p>方案实现思路：</p></blockquote><p>如果我们判断那少数几个数据量特别多的key，对作业的执行和计算结果不是特别重要的话，那么干脆就直接过滤掉那少数几个key。比如，在Spark SQL中可以使用where子句过滤掉这些key或者在Spark Core中对RDD执行filter算子过滤掉这些key。如果需要每次作业执行时，动态判定哪些key的数据量最多然后再进行过滤，那么可以使用sample算子对RDD进行采样，然后计算出每个key的数量，取数据量最多的key过滤掉即可。</p><blockquote><p>方案实现原理：</p></blockquote><p>将导致数据倾斜的key给过滤掉之后，这些key就不会参与计算了，自然不可能产生数据倾斜。</p><p><strong>3、提高shuffle操作的并行度方案实现思路：</strong><br>在对RDD执行shuffle算子时，给shuffle算子传入一个参数，比如reduceByKey(1000)，该参数就设置了这个shuffle算子执行时shuffle read task的数量。对于Spark SQL中的shuffle类语句，比如group by、join等，需要设置一个参数，即spark.sql.shuffle.partitions，该参数代表了shuffle read task的并行度，该值默认是200，对于很多场景来说都有点过小。</p><blockquote><p>方案实现原理：</p></blockquote><p>增加shuffle read task的数量，可以让原本分配给一个task的多个key分配给多个task，从而让每个task处理比原来更少的数据。举例来说，如果原本有5个不同的key，每个key对应10条数据，这5个key都是分配给一个task的，那么这个task就要处理50条数据。而增加了shuffle read task以后，每个task就分配到一个key，即每个task就处理10条数据，那么自然每个task的执行时间都会变短了。</p><p><strong>4、双重聚合方案适用场景：</strong><br>对RDD执行reduceByKey等聚合类shuffle算子或者在Spark SQL中使用group by语句进行分组聚合时，比较适用这种方案。</p><blockquote><p>方案实现思路：</p></blockquote><p>这个方案的核心实现思路就是进行两阶段聚合。第一次是局部聚合，先给每个key都打上一个随机数，比如10以内的随机数，此时原先一样的key就变成不一样的了，比如(hello, 1) (hello, 1) (hello, 1) (hello, 1)，就会变成(1_hello, 1) (1_hello, 1) (2_hello, 1) (2_hello, 1)。接着对打上随机数后的数据，执行reduceByKey等聚合操作，进行局部聚合，那么局部聚合结果，就会变成了(1_hello, 2) (2_hello, 2)。然后将各个key的前缀给去掉，就会变成(hello,2)(hello,2)，再次进行全局聚合操作，就可以得到最终结果了，比如(hello, 4)。</p><blockquote><p>方案实现原理：</p></blockquote><p>将原本相同的key通过附加随机前缀的方式，变成多个不同的key，就可以让原本被一个task处理的数据分散到多个task上去做局部聚合，进而解决单个task处理数据量过多的问题。接着去除掉随机前缀，再次进行全局聚合，就可以得到最终的结果。如果一个RDD中有一个key导致数据倾斜，同时还有其他的key，那么一般先对数据集进行抽样，然后找出倾斜的key,再使用filter对原始的RDD进行分离为两个RDD，一个是由倾斜的key组成的RDD1，一个是由其他的key组成的RDD2，那么对于RDD1可以使用加随机前缀进行多分区多task计算，对于另一个RDD2正常聚合计算，最后将结果再合并起来。<br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/2E4F2295-5DC4-41A6-9DD5-22918328B8D8.png" alt="8e20684ab58d088180c23399f0df3fe2"><br>随机前缀加几，ReduceByKey分几个区。<br><strong>5、将reduce join转为map join（彻底避免数据倾斜）BroadCast+filter(或者map)</strong><br>方案适用场景：<br>在对RDD使用join类操作，或者是在Spark SQL中使用join语句时，而且join操作中的一个RDD或表的数据量比较小（比如几百M或者一两G），比较适用此方案。方案实现思路：<br>不使用join算子进行连接操作，而使用Broadcast变量与map类算子实现join操作，进而完全规避掉shuffle类的操作，彻底避免数据倾斜的发生和出现。将较小RDD中的数据直接通过collect算子拉取到Driver端的内存中来，然后对其创建一个Broadcast变量；接着对另外一个RDD执行map类算子，在算子函数内，从Broadcast变量中获取较小RDD的全量数据，与当前RDD的每一条数据按照连接key进行比对，如果连接key相同的话，那么就将两个RDD的数据用你需要的方式连接起来。</p><blockquote><p>方案实现原理：</p></blockquote><p>普通的join是会走shuffle过程的，而一旦shuffle，就相当于会将相同key的数据拉取到一个shuffle read task中再进行join，此时就是reduce join。但是如果一个RDD是比较小的，则可以采用广播小RDD全量数据+map算子来实现与join同样的效果，也就是map join，此时就不会发生shuffle操作，也就不会发生数据倾斜。</p><p><strong>6、采样倾斜key并分拆join操作</strong></p><blockquote><p>方案适用场景：</p></blockquote><p>两个RDD/Hive表进行join的时候，如果数据量都比较大，无法采用“解决方案五”，那么此时可以看一下两个RDD/Hive表中的key分布情况。如果出现数据倾斜，是因为其中某一个RDD/Hive表中的少数几个key的数据量过大，而另一个RDD/Hive表中的所有key都分布比较均匀，那么采用这个解决方案是比较合适的。</p><blockquote><p>方案实现思路：</p></blockquote><p>对包含少数几个数据量过大的key的那个RDD，通过sample算子采样出一份样本来，然后统计一下每个key的数量，计算出来数据量最大的是哪几个key。然后将这几个key对应的数据从原来的RDD中拆分出来，形成一个单独的RDD，并给每个key都打上n以内的随机数作为前缀，而不会导致倾斜的大部分key形成另外一个RDD。接着将需要join的另一个RDD，也过滤出来那几个倾斜key对应的数据并形成一个单独的RDD，将每条数据膨胀成n条数据，这n条数据都按顺序附加一个0~n的前缀，不会导致倾斜的大部分key也形成另外一个RDD。再将附加了随机前缀的独立RDD与另一个膨胀n倍的独立RDD进行join，此时就可以将原先相同的key打散成n份，分散到多个task中去进行join了。而另外两个普通的RDD就照常join即可。最后将两次join的结果使用union算子合并起来即可，就是最终的join结果 。<br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/A2866F89-F918-403F-A038-E2952B43150D.png" alt="d6a24f5d0ca6d7803ef1d0259b0f03ae"></p><p><strong>7、使用随机前缀和扩容RDD进行join</strong></p><blockquote><p>方案适用场景：</p></blockquote><p>如果在进行join操作时，RDD中有大量的key导致数据倾斜，那么进行分拆key也没什么意义，此时就只能使用最后一种方案来解决问题了。</p><blockquote><p>方案实现思路：</p></blockquote><p>该方案的实现思路基本和“解决方案六”类似，首先查看RDD/Hive表中的数据分布情况，找到那个造成数据倾斜的RDD/Hive表，比如有多个key都对应了超过1万条数据。然后将该RDD的每条数据都打上一个n以内的随机前缀。同时对另外一个正常的RDD进行扩容，将每条数据都扩容成n条数据，扩容出来的每条数据都依次打上一个0~n的前缀。最后将两个处理后的RDD进行join即可。</p><h3 id="附：sample算子找出导致数据倾斜的key"><a href="#附：sample算子找出导致数据倾斜的key" class="headerlink" title="附：sample算子找出导致数据倾斜的key"></a>附：sample算子找出导致数据倾斜的key</h3><blockquote><p>思路：通过抽样取出一部分样本，在对样本做wordCount并排序最后取出出现次数最多的key，这个key就是导致数据倾斜的key</p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.saprk.example</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.&#123;<span class="type">SparkConf</span>, <span class="type">SparkContext</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @author xiongzhigang</span></span><br><span class="line"><span class="comment">  * @date 2020-10-14 18:05</span></span><br><span class="line"><span class="comment">  * @description</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">FindTopKBySample</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setAppName(<span class="string">"FindTopKBySample"</span>).setMaster(<span class="string">"local[2]"</span>)</span><br><span class="line">    <span class="keyword">val</span> spark = <span class="keyword">new</span> <span class="type">SparkContext</span>(conf)</span><br><span class="line">    <span class="keyword">val</span> tuples = getKeyBySample(spark)</span><br><span class="line">    <span class="keyword">for</span> (elem &lt;- tuples) &#123;</span><br><span class="line">      println(elem)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">getKeyBySample</span></span>(sc: <span class="type">SparkContext</span>): <span class="type">Array</span>[(<span class="type">String</span>, <span class="type">Int</span>)] = &#123;</span><br><span class="line">    <span class="keyword">val</span> data = <span class="type">Array</span>(<span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>,</span><br><span class="line">      <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>,</span><br><span class="line">      <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>, <span class="string">"A"</span>,</span><br><span class="line">      <span class="string">"B"</span>, <span class="string">"B"</span>, <span class="string">"B"</span>, <span class="string">"B"</span>, <span class="string">"B"</span>, <span class="string">"B"</span>, <span class="string">"B"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>, <span class="string">"F"</span>, <span class="string">"G"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> rdd = sc.parallelize(data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> tupleRdd: <span class="type">Array</span>[(<span class="type">String</span>, <span class="type">Int</span>)] = rdd.map(x =&gt; (x, <span class="number">1</span>))</span><br><span class="line">      .sample(<span class="literal">true</span>, <span class="number">0.4</span>)</span><br><span class="line">      .reduceByKey((x, y) =&gt; x + y)</span><br><span class="line">      .sortBy(x =&gt; x._2, <span class="literal">false</span>, <span class="number">2</span>)</span><br><span class="line">      .take(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tupleRdd</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1、使用Hive ETL预处理数据方案适用场景：&lt;/strong&gt;&lt;br&gt;如果导致数据倾斜的是Hive表。如果该Hive表中的数据本身很不均匀（比如某个key对应了100万数据，其他key才对应了10条数据），而且业务场景需要频繁使用Spark对Hive表执行某个分析操作，那么比较适合使用这种技术方案。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;方案实现思路：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此时可以评估一下，是否可以通过Hive来进行数据预处理（即通过Hive ETL预先对数据按照key进行聚合，或者是预先和其他表进行join），然后在Spark作业中针对的数据源就不是原来的Hive表了，而是预处理后的Hive表。此时由于数据已经预先进行过聚合或join操作了，那么在Spark作业中也就不需要使用原先的shuffle类算子执行这类操作了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;方案实现原理：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种方案从根源上解决了数据倾斜，因为彻底避免了在Spark中执行shuffle类算子，那么肯定就不会有数据倾斜的问题了。但是这里也要提醒一下大家，这种方式属于治标不治本。因为毕竟数据本身就存在分布不均匀的问题，所以Hive ETL中进行group by或者join等shuffle操作时，还是会出现数据倾斜，导致Hive ETL的速度很慢。我们只是把数据倾斜的发生提前到了Hive ETL中，避免Spark程序发生数据倾斜而已。&lt;/p&gt;
    
    </summary>
    
      <category term="spark" scheme="https://xyueji.github.io/categories/spark/"/>
    
    
      <category term="spark" scheme="https://xyueji.github.io/tags/spark/"/>
    
      <category term="数据倾斜" scheme="https://xyueji.github.io/tags/%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C/"/>
    
  </entry>
  
  <entry>
    <title>Spark-Shuffle原理</title>
    <link href="https://xyueji.github.io/Spark-Shuffle%E5%8E%9F%E7%90%86.html"/>
    <id>https://xyueji.github.io/Spark-Shuffle原理.html</id>
    <published>2020-10-14T11:49:19.000Z</published>
    <updated>2020-10-14T11:49:19.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Spark Shuffle是大众讨论的比较多的话题了。它是Spark任务执行过程中最为重要的过程之一。那么什么是Shuffle呢？<br>Shuffle一般被翻译成数据混洗，是类MapReduce分布式计算框架独有的机制，也是这类分布式计算框架最重要的执行机制。接下来会按照两个层面来谈谈Shuffle机制。分别为：</p><ul><li>逻辑层面</li><li>物理层面</li></ul><p>逻辑层面主要是从RDD的血缘出发，从DAG的角度来讲解Shuffle，另外也会说明Spark容错机制。物理层面是从执行角度来剖析Shuffle是如何发生的</p><h3 id="1-RDD血缘与Spark容错"><a href="#1-RDD血缘与Spark容错" class="headerlink" title="1. RDD血缘与Spark容错"></a>1. RDD血缘与Spark容错</h3><a id="more"></a><p>从血缘角度出发就需先了解DAG，DAG被称之为有向无环图。在DAG中，最初的RDD被成为基础RDD，在基础RDD之上使用算子的过程中后续生成RDD被成为一个个子RDD，它们之间存在依赖关系。无论哪个RDD出现问题，都可以由这种依赖关系重新计算而成。这种依赖关系就被成为RDD血缘。血缘的表现方式主要分为宽依赖与窄依赖。</p><h4 id="1-1-窄依赖与宽依赖"><a href="#1-1-窄依赖与宽依赖" class="headerlink" title="1.1 窄依赖与宽依赖"></a>1.1 窄依赖与宽依赖</h4><blockquote><p>窄依赖的标准定义是：子RDD中的分区与父RDD中的分区只存在一对一的映射关系。<br>宽依赖的标准定义是：子RDD中分区与父RDD中分区存在一对多的映射关系。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/FFA9D34B-8365-41BC-8075-3AEE04D9F8F9.png" alt="23abbd9ac0c0c032330c6ca695f98b37"></p><blockquote><p>从实际算子来说，map，filter，union等就是窄依赖，而groupByKey，reduceByKey就是典型的宽依赖。</p></blockquote><p>宽依赖还有个名字，叫shuffle依赖，也就是说宽依赖必然会发生在shuffle操作，shuffle也是划分stage的重要依据。而窄依赖由于不需要发生shuffle，所有计算都是在分区所在节点完成，类似于MR中的ChainMapper。所以说，在如果在程序中选取的算子形成了宽依赖，那么就必然会触发shuffle。<br><strong><em>所以当RDD在shuffle过程中某个分区出现了故障，只需要找到当前对应的Stage，而这个Stage必然是某个shuffle算子所进行划分的，找到了这个算子，就离定位错误原因越来越近了。</em></strong><br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/5B9FADD6-00EE-4441-8092-E5CC2FF64A27.png" alt="2613599ec6366c549584bd777e88523c"></p><blockquote><p>如上图所示，如果P1_0分区发生故障，那么按照依赖关系，则需要P0_0与P0_1的分区重算，P0_0与P0_1没有持久化，就会不断回溯，直到找到存在的父分区为止。至于为什么要持久化，原因就是当计算逻辑复杂时，就会引发依赖链过长，如果其中的某个RDD发生了问题。若没有进行持久化，Spark则会根据RDD血缘关系进行重头开始计算。重算显然对我们是代价极高的，所以用户可以在计算过程中，适当的调用RDD的checkpoint方法，保存好当前算好的中间结果，这样依赖关系链就会大大的缩短。因为checkpoint其实是会切断血缘的。这就是RDD的血缘机制即RDD的容错机制。</p></blockquote><p><strong><em>而Spark的容错机制则是主要分为资源管理平台的容错和Spark应用的容错。</em></strong></p><h4 id="1-2-Spark的容错机制"><a href="#1-2-Spark的容错机制" class="headerlink" title="1.2 Spark的容错机制"></a>1.2 Spark的容错机制</h4><p>Spark的应用是基于资源管理平台运行的，所以资源管理平台的容错也是Spark容错的一部分，如Yarn的ResourceManager HA机制。在Spark应用执行的过程中，可能会遇到以下几种失败情况：</p><ul><li>Driver出错</li><li>Executor出错</li><li>Task出错</li></ul><blockquote><p>Dirver执行失败是Spark应用最严重的一种情况，因为它标记着整个作业的执行失败，需要开发人员手动重启Driver。而Executor报错通常是所在的Worker出错，这时Driver就会将执行失败的Task调度到另一个Executor继续执行，重新执行的Task会根据RDD的依赖关系继续计算，并将报错的Executor从可用的Executor列表中移除。Spark会对执行失败的Task进行重试，重试3次后若依然出错，则整个作业就会失败。而在这个过程中，数据恢复和重试都依赖于RDD血缘机制。</p></blockquote><h3 id="2-Spark-Shuffle"><a href="#2-Spark-Shuffle" class="headerlink" title="2. Spark Shuffle"></a>2. Spark Shuffle</h3><p>很多算子都会引起RDD中的数据进行重分区，新的分区被创建，旧的分区被合并或者打碎，<strong><em>在重分区过程中，如果数据发生了跨节点移动，就被称为Shuffle。</em></strong> Spark对Shuffle的实现方式有两种：Hash Shuffle与Sort-based Shuffle，这其实是一个优化的过程。在较老的版本中，Spark Shuffle的方式可以通过spark.shuffle.manager配置项进行配置，而在最新的版本中，已经移除了该配置项，统一称为Sort-based Shuffle。</p><h4 id="2-1-Hash-Shuffle"><a href="#2-1-Hash-Shuffle" class="headerlink" title="2.1 Hash Shuffle"></a>2.1 Hash Shuffle</h4><p>在Spark 1.6.3之前，Hash Shuffle都是Spark Shuffle的解决方案之一。Shuffle的过程一般分为两个部分：Shuffle Write和Shuffle Fetch，前者是Map任务划分分区，输出中间结果，而后者则是Reduce任务获取到的这些中间结果。Hash Shuffle的过程如图下所示：<br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/FCF2BEB0-6A18-4EA0-9F22-46B0E3AA0952.png" alt="1b3f9d7e0de8684358ff919559d13a62"></p><blockquote><p>图中，Shuffle Write发生在一个节点上，执行shuffle任务的CPU核数为1，可以同时执行两个任务，每个任务输出的分区数与Reducer数相同，即为3。每个分区都有一个缓冲区（bucket）用来接收结果，每个缓冲区的大小由配置spark.shuffle.file.buffer.kb决定。这样每个缓冲区写满后，就会输出到一个文件段中。而Reducer就会去相应的节点拉取文件。</p></blockquote><p>这样设计起来其实是不复杂的。但问题也很明显，主要有两个：</p><ul><li><strong><em>生成的文件个数太大</em></strong>。理论上，每个Shuffle任务输出会产生R个文件（由Reduce个数决定），而Shuffle任务的个数往往是由Map任务个数M决定的，所以总共会生成M * R个中间结果文件，而在大型作业中，若是M和R都是很大的数字的话，就会出现文件句柄数突破操作系统的限制。</li><li><strong><em>缓冲区占用内存空间过大</em></strong>。 单节点在执行Shuffle任务时缓存区大小消耗(spark.shuffle.file.buffer.kb) × m × R , m为该节点运行的shuffle个数，如果一个核可以执行一个任务，那么m就与cpu核数相等。这对于有32，64核的服务器来说都是不小的内存开销。所有为了解决第一个问题，Spark引入了Flie Consolidation机制，指通过共同输出文件以降低文件数，如下图所示：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/2F861E67-2AD8-422C-B3C0-5AF1885FBB60.png" alt="ac8c4e5d8e27ec9319930726a7f15068"></p><blockquote><p>每当Shuffle输出时，同一个CPU核心处理的Map任务的中间结果会输出到同分区的一个文件中，然后Reducer只需要一次性将整个文件拿到即可。这样，Shuffle产生的文件数为C（CPU核数）* R。Spark的FileConsolidation机制默认开启，可以通过spark.shuffle.consolidateFiles配置项进行配置。</p></blockquote><h4 id="2-2-Sort-based-Shuffle"><a href="#2-2-Sort-based-Shuffle" class="headerlink" title="2.2 Sort-based Shuffle"></a>2.2 Sort-based Shuffle</h4><p>即便是引入了FlieConsolidation后，还是无法根本解决中间文件数太大的问题，这时候Sort-based Shuffle才算是真正的引入进来。如图所示：<img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/3D2885AA-8879-41AF-8E7B-D5BA7CE09B9F.png" alt="7d856c507ee118374475fa61c694203b"></p><ul><li>每个Map任务会最后只输出两个文件（其中一个是索引文件），其中间过程采用MapReduce一样的归并排序，但是会用索引文件记录每个分区的偏移量，输出完成后，Reducer会根据索引文件得到属于自己的分区，这种情况下，shuffle产生的中间结果文件为2 * M（M为Map任务数）。</li><li>在基于排序的 Shuffle 中， Spark 还提供了一种折中方案——Bypass Sort-based Shuffle，当 Reduce 任务小于 spark.shuffle.sort.bypassMergeThreshold 配置（默认 200）时，Spark Shuffle 开始按照 Hash Shuffle 的方式处理数据，而不用进行归并排序，只是在 Shuffle Write 步骤的最后，将其合并为 1 个文件，并生成索引文件。这样实际上还是会生成大量的中间文件，只是最后合并为 1 个文件并省去排序所带来的开销，该方案的准确说法是 Hash Shuffle 的Shuffle Fetch 优化版。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Spark Shuffle是大众讨论的比较多的话题了。它是Spark任务执行过程中最为重要的过程之一。那么什么是Shuffle呢？&lt;br&gt;Shuffle一般被翻译成数据混洗，是类MapReduce分布式计算框架独有的机制，也是这类分布式计算框架最重要的执行机制。接下来会按照两个层面来谈谈Shuffle机制。分别为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;逻辑层面&lt;/li&gt;
&lt;li&gt;物理层面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑层面主要是从RDD的血缘出发，从DAG的角度来讲解Shuffle，另外也会说明Spark容错机制。物理层面是从执行角度来剖析Shuffle是如何发生的&lt;/p&gt;
&lt;h3 id=&quot;1-RDD血缘与Spark容错&quot;&gt;&lt;a href=&quot;#1-RDD血缘与Spark容错&quot; class=&quot;headerlink&quot; title=&quot;1. RDD血缘与Spark容错&quot;&gt;&lt;/a&gt;1. RDD血缘与Spark容错&lt;/h3&gt;
    
    </summary>
    
      <category term="spark" scheme="https://xyueji.github.io/categories/spark/"/>
    
    
      <category term="shuffle" scheme="https://xyueji.github.io/tags/shuffle/"/>
    
      <category term="spark" scheme="https://xyueji.github.io/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>MapReduce-Shuffle过程</title>
    <link href="https://xyueji.github.io/MapReduce-Shuffle%E8%BF%87%E7%A8%8B.html"/>
    <id>https://xyueji.github.io/MapReduce-Shuffle过程.html</id>
    <published>2020-10-14T04:02:56.000Z</published>
    <updated>2020-10-14T04:02:56.260Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>从map()的输出到reduce()的输入，中间的过程被称为shuffle过程。</p></blockquote><h2 id="map-side"><a href="#map-side" class="headerlink" title="map side"></a>map side</h2><ol><li><p>在写入磁盘之前，会先写入环形缓冲区(circular memory buffer)，默认100M(mapreduce.task.io.sort.mb可修改)，当缓冲区内容达到<br>80M(mapreduce.map.sort.spill.percent可修改)，缓冲区内容会被溢写到磁盘，形成一个spill file文件。</p></li><li><p>分区：在写入磁盘之前，会先进分区(partition)，而partition的数量是由reducer的数量决定的。</p><blockquote><p>job.setNumReduceTasks(2);</p></blockquote></li></ol><a id="more"></a><pre><code>默认是用map输出的&lt;key,value&gt;中key的hashcode对NumReduceTasks的个数取余，相同的分到一个区。</code></pre><ol start="3"><li><p>排序：在每一个partition中，都会有一个sort by key。</p></li><li><p>combiner：如果有combiner function，在sort之后会执行combiner，相当于map阶段的rudece 【满足数学运算的交换律和结合律】。</p></li><li><p>merge：数个spill files会合并（merge成一个分过区的排过序的文件）。</p></li><li><p>compress：压缩the map output。</p><blockquote><p>mapreduce.task.io.sort.factor 一次性合并小文件的数量 默认10个</p></blockquote><blockquote><p>mapreduce.map.output.compress 启用压缩，默认是false</p></blockquote><blockquote><p>org.apache.hadoop.io.compress.DefaultCodec 默认使用的压缩算法</p></blockquote></li></ol><h2 id="reduce-side"><a href="#reduce-side" class="headerlink" title="reduce side"></a>reduce side</h2><ol><li>解压缩: 如果在map side 已经压缩过，在合并排序之前要先进行解压缩。</li><li>sort phase(merge)。</li><li>group phase: 将相同key的value分到一组，形成一个集合。<br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/C9E1B76E-5804-4B6F-86F7-1B4C079A8C31.png" alt="08fd21ca91442cce894dc6b0f847b640"></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;从map()的输出到reduce()的输入，中间的过程被称为shuffle过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;map-side&quot;&gt;&lt;a href=&quot;#map-side&quot; class=&quot;headerlink&quot; title=&quot;map side&quot;&gt;&lt;/a&gt;map side&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在写入磁盘之前，会先写入环形缓冲区(circular memory buffer)，默认100M(mapreduce.task.io.sort.mb可修改)，当缓冲区内容达到&lt;br&gt;80M(mapreduce.map.sort.spill.percent可修改)，缓冲区内容会被溢写到磁盘，形成一个spill file文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分区：在写入磁盘之前，会先进分区(partition)，而partition的数量是由reducer的数量决定的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;job.setNumReduceTasks(2);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="hadoop" scheme="https://xyueji.github.io/categories/hadoop/"/>
    
    
      <category term="mapreduce" scheme="https://xyueji.github.io/tags/mapreduce/"/>
    
      <category term="shuffle" scheme="https://xyueji.github.io/tags/shuffle/"/>
    
  </entry>
  
  <entry>
    <title>Git开发规范</title>
    <link href="https://xyueji.github.io/Git%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83.html"/>
    <id>https://xyueji.github.io/Git开发规范.html</id>
    <published>2020-07-02T11:31:19.000Z</published>
    <updated>2020-07-04T18:19:19.360Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><h3 id="分支命名"><a href="#分支命名" class="headerlink" title="分支命名"></a>分支命名</h3><p><strong>master 分支</strong></p><blockquote><ul><li>master 为主分支，也是用于部署生产环境的分支，确保master分支稳定性</li><li>master 分支一般由develop以及hotfix分支合并，任何时间都不能直接修改代码</li></ul></blockquote><a id="more"></a><p><strong>develop 分支</strong></p><blockquote><ul><li>develop 为开发分支，始终保持最新完成以及bug修复后的代码</li><li>一般开发的新功能时，feature分支都是基于develop分支下创建的</li></ul></blockquote><p><strong>feature 分支</strong></p><blockquote><ul><li>开发新功能时，以develop为基础创建feature分支</li><li>分支命名: feature/ 开头的为特性分支， 命名规则: feature/user_module、 feature/cart_module</li></ul></blockquote><p><strong>release分支</strong></p><blockquote><ul><li>release 为预上线分支，发布提测阶段，会release分支代码为基准提测。<br>当有一组feature开发完成，首先会合并到develop分支，进入提测时，会创建release分支。<br>如果测试过程中若存在bug需要修复，则直接由开发者在release分支修复并提交。<br>当测试完成之后，合并release分支到master和develop分支，此时master为最新代码，用作上线。</li></ul></blockquote><p><strong>hotfix 分支</strong></p><blockquote><ul><li>分支命名: hotfix/ 开头的为修复分支，它的命名规则与 feature 分支类似</li><li>线上出现紧急问题时，需要及时修复，以master分支为基线，创建hotfix分支，修复完成后，需要合并到master分支和develop分支</li></ul></blockquote><h3 id="常见任务"><a href="#常见任务" class="headerlink" title="常见任务"></a>常见任务</h3><p><strong>增加新功能</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">(dev)$</span><span class="bash">: git checkout -b feature/xxx            <span class="comment"># 从dev建立特性分支</span></span></span><br><span class="line">(feature/xxx)$: blabla                         # 开发</span><br><span class="line">(feature/xxx)$: git add xxx</span><br><span class="line">(feature/xxx)$: git commit -m 'commit comment'</span><br><span class="line"><span class="meta">(dev)$</span><span class="bash">: git merge feature/xxx --no-ff          <span class="comment"># 把特性分支合并到dev</span></span></span><br></pre></td></tr></table></figure></p><p><strong>修复紧急bug</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">(master)$</span><span class="bash">: git checkout -b hotfix/xxx         <span class="comment"># 从master建立hotfix分支</span></span></span><br><span class="line">(hotfix/xxx)$: blabla                         # 开发</span><br><span class="line">(hotfix/xxx)$: git add xxx</span><br><span class="line">(hotfix/xxx)$: git commit -m 'commit comment'</span><br><span class="line"><span class="meta">(master)$</span><span class="bash">: git merge hotfix/xxx --no-ff       <span class="comment"># 把hotfix分支合并到master，并上线到生产环境</span></span></span><br><span class="line"><span class="meta">(dev)$</span><span class="bash">: git merge hotfix/xxx --no-ff          <span class="comment"># 把hotfix分支合并到dev，同步代码</span></span></span><br></pre></td></tr></table></figure></p><p><strong>测试环境代码</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">(release)$</span><span class="bash">: git merge dev --no-ff             <span class="comment"># 把dev分支合并到release，然后在测试环境拉取并测试</span></span></span><br></pre></td></tr></table></figure></p><p><strong>生产环境上线</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">(master)$</span><span class="bash">: git merge release --no-ff          <span class="comment"># 把release测试好的代码合并到master，运维人员操作</span></span></span><br><span class="line"><span class="meta">(master)$</span><span class="bash">: git tag -a v0.1 -m <span class="string">'部署包版本名'</span>  <span class="comment">#给版本命名，打Tag</span></span></span><br></pre></td></tr></table></figure></p><h2 id="日志规范"><a href="#日志规范" class="headerlink" title="日志规范"></a>日志规范</h2><p>在一个团队协作的项目中，开发人员需要经常提交一些代码去修复bug或者实现新的feature。而项目中的文件和实现什么功能、解决什么问题都会渐渐淡忘，最后需要浪费时间去阅读代码。但是好的日志规范commit messages编写有帮助到我们，它也反映了一个开发人员是否是良好的协作者。<br>编写良好的Commit messages可以达到3个重要的目的：</p><blockquote><ul><li>加快review的流程</li><li>帮助我们编写良好的版本发布日志</li><li>让之后的维护者了解代码里出现特定变化和feature被添加的原因<br>目前，社区有多种 Commit message 的写法规范。来自Angular 规范是目前使用最广的写法，比较合理和系统化。</li></ul></blockquote><h3 id="Commit-messages的基本语法"><a href="#Commit-messages的基本语法" class="headerlink" title="Commit messages的基本语法"></a>Commit messages的基本语法</h3><p>每次提交，Commit message 都包括三个部分：header，body 和 footer。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br><span class="line">&lt;BLANK LINE&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;BLANK LINE&gt;</span><br><span class="line">&lt;footer&gt;</span><br></pre></td></tr></table></figure></p><p>其中，header 是必需的，body 和 footer 可以省略。<br>不管是哪一个部分，任何一行都不得超过72个字符（或100个字符）。这是为了避免自动换行影响美观。</p><p><strong>Header</strong><br>Header部分只有一行，包括三个字段：type（必需）、scope（可选）和subject（必需）。</p><p><strong>type</strong><br>用于说明 commit 的类别，只允许使用下面7个标识。</p><blockquote><ul><li><code>feat</code>：新功能（feature）</li><li><code>fix</code>：修补bug</li><li><code>docs</code>：文档（documentation）</li><li><code>style</code>： 格式（不影响代码运行的变动）</li><li><code>refactor</code>：重构（即不是新增功能，也不是修改bug的代码变动）</li><li><code>test</code>：增加测试</li><li><code>chore</code>：构建过程或辅助工具的变动</li></ul></blockquote><p>如果type为feat和fix，则该 commit 将肯定出现在 Change log 之中。其他情况（docs、chore、style、refactor、test）由你决定，要不要放入 Change log，建议是不要。</p><p><strong>scope</strong><br>scope用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p><p>例如在Angular，可以是$location, $browser, $compile, $rootScope, ngHref, ngClick, ngView等。</p><p>如果你的修改影响了不止一个scope，你可以使用*代替。</p><p><strong>subject</strong><br>subject是 commit 目的的简短描述，不超过50个字符。</p><p>其他注意事项：</p><blockquote><ul><li>以动词开头，使用第一人称现在时，比如change，而不是changed或changes</li><li>第一个字母小写</li><li>结尾不加句号（.）</li></ul></blockquote><p><strong>Body</strong><br>Body 部分是对本次 commit 的详细描述，可以分成多行。下面是一个范例。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">More detailed explanatory text, if necessary.  Wrap it to </span><br><span class="line">about 72 characters or so. </span><br><span class="line"></span><br><span class="line">Further paragraphs come after blank lines.</span><br><span class="line"></span><br><span class="line">- Bullet points are okay, too</span><br><span class="line">- Use a hanging indent</span><br></pre></td></tr></table></figure></p><p>有三个注意点:</p><blockquote><ul><li>使用第一人称现在时，比如使用change而不是changed或changes。</li><li>永远别忘了第2行是空行</li><li>应该说明代码变动的动机，以及与以前行为的对比。</li></ul></blockquote><p><strong>Footer</strong><br>Footer 部分只用于以下两种情况：</p><p><strong><em>不兼容变动</em></strong><br>如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BREAKING CHANGE: isolate scope bindings definition has changed.</span><br><span class="line"></span><br><span class="line">    To migrate the code follow the example below:</span><br><span class="line"></span><br><span class="line">    Before:</span><br><span class="line"></span><br><span class="line">    scope: &#123;</span><br><span class="line">      myAttr: &apos;attribute&apos;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    After:</span><br><span class="line"></span><br><span class="line">    scope: &#123;</span><br><span class="line">      myAttr: &apos;@&apos;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    The removed `inject` wasn&apos;t generaly useful for directives so there should be no code using it.</span><br></pre></td></tr></table></figure></p><p><strong><em>关闭 Issue</em></strong><br>如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Closes #234</span><br></pre></td></tr></table></figure></p><p><strong>Revert</strong><br>还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以revert:开头，后面跟着被撤销 Commit 的 Header。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">revert: feat(pencil): add &apos;graphiteWidth&apos; option</span><br><span class="line"></span><br><span class="line">This reverts commit 667ecc1654a317a13331b17617d973392f415f02.</span><br></pre></td></tr></table></figure></p><p>Body部分的格式是固定的，必须写成This reverts commit &lt;hash&gt;.，其中的hash是被撤销 commit 的 SHA 标识符。</p><p>如果当前 commit 与被撤销的 commit，在同一个发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的Reverts小标题下面。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;分支管理&quot;&gt;&lt;a href=&quot;#分支管理&quot; class=&quot;headerlink&quot; title=&quot;分支管理&quot;&gt;&lt;/a&gt;分支管理&lt;/h2&gt;&lt;h3 id=&quot;分支命名&quot;&gt;&lt;a href=&quot;#分支命名&quot; class=&quot;headerlink&quot; title=&quot;分支命名&quot;&gt;&lt;/a&gt;分支命名&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;master 分支&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;master 为主分支，也是用于部署生产环境的分支，确保master分支稳定性&lt;/li&gt;
&lt;li&gt;master 分支一般由develop以及hotfix分支合并，任何时间都不能直接修改代码&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="git" scheme="https://xyueji.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://xyueji.github.io/tags/git/"/>
    
      <category term="开发规范" scheme="https://xyueji.github.io/tags/%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>Flink学习--如何计算实时热门商品</title>
    <link href="https://xyueji.github.io/Flink%E5%AD%A6%E4%B9%A0--%E5%A6%82%E4%BD%95%E8%AE%A1%E7%AE%97%E5%AE%9E%E6%97%B6%E7%83%AD%E9%97%A8%E5%95%86%E5%93%81.html"/>
    <id>https://xyueji.github.io/Flink学习--如何计算实时热门商品.html</id>
    <published>2020-06-16T09:30:44.000Z</published>
    <updated>2020-07-04T18:19:19.360Z</updated>
    
    <content type="html"><![CDATA[<p>首先我们把“实时热门商品”翻译成程序员易理解的语言：“每隔5分钟输出最近一小时内点击量最多的前N个商品”。将这个需求分解一下，将做如下几件事：</p><ul><li>构建数据源</li><li>抽取业务数据时间戳，告诉Flink基于业务时间做窗口</li><li>过滤出点击行为数据</li><li>按1小时的窗口，每隔5分钟，做滑动窗口聚合</li><li>按每个窗口聚合，输出每个窗口中点击量前N的商品</li></ul><a id="more"></a><h2 id="构建数据源"><a href="#构建数据源" class="headerlink" title="构建数据源"></a>构建数据源</h2><p>本文数据为淘宝用户行为数据集（来自<a href="https://link.juejin.im/?target=https%3A%2F%2Ftianchi.aliyun.com%2Fdatalab%2Findex.htm" target="_blank" rel="noopener">阿里云天池公开数据集</a>，特别感谢）。本数据集包含了淘宝上某一天随机一百万用户的所有行为（包括点击、购买、加购、收藏）。数据集的组织形式和MovieLens-20M类似，即数据集的每一行表示一条用户行为，由用户ID、商品ID、商品类目ID、行为类型和时间戳组成，并以逗号分隔。关于数据集中每一列的详细描述如下：</p><table><thead><tr><th>列名称</th><th>说明</th></tr></thead><tbody><tr><td>用户ID</td><td>整数类型，加密后的用户ID</td></tr><tr><td>商品ID</td><td>整数类型，加密后的商品ID</td></tr><tr><td>商品类目ID</td><td>整数类型，加密后的商品所属类目ID</td></tr><tr><td>行为类型</td><td>字符串，枚举类型，包括(‘pv’, ‘buy’, ‘cart’, ‘fav’)</td></tr><tr><td>时间戳</td><td>行为发生的时间戳，单位秒</td></tr></tbody></table><p>下载数据集，放入项目resource目录<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd flink-learning-project/src/main/resources</span><br><span class="line">curl https://raw.githubusercontent.com/wuchong/my-flink-project/master/src/main/resources/UserBehavior.csv &gt; UserBehavior.csv</span><br></pre></td></tr></table></figure></p><p>创建数据集实体类，UserBehavior.class<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.flink.core.model;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-06-05 18:19</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserBehavior</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> userId;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> itemId;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> categoryId;</span><br><span class="line">    <span class="keyword">private</span> String behavior;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> timestamp;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"UserBehavior&#123;"</span> +</span><br><span class="line">                <span class="string">"userId="</span> + userId +</span><br><span class="line">                <span class="string">", itemId="</span> + itemId +</span><br><span class="line">                <span class="string">", categoryId="</span> + categoryId +</span><br><span class="line">                <span class="string">", behavior='"</span> + behavior + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", timestamp="</span> + timestamp +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getUserId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserId</span><span class="params">(<span class="keyword">long</span> userId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userId = userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getItemId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> itemId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItemId</span><span class="params">(<span class="keyword">long</span> itemId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.itemId = itemId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCategoryId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> categoryId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCategoryId</span><span class="params">(<span class="keyword">int</span> categoryId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.categoryId = categoryId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBehavior</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> behavior;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBehavior</span><span class="params">(String behavior)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.behavior = behavior;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getTimestamp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> timestamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTimestamp</span><span class="params">(<span class="keyword">long</span> timestamp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.timestamp = timestamp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>编写Flink主程序，com.xyueji.flink.project.topnhot.HotItems<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HotItems</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>读取数据集，构建Flink source：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UserBehavior.csv本地路径</span></span><br><span class="line">URL url = HotItems.class.getClassLoader().getResource(<span class="string">"UserBehavior.csv"</span>);</span><br><span class="line">Path localFile = Path.fromLocalFile(<span class="keyword">new</span> File(url.toURI()));</span><br><span class="line"></span><br><span class="line">PojoTypeInfo pojoTypeInfo = (PojoTypeInfo) TypeExtractor.createTypeInfo(UserBehavior.class);</span><br><span class="line"><span class="comment">// 字段顺序</span></span><br><span class="line">String[] fieldNames = <span class="keyword">new</span> String[]&#123;<span class="string">"userId"</span>, <span class="string">"itemId"</span>, <span class="string">"categoryId"</span>, <span class="string">"behavior"</span>, <span class="string">"timestamp"</span>&#125;;</span><br><span class="line"><span class="comment">// csv InputFormat</span></span><br><span class="line">PojoCsvInputFormat csvInputFormat = <span class="keyword">new</span> PojoCsvInputFormat&lt;&gt;(localFile, pojoTypeInfo, fieldNames);</span><br><span class="line"><span class="comment">// 创建Flink执行环境</span></span><br><span class="line">StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br><span class="line"><span class="comment">// 模拟真实数据流，这里并行度设为1</span></span><br><span class="line">env.setParallelism(<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 添加source</span></span><br><span class="line">DataStreamSource dataStreamSource = env.createInput(csvInputFormat, pojoTypeInfo);</span><br></pre></td></tr></table></figure></p><h2 id="EventTime-与-Watermark"><a href="#EventTime-与-Watermark" class="headerlink" title="EventTime 与 Watermark"></a>EventTime 与 Watermark</h2><p>抽取业务数据时间戳，设置EventTime，以业务时间做窗口。这里说明一下：</p><ul><li>ProcessingTime：事件被处理的时间。也就是由机器的系统时间来决定。</li><li>EventTime：事件发生的时间。一般就是数据本身携带的时间。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这里要设置EventTime, 默认ProcessingTime</span></span><br><span class="line">env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);</span><br><span class="line"></span><br><span class="line">DataStream timeData = dataStreamSource.assignTimestampsAndWatermarks(<span class="keyword">new</span> AscendingTimestampExtractor&lt;UserBehavior&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">extractAscendingTimestamp</span><span class="params">(UserBehavior userBehavior)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 数据集时间单位为秒，转换为毫秒</span></span><br><span class="line">        <span class="keyword">return</span> userBehavior.getTimestamp() * <span class="number">1000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h2 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h2><p>再来回顾一下，”每隔5分钟输出最近1小时点击量前N的商品“，我们先把点击这个行为类型的数据过滤出来。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DataStream pvData = timeData.filter(<span class="keyword">new</span> FilterFunction&lt;UserBehavior&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">filter</span><span class="params">(UserBehavior userBehavior)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> userBehavior.getBehavior().equals(<span class="string">"pv"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure></p><h2 id="滑动窗口"><a href="#滑动窗口" class="headerlink" title="滑动窗口"></a>滑动窗口</h2><p>按1小时做窗口，每隔5分钟，做滑动窗口聚合。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DataStream windowDate = pvData</span><br><span class="line">                .keyBy(<span class="string">"itemId"</span>) <span class="comment">//以itemId分组</span></span><br><span class="line">                .timeWindow(Time.minutes(<span class="number">60</span>), Time.minutes(<span class="number">5</span>))</span><br><span class="line">                .aggregate(<span class="keyword">new</span> CountAgg(), <span class="keyword">new</span> WindowResultFunction());</span><br></pre></td></tr></table></figure></p><p>这里的CountAgg实现了AggregateFunction接口，功能是统计窗口中的条数，即遇到一条数据就加一。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">CountAgg</span> <span class="keyword">implements</span> <span class="title">AggregateFunction</span>&lt;<span class="title">UserBehavior</span>, <span class="title">Long</span>, <span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Long <span class="title">createAccumulator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0L</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Long <span class="title">add</span><span class="params">(UserBehavior userBehavior, Long acc)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> acc + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Long <span class="title">getResult</span><span class="params">(Long acc)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> acc;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Long <span class="title">merge</span><span class="params">(Long acc1, Long acc2)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> acc1 + acc2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>WindowResultFunction实现了WindowFunction接口，将每个key每个窗口聚合后的结果带上其他信息进行输出。我们这里实现的WindowResultFunction将主键商品ID，窗口，点击量封装成了ItemViewCount进行输出。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">WindowResultFunction</span> <span class="keyword">implements</span> <span class="title">WindowFunction</span>&lt;<span class="title">Long</span>, <span class="title">ItemViewCount</span>, <span class="title">Tuple</span>, <span class="title">TimeWindow</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">apply</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">                Tuple key,  // 窗口的主键，即 itemId</span></span></span><br><span class="line"><span class="function"><span class="params">                TimeWindow window,  // 窗口</span></span></span><br><span class="line"><span class="function"><span class="params">                Iterable&lt;Long&gt; aggregateResult, // 聚合函数的结果，即 count 值</span></span></span><br><span class="line"><span class="function"><span class="params">                Collector&lt;ItemViewCount&gt; collector  // 输出类型为 ItemViewCount</span></span></span><br><span class="line"><span class="function"><span class="params">        )</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">            Long itemId = (Long) ((Tuple1) key).f0;</span><br><span class="line">            Long count = aggregateResult.iterator().next();</span><br><span class="line">            collector.collect(ItemViewCount.of(itemId, window.getEnd(), count));</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品点击量(窗口操作的输出类型)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemViewCount</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">long</span> itemId;     <span class="comment">// 商品ID</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">long</span> windowEnd;  <span class="comment">// 窗口结束时间戳</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">long</span> viewCount;  <span class="comment">// 商品的点击量</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ItemViewCount <span class="title">of</span><span class="params">(<span class="keyword">long</span> itemId, <span class="keyword">long</span> windowEnd, <span class="keyword">long</span> viewCount)</span> </span>&#123;</span><br><span class="line">        ItemViewCount result = <span class="keyword">new</span> ItemViewCount();</span><br><span class="line">        result.itemId = itemId;</span><br><span class="line">        result.windowEnd = windowEnd;</span><br><span class="line">        result.viewCount = viewCount;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="TopN-计算最热门商品"><a href="#TopN-计算最热门商品" class="headerlink" title="TopN 计算最热门商品"></a>TopN 计算最热门商品</h2><p>进行窗口聚合后，需要将窗口进行分组，这里根据ItemViewCount中的windowEnd进行keyBy分组，然后使用ProcessFunction计算每个窗口的topN的商品。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataStream topItems = windowDate.keyBy(<span class="string">"windowEnd"</span>).process(<span class="keyword">new</span> TopNHotItems(<span class="number">5</span>));</span><br></pre></td></tr></table></figure></p><p>ProcessFunction 是 Flink 提供的一个 low-level API，用于实现更高级的功能。它主要提供了定时器 timer 的功能（支持EventTime或ProcessingTime）。本案例中我们将利用 timer 来判断何时收齐了某个 window 下所有商品的点击量数据。由于 Watermark 的进度是全局的，</p><p>在 processElement 方法中，每当收到一条数据（ItemViewCount），我们就注册一个 windowEnd+1 的定时器（Flink 框架会自动忽略同一时间的重复注册）。windowEnd+1 的定时器被触发时，意味着收到了windowEnd+1的 Watermark，即收齐了该windowEnd下的所有商品窗口统计值。我们在 onTimer() 中处理将收集的所有商品及点击量进行排序，选出 TopN，并将排名信息格式化成字符串后进行输出。</p><p>这里我们还使用了 ListState<itemviewcount> 来存储收到的每条 ItemViewCount 消息，保证在发生故障时，状态数据的不丢失和一致性。ListState 是 Flink 提供的类似 Java List 接口的 State API，它集成了框架的 checkpoint 机制，自动做到了 exactly-once 的语义保证。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 求某个窗口中前 N 名的热门点击商品，key 为窗口时间戳，输出为 TopN 的结果字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TopNHotItems</span> <span class="keyword">extends</span> <span class="title">KeyedProcessFunction</span>&lt;<span class="title">Tuple</span>, <span class="title">ItemViewCount</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> topSize;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TopNHotItems</span><span class="params">(<span class="keyword">int</span> topSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.topSize = topSize;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 用于存储商品与点击数的状态，待收齐同一个窗口的数据后，再触发 TopN 计算</span></span><br><span class="line">    <span class="keyword">private</span> ListState&lt;ItemViewCount&gt; itemState;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(Configuration parameters)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.open(parameters);</span><br><span class="line">        <span class="comment">// 状态的注册</span></span><br><span class="line">        ListStateDescriptor&lt;ItemViewCount&gt; itemsStateDesc = <span class="keyword">new</span> ListStateDescriptor&lt;&gt;(</span><br><span class="line">                <span class="string">"itemState-state"</span>,</span><br><span class="line">                ItemViewCount.class);</span><br><span class="line">        itemState = getRuntimeContext().getListState(itemsStateDesc);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">processElement</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            ItemViewCount input,</span></span></span><br><span class="line"><span class="function"><span class="params">            Context context,</span></span></span><br><span class="line"><span class="function"><span class="params">            Collector&lt;String&gt; collector)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 每条数据都保存到状态中</span></span><br><span class="line">        itemState.add(input);</span><br><span class="line">        <span class="comment">// 注册 windowEnd+1 的 EventTime Timer, 当触发时，说明收齐了属于windowEnd窗口的所有商品数据</span></span><br><span class="line">        context.timerService().registerEventTimeTimer(input.windowEnd + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTimer</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">long</span> timestamp, OnTimerContext ctx, Collector&lt;String&gt; out)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 获取收到的所有商品点击量</span></span><br><span class="line">        List&lt;ItemViewCount&gt; allItems = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (ItemViewCount item : itemState.get()) &#123;</span><br><span class="line">            allItems.add(item);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 提前清除状态中的数据，释放空间</span></span><br><span class="line">        itemState.clear();</span><br><span class="line">        <span class="comment">// 按照点击量从大到小排序</span></span><br><span class="line">        allItems.sort(<span class="keyword">new</span> Comparator&lt;ItemViewCount&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(ItemViewCount o1, ItemViewCount o2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">int</span>) (o2.viewCount - o1.viewCount);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 将排名信息格式化成 String, 便于打印</span></span><br><span class="line">        StringBuilder result = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        result.append(<span class="string">"====================================\n"</span>);</span><br><span class="line">        result.append(<span class="string">"时间: "</span>).append(<span class="keyword">new</span> Timestamp(timestamp - <span class="number">1</span>)).append(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; topSize; i++) &#123;</span><br><span class="line">            ItemViewCount currentItem = allItems.get(i);</span><br><span class="line">            <span class="comment">// No1:  商品ID=12224  浏览量=2413</span></span><br><span class="line">            result.append(<span class="string">"No"</span>).append(i).append(<span class="string">":"</span>)</span><br><span class="line">                    .append(<span class="string">"  商品ID="</span>).append(currentItem.itemId)</span><br><span class="line">                    .append(<span class="string">"  浏览量="</span>).append(currentItem.viewCount)</span><br><span class="line">                    .append(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        result.append(<span class="string">"====================================\n\n"</span>);</span><br><span class="line">        <span class="comment">// 控制输出频率，模拟实时滚动结果</span></span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        out.collect(result.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></itemviewcount></p><h2 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">topItems.print();</span><br></pre></td></tr></table></figure><h2 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env.execute("Hot Items Job");</span><br></pre></td></tr></table></figure><h2 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h2><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/D5DC7F51-58C5-45C7-9F10-15D513630F2B.png" alt="616ed78c549665c8dfabe75ef53884b7"></p><p>具体代码见：<a href="https://github.com/xyueji/flink-learning" target="_blank" rel="noopener">https://github.com/xyueji/flink-learning</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先我们把“实时热门商品”翻译成程序员易理解的语言：“每隔5分钟输出最近一小时内点击量最多的前N个商品”。将这个需求分解一下，将做如下几件事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构建数据源&lt;/li&gt;
&lt;li&gt;抽取业务数据时间戳，告诉Flink基于业务时间做窗口&lt;/li&gt;
&lt;li&gt;过滤出点击行为数据&lt;/li&gt;
&lt;li&gt;按1小时的窗口，每隔5分钟，做滑动窗口聚合&lt;/li&gt;
&lt;li&gt;按每个窗口聚合，输出每个窗口中点击量前N的商品&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="flink" scheme="https://xyueji.github.io/categories/flink/"/>
    
    
      <category term="flink" scheme="https://xyueji.github.io/tags/flink/"/>
    
      <category term="大数据" scheme="https://xyueji.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="热门商品" scheme="https://xyueji.github.io/tags/%E7%83%AD%E9%97%A8%E5%95%86%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>Flink学习--基本概念与环境搭建</title>
    <link href="https://xyueji.github.io/Flink%E5%AD%A6%E4%B9%A0--%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"/>
    <id>https://xyueji.github.io/Flink学习--基本概念与环境搭建.html</id>
    <published>2020-06-16T08:21:18.000Z</published>
    <updated>2020-07-04T18:19:19.359Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul><li><p><a href="#数据流编程模型">Programming Model–数据流编程模型</a></p></li><li><p><a href="#分布式运行环境">Distributed Runtime–数据流编程模型</a></p></li></ul><h3 id="数据流编程模型"><a href="#数据流编程模型" class="headerlink" title="数据流编程模型"></a>数据流编程模型</h3><a id="more"></a><ul><li><a href="#抽象级别">Levels of Abstraction–抽象级别</a></li><li><a href="#程序&amp;数据流">Programs and Dataflows–程序&amp;数据流</a></li><li><a href="#并行数据流">Parallel Dataflows–并行数据流</a></li><li><a href="#窗口">Windows–窗口</a></li><li><a href="#时间">Time–时间</a></li><li><a href="#有状态算子">Stateful Operations–有状态算子</a></li><li><a href="#容错检查点">Checkpoints for Fault Tolerance–容错检查点</a></li><li><a href="#批处理流">Batch on Streaming–批处理流</a></li></ul><h4 id="抽象级别"><a href="#抽象级别" class="headerlink" title="抽象级别"></a>抽象级别</h4><p>Flink给流/批处理应用提供了不同级别的抽象，主要分为以下4种：<br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/F9B5407B-5584-432D-960B-E95AE9EA6307.png" alt="67b15a33539c6c55e414fc99120a5037"></p><ol><li>Stateful Stream Processing：最底层的抽象是有状态的数据流。它经Process Function嵌入DataStream API。允许用户非常灵活地处理来自一个或多个流的数据。并且用户能够注册event time和processing time（稍后详解），允许项目能够实现复杂的计算。</li><li>DataStream/DataSet API：在实际过程中，很多应用并不需要上述提到的最底层抽象。于是提供了DataStream API(有界/无界数据流)和DataSet API（有界数据流）。这些API提供了共有的构建模块去处理数据，像各种各样用户指定的转换、连接、聚合、窗口和状态等等。</li><li>Table API：是围绕着表定义的模拟语言，可以动态改变表。</li><li>SQL：可以让程序完全用SQL来描述。</li></ol><h4 id="程序-amp-数据流"><a href="#程序-amp-数据流" class="headerlink" title="程序&amp;数据流"></a>程序&amp;数据流</h4><p>构建Flink程序的基本模块是流和转换，概念上来说一个stream是数据记录的流，一个转换是以一个或多个作为输入流而产生一个或多个输出流的一个操作。<br>当Flink程序运行的时候，Flink程序映射成数据流，包含流和转换操作。每个流开始于一个或多个sources结束于一个或多个sinks，这些数据流就像非循环指向图（DAGs）。<br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/7D27BFC3-422F-4D68-8F25-30E30611FABF.png" alt="115b53d69ec17c0cdd668563b51deba9"></p><h4 id="并行数据流"><a href="#并行数据流" class="headerlink" title="并行数据流"></a>并行数据流</h4><p>在Flink程序运行期间，一个流有一个或多个流分区，每个操作有一个或多个操作子任务。这些操作子任务彼此依赖，且运行在不同的线程、可能原型在不同的机器或container。<br>一个流在数据转换中间有两种操作形式，一个是一对一（one to one），另一个是重新分配（redistributing）。</p><h4 id="窗口"><a href="#窗口" class="headerlink" title="窗口"></a>窗口</h4><p>窗口可以是时间驱动（如：每30秒），也可以是数据驱动（如：每100个元素）。</p><h4 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h4><p>在流处理程序中，定义了以下三种时间概念：</p><ul><li>Event Time：是事件被创建的时间，它通常在事件中被描述为时间戳，比较常见的是数据自带的时间属性。</li><li>Ingestion time：是时间进入Flink数据流的时间。</li><li>Processing Time：是每个操作所在的物理机上的时间。</li></ul><h4 id="有状态算子"><a href="#有状态算子" class="headerlink" title="有状态算子"></a>有状态算子</h4><p>许多在数据流中的算子在某时刻看作一个独立的事件，一些算子通过多种事件记录信息。这些算子被称作有状态的。</p><h4 id="容错检查点"><a href="#容错检查点" class="headerlink" title="容错检查点"></a>容错检查点</h4><p>Flink通过流的重放和检查点结合实现容错机制。一个检查点联系着一个特殊的指向，这个指向每个与每个算子状态相关联的输入流。</p><h4 id="批处理流"><a href="#批处理流" class="headerlink" title="批处理流"></a>批处理流</h4><p>当流是有边界的情况下，Flink运行的流处理程序就是一个特殊的批处理程序。这种情况下有些注意的情况：</p><ul><li>容错在批处理程序中不用检查点，发生异常时流全部回放。</li><li>在DataSet API中的有状态算子，将不用key/value索引，而采用简单的in-memory/out-of-core数据结构。</li><li>DataSet API用特殊的同步迭代。</li></ul><h3 id="分布式运行环境"><a href="#分布式运行环境" class="headerlink" title="分布式运行环境"></a>分布式运行环境</h3><ul><li><a href="#Tasks\ and\ Operator\ Chains">Tasks and Operator Chains</a></li><li><a href="#Job\ Managers,\ Task\ Managers,\ Clients">Job Managers, Task Managers, Clients</a></li><li><a href="#Task\ Slots\ and\ Resources">Task Slots and Resources</a></li><li><a href="#Task\ Slots\ and\ Resources">State Backends</a></li><li><a href="#Savepoints">Savepoints</a></li></ul><p>详细解释见：<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.10/zh/concepts/runtime.html" target="_blank" rel="noopener">https://ci.apache.org/projects/flink/flink-docs-release-1.10/zh/concepts/runtime.html</a></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>作者采用docker-compose搭建Flink环境，详细可参考这篇文章<a href="https://xyueji.github.io/docker-compose%E6%90%AD%E5%BB%BA%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%8E%AF%E5%A2%83.html">docker-compose搭建大数据环境</a>。</p><h2 id="WordCount程序"><a href="#WordCount程序" class="headerlink" title="WordCount程序"></a>WordCount程序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xyueji.flink.examples;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.common.functions.FlatMapFunction;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.api.java.tuple.Tuple2;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.datastream.DataStreamSource;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br><span class="line"><span class="keyword">import</span> org.apache.flink.util.Collector;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-28 14:50</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketTextStreamWordCount</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (args.length != <span class="number">2</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"SocketTextStreamWordCount USAGE: &lt;hostname&gt; &lt;port&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String hostname = args[<span class="number">0</span>];</span><br><span class="line">        Integer port = Integer.parseInt(args[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置stream execution environment</span></span><br><span class="line">        <span class="keyword">final</span> StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取数据</span></span><br><span class="line">        DataStreamSource&lt;String&gt; stream = env.socketTextStream(hostname, port);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计数</span></span><br><span class="line">        SingleOutputStreamOperator&lt;Tuple2&lt;String, Integer&gt;&gt; sum = stream.flatMap(<span class="keyword">new</span> LineSplitter())</span><br><span class="line">                .keyBy(<span class="number">0</span>)</span><br><span class="line">                .sum(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        sum.print();</span><br><span class="line"></span><br><span class="line">        env.execute(<span class="string">"SocketTextStreamWordCount"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分词，构建元组</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">LineSplitter</span> <span class="keyword">implements</span> <span class="title">FlatMapFunction</span>&lt;<span class="title">String</span>, <span class="title">Tuple2</span>&lt;<span class="title">String</span>, <span class="title">Integer</span>&gt;&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">flatMap</span><span class="params">(String line, Collector&lt;Tuple2&lt;String, Integer&gt;&gt; collector)</span> </span>&#123;</span><br><span class="line">            String[] words = line.toLowerCase().split(<span class="string">"\\W+"</span>);</span><br><span class="line">            <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">                <span class="keyword">if</span> (word.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    collector.collect(<span class="keyword">new</span> Tuple2&lt;&gt;(word, <span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在本地使用nc开启9090端口：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -l 9090</span><br></pre></td></tr></table></figure></p><p>打包程序上传到docker容器中，运行如下命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flink run -c com.xyueji.flink.examples.SocketTextStreamWordCount flink-learning-examples-1.0-SNAPSHOT.jar &lt;本机ip&gt; 9090</span><br></pre></td></tr></table></figure></p><p>本机输入字符串：<br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/08E41E51-8178-4C6F-BBBF-AF84CA97C2AC.png" alt="4537004427b6a880c577e8fd912ebf18"><br>查看flink运行结果，使用docker logs查看：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs taskmanager</span><br></pre></td></tr></table></figure></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/D3B4DB9B-A83D-4526-BEE5-B6210A7B3784.png" alt="f023cf1473a7315c68ed72d4a170560f"><br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/4847CDC9-D471-46BA-A84C-5C53E2CA6E24.png" alt="5f7c36004bfd2a991e5c5aa2309fbc8a"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;#数据流编程模型&quot;&gt;Programming Model–数据流编程模型&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;#分布式运行环境&quot;&gt;Distributed Runtime–数据流编程模型&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;数据流编程模型&quot;&gt;&lt;a href=&quot;#数据流编程模型&quot; class=&quot;headerlink&quot; title=&quot;数据流编程模型&quot;&gt;&lt;/a&gt;数据流编程模型&lt;/h3&gt;
    
    </summary>
    
      <category term="flink" scheme="https://xyueji.github.io/categories/flink/"/>
    
    
      <category term="flink" scheme="https://xyueji.github.io/tags/flink/"/>
    
      <category term="wordcount" scheme="https://xyueji.github.io/tags/wordcount/"/>
    
      <category term="大数据" scheme="https://xyueji.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>docker-compose搭建大数据环境</title>
    <link href="https://xyueji.github.io/docker-compose%E6%90%AD%E5%BB%BA%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%8E%AF%E5%A2%83.html"/>
    <id>https://xyueji.github.io/docker-compose搭建大数据环境.html</id>
    <published>2020-06-05T09:28:27.000Z</published>
    <updated>2020-12-09T06:34:16.233Z</updated>
    
    <content type="html"><![CDATA[<p>之前写过一篇docker-compose一键启停Vue+SpringBoot的前后端项目。最近需要用到hadoop、es、kafka、flink等大数据组件，由于公司测试环境并不满足起这么多服务，加上正好公司分配的电脑主机处于空闲状态，于是想着在主机上用docker搭建大数据环境，供测试与学习使用。</p><h2 id="windows-docker桌面版安装"><a href="#windows-docker桌面版安装" class="headerlink" title="windows docker桌面版安装"></a>windows docker桌面版安装</h2><p>电脑主机系统是windows10，安装对应版本的docker，具体安装教程可参考<a href="https://www.runoob.com/docker/windows-docker-install.html" target="_blank" rel="noopener">https://runoob.com/docker/windows-docker-install.html</a>。</p><h2 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h2><p>首先编写docker-compose.yml文件，具体配置解释可以参考<a href="https://www.runoob.com/docker/docker-compose.html" target="_blank" rel="noopener">https://www.runoob.com/docker/docker-compose.html</a>，本次编写的大数据环境包括hadoop、hive、spark、es、kafka、flink和hbase。具体内容如下：<br><a id="more"></a><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  namenode:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/hadoop-namenode:1.1.0-hadoop2.8-java8</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">namenode</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./data/namenode:/hadoop/dfs/name</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">CLUSTER_NAME=hadoop</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hadoop-hive.env</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">50070</span><span class="string">:50070</span></span><br><span class="line"><span class="attr">  resourcemanager:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/hadoop-resourcemanager:1.1.0-hadoop2.8-java8</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">resourcemanager</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">namenode</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">datanode1</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">datanode2</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">datanode3</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hadoop-hive.env</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8088:8088"</span></span><br><span class="line"><span class="attr">  historyserver:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/hadoop-historyserver:1.1.0-hadoop2.8-java8</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">historyserver</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">namenode</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">datanode1</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">datanode2</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./data/historyserver:/hadoop/yarn/timeline</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hadoop-hive.env</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8188:8188"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  nodemanager1:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/hadoop-nodemanager:1.1.0-hadoop2.8-java8</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">nodemanager1</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">namenode</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">datanode1</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">datanode2</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hadoop-hive.env</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8042:8042"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  datanode1:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/hadoop-datanode:1.1.0-hadoop2.8-java8</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">datanode1</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">namenode</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./data/datanode1:/hadoop/dfs/data</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hadoop-hive.env</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  datanode2:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/hadoop-datanode:1.1.0-hadoop2.8-java8</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">datanode2</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">namenode</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./data/datanode2:/hadoop/dfs/data</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hadoop-hive.env</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  datanode3:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/hadoop-datanode:1.1.0-hadoop2.8-java8</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">datanode3</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">namenode</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./data/datanode3:/hadoop/dfs/data</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hadoop-hive.env</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  hive-server:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/hive:2.1.0-postgresql-metastore</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">hive-server</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hadoop-hive.env</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"HIVE_CORE_CONF_javax_jdo_option_ConnectionURL=jdbc:postgresql://hive-metastore/metastore"</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"10000:10000"</span></span><br><span class="line"><span class="attr">  hive-metastore:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/hive:2.1.0-postgresql-metastore</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">hive-metastore</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hadoop-hive.env</span></span><br><span class="line"><span class="attr">    command:</span> <span class="string">/opt/hive/bin/hive</span> <span class="bullet">--service</span> <span class="string">metastore</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">9083</span><span class="string">:9083</span></span><br><span class="line"><span class="attr">  hive-metastore-postgresql:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/hive-metastore-postgresql:2.1.0</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">5432</span><span class="string">:5432</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./data/postgresql/:/var/lib/postgresql/data</span></span><br><span class="line"><span class="attr">  spark-master:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/spark-master:2.1.0-hadoop2.8-hive-java8</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">spark-master</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">8080</span><span class="string">:8080</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">7077</span><span class="string">:7077</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hadoop-hive.env</span></span><br><span class="line"><span class="attr">  spark-worker:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/spark-worker:2.1.0-hadoop2.8-hive-java8</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">spark-master</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">SPARK_MASTER=spark://spark-master:7077</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8081:8081"</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hadoop-hive.env</span></span><br><span class="line"><span class="attr">  mysql-server:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">mysql:5.7</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">mysql-server</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"3306:3306"</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MYSQL_ROOT_PASSWORD=123456</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./data/mysql:/var/lib/mysql</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  elasticsearch:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">elasticsearch:6.5.3</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">discovery.type=single-node</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9200:9200"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9300:9300"</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">es_network</span></span><br><span class="line"><span class="attr">  kibana:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">kibana:6.5.3</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"5601:5601"</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">es_network</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">  jobmanager:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">flink</span></span><br><span class="line"><span class="attr">    expose:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"6123"</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8081:8081"</span></span><br><span class="line"><span class="attr">    command:</span> <span class="string">jobmanager</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">JOB_MANAGER_RPC_ADDRESS=jobmanager</span></span><br><span class="line"><span class="attr">  taskmanager:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">flink</span></span><br><span class="line"><span class="attr">    expose:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"6121"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"6122"</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">jobmanager</span></span><br><span class="line"><span class="attr">    command:</span> <span class="string">taskmanager</span></span><br><span class="line"><span class="attr">    links:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"jobmanager:jobmanager"</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">JOB_MANAGER_RPC_ADDRESS=jobmanager</span></span><br><span class="line">      </span><br><span class="line"><span class="attr">  zoo:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">zookeeper:3.4.10</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">zoo</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      ZOO_MY_ID:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">      ZOO_SERVERS:</span> <span class="string">server.1=0.0.0.0:2888:3888</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">2181</span><span class="string">:2181</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">  kafka:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">wurstmeister/kafka</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./data/kafka/etc/localtime:/etc/localtime</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">9092</span><span class="string">:9092</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      KAFKA_ADVERTISED_HOST_NAME:</span> <span class="string">&lt;主机ip&gt;</span></span><br><span class="line"><span class="attr">      KAFKA_ZOOKEEPER_CONNECT:</span> <span class="string">&lt;主机ip&gt;:2181</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  hbase-master:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/hbase-master:1.0.0-hbase1.2.6</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">hbase-master</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">hbase-master</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hbase-distributed-local.env</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      SERVICE_PRECONDITION:</span> <span class="string">"namenode:50070 datanode:50075 zoo:2181"</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">16010</span><span class="string">:16010</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  hbase-region:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">bde2020/hbase-regionserver:1.0.0-hbase1.2.6</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">hbase-regionserver</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">hbase-regionserver</span></span><br><span class="line"><span class="attr">    env_file:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./hbase-distributed-local.env</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      HBASE_CONF_hbase_regionserver_hostname:</span> <span class="string">hbase-region</span></span><br><span class="line"><span class="attr">      SERVICE_PRECONDITION:</span> <span class="string">"namenode:50070 datanode:50075 zoo:2181 hbase-master:16010"</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">16030</span><span class="string">:16030</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  es_network:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>hadoop-hive.env<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">CORE_CONF_fs_defaultFS=hdfs://namenode:9000</span></span><br><span class="line"><span class="string">CORE_CONF_hadoop_http_staticuser_user=root</span></span><br><span class="line"><span class="string">CORE_CONF_hadoop_proxyuser_hue_hosts=*</span></span><br><span class="line"><span class="string">CORE_CONF_hadoop_proxyuser_hue_groups=*</span></span><br><span class="line"><span class="string">CORE_CONF_io_compression_codecs=org.apache.hadoop.io.compress.SnappyCodec</span></span><br><span class="line"></span><br><span class="line"><span class="string">HDFS_CONF_dfs_webhdfs_enabled=true</span></span><br><span class="line"><span class="string">HDFS_CONF_dfs_permissions_enabled=false</span></span><br><span class="line"><span class="string">HDFS_CONF_dfs_namenode_datanode_registration_ip___hostname___check=false</span></span><br><span class="line"></span><br><span class="line"><span class="string">YARN_CONF_yarn_log___aggregation___enable=true</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_log_server_url=http://historyserver:8188/applicationhistory/logs/</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_resourcemanager_recovery_enabled=true</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_resourcemanager_store_class=org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_resourcemanager_scheduler_class=org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_scheduler_capacity_root_default_maximum___allocation___mb=8192</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_scheduler_capacity_root_default_maximum___allocation___vcores=4</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_resourcemanager_fs_state___store_uri=/rmstate</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_resourcemanager_system___metrics___publisher_enabled=true</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_resourcemanager_hostname=resourcemanager</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_resourcemanager_address=resourcemanager:8032</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_resourcemanager_scheduler_address=resourcemanager:8030</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_resourcemanager_resource__tracker_address=resourcemanager:8031</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_timeline___service_enabled=true</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_timeline___service_generic___application___history_enabled=true</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_timeline___service_hostname=historyserver</span></span><br><span class="line"><span class="string">YARN_CONF_mapreduce_map_output_compress=true</span></span><br><span class="line"><span class="string">YARN_CONF_mapred_map_output_compress_codec=org.apache.hadoop.io.compress.SnappyCodec</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_nodemanager_resource_memory___mb=16384</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_nodemanager_resource_cpu___vcores=8</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_nodemanager_disk___health___checker_max___disk___utilization___per___disk___percentage=98.5</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_nodemanager_remote___app___log___dir=/app-logs</span></span><br><span class="line"><span class="string">YARN_CONF_yarn_nodemanager_aux___services=mapreduce_shuffle</span></span><br><span class="line"></span><br><span class="line"><span class="string">MAPRED_CONF_mapreduce_framework_name=yarn</span></span><br><span class="line"><span class="string">MAPRED_CONF_mapred_child_java_opts=-Xmx4096m</span></span><br><span class="line"><span class="string">MAPRED_CONF_mapreduce_map_memory_mb=4096</span></span><br><span class="line"><span class="string">MAPRED_CONF_mapreduce_reduce_memory_mb=8192</span></span><br><span class="line"><span class="string">MAPRED_CONF_mapreduce_map_java_opts=-Xmx3072m</span></span><br><span class="line"><span class="string">MAPRED_CONF_mapreduce_reduce_java_opts=-Xmx6144m</span></span><br></pre></td></tr></table></figure></p><p>hbase-distributed-local.env<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">HBASE_CONF_hbase_rootdir=hdfs://namenode:9000/hbase</span></span><br><span class="line"><span class="string">HBASE_CONF_hbase_cluster_distributed=true</span></span><br><span class="line"><span class="string">HBASE_CONF_hbase_zookeeper_quorum=zoo</span></span><br><span class="line"></span><br><span class="line"><span class="string">HBASE_CONF_hbase_master=hbase-master:16000</span></span><br><span class="line"><span class="string">HBASE_CONF_hbase_master_hostname=hbase-master</span></span><br><span class="line"><span class="string">HBASE_CONF_hbase_master_port=16000</span></span><br><span class="line"><span class="string">HBASE_CONF_hbase_master_info_port=16010</span></span><br><span class="line"><span class="string">HBASE_CONF_hbase_regionserver_port=16020</span></span><br><span class="line"><span class="string">HBASE_CONF_hbase_regionserver_info_port=16030</span></span><br><span class="line"></span><br><span class="line"><span class="string">HBASE_MANAGES_ZK=false</span></span><br></pre></td></tr></table></figure></p><h2 id="一键启停"><a href="#一键启停" class="headerlink" title="一键启停"></a>一键启停</h2><p>可以把docker-compose.yml中的大数据组件配置分为多个文件写，这样就可以用docker界面去启停container。作者采用的方法是编写脚本去启停各个服务。</p><h3 id="所有服务启停"><a href="#所有服务启停" class="headerlink" title="所有服务启停"></a>所有服务启停</h3><p>start.sh<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">docker-compose -f docker-compose.yml up -d namenode datanode1 datanode2 datanode3 resourcemanager nodemanager1 historyserver</span><br><span class="line"></span><br><span class="line">sleep 5</span><br><span class="line"></span><br><span class="line">docker-compose -f docker-compose.yml up -d hive-metastore-postgresql hive-server hive-metastore hive-metastore-postgresql mysql-server</span><br><span class="line"></span><br><span class="line">sleep 5</span><br><span class="line"></span><br><span class="line">docker-compose -f docker-compose.yml up -d spark-master spark-worker</span><br><span class="line"></span><br><span class="line">sleep 5</span><br><span class="line"></span><br><span class="line">docker-compose -f docker-compose.yml up -d elasticsearch kibana</span><br><span class="line"></span><br><span class="line">sleep 5</span><br><span class="line"></span><br><span class="line">docker-compose -f docker-compose.yml up -d zoo kafka</span><br><span class="line"></span><br><span class="line">sleep 5</span><br><span class="line"></span><br><span class="line">docker-compose -f docker-compose.yml up -d jobmanager taskmanager</span><br></pre></td></tr></table></figure></p><p>stop.sh<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">docker-compose stop</span><br></pre></td></tr></table></figure></p><h3 id="分别启停服务"><a href="#分别启停服务" class="headerlink" title="分别启停服务"></a>分别启停服务</h3><p>编写启停脚本，以启停flink为例，其他服务类似。<br>start-flink.sh<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose stop -f docker-compose.yml up -d jobmanager taskmanager</span><br></pre></td></tr></table></figure></p><p>stop-fink.sh<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose stop jobmanager taskmanager</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前写过一篇docker-compose一键启停Vue+SpringBoot的前后端项目。最近需要用到hadoop、es、kafka、flink等大数据组件，由于公司测试环境并不满足起这么多服务，加上正好公司分配的电脑主机处于空闲状态，于是想着在主机上用docker搭建大数据环境，供测试与学习使用。&lt;/p&gt;
&lt;h2 id=&quot;windows-docker桌面版安装&quot;&gt;&lt;a href=&quot;#windows-docker桌面版安装&quot; class=&quot;headerlink&quot; title=&quot;windows docker桌面版安装&quot;&gt;&lt;/a&gt;windows docker桌面版安装&lt;/h2&gt;&lt;p&gt;电脑主机系统是windows10，安装对应版本的docker，具体安装教程可参考&lt;a href=&quot;https://www.runoob.com/docker/windows-docker-install.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://runoob.com/docker/windows-docker-install.html&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;docker-compose-yml&quot;&gt;&lt;a href=&quot;#docker-compose-yml&quot; class=&quot;headerlink&quot; title=&quot;docker-compose.yml&quot;&gt;&lt;/a&gt;docker-compose.yml&lt;/h2&gt;&lt;p&gt;首先编写docker-compose.yml文件，具体配置解释可以参考&lt;a href=&quot;https://www.runoob.com/docker/docker-compose.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.runoob.com/docker/docker-compose.html&lt;/a&gt;，本次编写的大数据环境包括hadoop、hive、spark、es、kafka、flink和hbase。具体内容如下：&lt;br&gt;
    
    </summary>
    
      <category term="docker" scheme="https://xyueji.github.io/categories/docker/"/>
    
    
      <category term="大数据" scheme="https://xyueji.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="docker" scheme="https://xyueji.github.io/tags/docker/"/>
    
      <category term="docker-compose" scheme="https://xyueji.github.io/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>Mac-docker动态给Container添加端口映射</title>
    <link href="https://xyueji.github.io/Mac-docker%E5%8A%A8%E6%80%81%E7%BB%99Container%E6%B7%BB%E5%8A%A0%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84.html"/>
    <id>https://xyueji.github.io/Mac-docker动态给Container添加端口映射.html</id>
    <published>2020-05-28T03:11:28.000Z</published>
    <updated>2020-07-04T18:19:19.361Z</updated>
    
    <content type="html"><![CDATA[<p>最近用docker搭建了hadoop、hive、HBase等集群，搭建完成后想要搭建Flink集群，发现无法动态给Container添加端口映射。上网搜寻一番发现解决之法。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li><p>通过docker container ls -a查看container id。<br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/84306FEB-C1C3-43C7-9FC2-D0CDF06ACE66.png" alt="fc2fc56e823aafd859aa5be3c534d253"></p></li><li><p>Mac 下 Docker Containers配置文件在~/Library/Containers/com.docker.docker目录，进入该目录，我们要修改的文件在Data/vms/0下，进入后发现有个tty文件，使用screen tty登录，会进入一个新的screen窗口，如下：<br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/F6808423-C8EC-4870-A0EB-D6149D1F5E79.png" alt="e3272a5114ab4a4c4cf077ca67710653"></p></li></ol><a id="more"></a><ol start="3"><li>进入/var/lib/docker/containers目录，发现镜像，选择步骤一所得的Container id为开头的镜像。需要修改两个文件config.v2.json和hostconfig.json<br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/D57AB76E-2D4F-49F3-9FC0-FB1A306E374E.png" alt="047b771c5814a263dad77d4f31fcb927"></li></ol><ul><li>config.v2.json文件修改添加Config.ExposedPorts部分, 如我们需要添加8080端口，则在ExposedPorts数组下添加”8080/tcp”:{}项：<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">"ExposedPorts":&#123;</span><br><span class="line">    "22/tcp":&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    "8080/tcp":&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>hostconfig.json文件修改添加PortBindings部分，还以8080端口为例：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">"PortBindings":&#123;</span><br><span class="line">     "8080/tcp":[</span><br><span class="line">         &#123;</span><br><span class="line">            <span class="attr">"HostIp"</span>:<span class="string">""</span>,</span><br><span class="line">            <span class="attr">"HostPort"</span>:<span class="string">"8080"</span></span><br><span class="line">         &#125;</span><br><span class="line">     ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="4"><li>修改完config.v2.json和hostconfig.json文件，按Ctrl+a，然后迅速按d退出screen。</li><li>杀掉screen进程，如果不杀掉再此进入screen可能会出现乱码现象。运行screen -wipe：<br><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/82FFB932-2F8F-496B-A33E-BB302C2B0435.png" alt="b062fec15cebf756fdee1390b0cc803c"></li><li>重启docker即可生效，若不生效注意config.v2.json和hostconfig.json是否修改对，我修改几次发现里面内容根本没修改，保存后最好检查一下修改内容。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近用docker搭建了hadoop、hive、HBase等集群，搭建完成后想要搭建Flink集群，发现无法动态给Container添加端口映射。上网搜寻一番发现解决之法。&lt;/p&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法&quot;&gt;&lt;/a&gt;解决方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;通过docker container ls -a查看container id。&lt;br&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/xyueji/img@master/web/84306FEB-C1C3-43C7-9FC2-D0CDF06ACE66.png&quot; alt=&quot;fc2fc56e823aafd859aa5be3c534d253&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mac 下 Docker Containers配置文件在~/Library/Containers/com.docker.docker目录，进入该目录，我们要修改的文件在Data/vms/0下，进入后发现有个tty文件，使用screen tty登录，会进入一个新的screen窗口，如下：&lt;br&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/xyueji/img@master/web/F6808423-C8EC-4870-A0EB-D6149D1F5E79.png&quot; alt=&quot;e3272a5114ab4a4c4cf077ca67710653&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="docker" scheme="https://xyueji.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://xyueji.github.io/tags/docker/"/>
    
      <category term="container" scheme="https://xyueji.github.io/tags/container/"/>
    
      <category term="mac" scheme="https://xyueji.github.io/tags/mac/"/>
    
      <category term="端口映射" scheme="https://xyueji.github.io/tags/%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>Vue+SpringBoot项目docker一键部署</title>
    <link href="https://xyueji.github.io/Vue+SpringBoot%E9%A1%B9%E7%9B%AEdocker%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2.html"/>
    <id>https://xyueji.github.io/Vue+SpringBoot项目docker一键部署.html</id>
    <published>2020-05-25T11:25:10.000Z</published>
    <updated>2020-07-04T18:19:19.362Z</updated>
    
    <content type="html"><![CDATA[<p>项目编写完了，到了部署这一步发现过程比较繁杂，部署完后端部署前端。为了避免每次更新项目后繁琐的部署流程，选择docker可以一键部署，非常的方便，本文使用docker-compose，编写docker-compose.yml，实现一键部署与起停服务。</p><h2 id="Compose-简介"><a href="#Compose-简介" class="headerlink" title="Compose 简介"></a>Compose 简介</h2><p>Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。</p><p><strong>本文编写server.Dockerfile和fe.Dockerfile来安装前后端环境和编译项目，其中涉及到的配置文件有settings.xml和ngnix.conf，加上docker-compose.yml共5个文件。</strong></p><h2 id="server-Dockerfile"><a href="#server-Dockerfile" class="headerlink" title="server.Dockerfile"></a>server.Dockerfile</h2><a id="more"></a><p>内容如下:<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定基础镜像</span></span><br><span class="line"><span class="string">FROM</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/acs/maven:3-jdk-8</span></span><br><span class="line"><span class="comment"># 维护者信息</span></span><br><span class="line"><span class="string">MAINTAINER</span> <span class="string">xyueji</span></span><br><span class="line"></span><br><span class="line"><span class="string">RUN</span> <span class="string">echo</span> <span class="string">"-------------------- server环境配置 --------------------"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露8099端口</span></span><br><span class="line"><span class="string">EXPOSE</span> <span class="number">8099</span></span><br><span class="line"><span class="comment"># 设置环境编码UTF-8</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">LANG</span> <span class="string">C.UTF-8</span></span><br><span class="line"><span class="comment"># 运行 - 配置容器，使其可执行化</span></span><br><span class="line"><span class="string">WORKDIR</span> <span class="string">/app</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">mkdir</span> <span class="string">server</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">./code/server</span> <span class="string">./server</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改maven配置</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">rm</span> <span class="bullet">-rf</span> <span class="string">/usr/share/maven/conf/settings.xml</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">./settings.xml</span> <span class="string">/usr/share/maven/conf/settings.xml</span> <span class="comment"># 从本地拷settings.xml</span></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">cd</span> <span class="string">server</span> <span class="string">&amp;&amp;</span> <span class="string">mvn</span> <span class="string">clean</span> <span class="string">package</span> <span class="bullet">-Pdev</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">cp</span> <span class="bullet">-r</span> <span class="string">/app/server/target/server-1.0.0/*</span> <span class="string">/app</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">./code/jars/*</span> <span class="string">/app/lib/</span></span><br></pre></td></tr></table></figure></p><h2 id="fe-Dockerfile"><a href="#fe-Dockerfile" class="headerlink" title="fe.Dockerfile"></a>fe.Dockerfile</h2><p>内容如下：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># node镜像</span></span><br><span class="line"><span class="string">FROM</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/acs-sample/node:latest</span> <span class="string">as</span> <span class="string">build-stage</span></span><br><span class="line"><span class="comment"># 维护者信息</span></span><br><span class="line"><span class="string">MAINTAINER</span> <span class="string">xyueji</span></span><br><span class="line"></span><br><span class="line"><span class="string">RUN</span> <span class="string">echo</span> <span class="string">"-------------------- web环境配置 --------------------"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定接下来的工作路径为/app  - 类似于cd命令</span></span><br><span class="line"><span class="string">WORKDIR</span> <span class="string">/app</span></span><br><span class="line"><span class="comment"># 拷贝前端项目到app目录下</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">./code/fe/</span> <span class="string">./</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置淘宝npm镜像</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">npm</span> <span class="string">config</span> <span class="string">set</span> <span class="string">registry</span> <span class="attr">https://registry.npm.taobao.org</span> <span class="string">\</span></span><br><span class="line">    <span class="string">&amp;&amp;</span> <span class="string">npm</span> <span class="string">install</span> <span class="bullet">-g</span> <span class="string">cnpm</span></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">cnpm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打包 - 目的：丢到nginx下跑</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">cnpm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前端项目运行命令</span></span><br><span class="line"><span class="string">CMD</span> <span class="string">["npm","run","start"]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ======================== 上：npm打包  下：nginx运行 ========================</span></span><br><span class="line"><span class="comment"># nginx镜像</span></span><br><span class="line"><span class="string">FROM</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/acs-sample/nginx:latest</span> <span class="string">as</span> <span class="string">production-stage</span></span><br><span class="line"><span class="comment"># 维护者信息</span></span><br><span class="line"><span class="string">MAINTAINER</span> <span class="string">xyueji</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除nginx容器的default.conf文件、nginx配置文件</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">rm</span> <span class="string">/etc/nginx/conf.d/default.conf</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">rm</span> <span class="string">/etc/nginx/nginx.conf</span></span><br><span class="line"><span class="comment"># 把主机的nginx.conf文件复制到nginx容器的/etc/nginx文件夹下</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">./nginx.conf</span> <span class="string">/etc/nginx/</span></span><br><span class="line"><span class="comment"># 拷贝前端vue项目打包后生成的文件到nginx下运行</span></span><br><span class="line"><span class="string">COPY</span> <span class="bullet">--from=build-stage</span> <span class="string">/app/dist</span> <span class="string">/usr/share/nginx/html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露80端口</span></span><br><span class="line"><span class="string">EXPOSE</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注：CMD不同于RUN，CMD用于指定在容器启动时所要执行的命令，而RUN用于指定镜像构建时所要执行的命令。</span></span><br><span class="line"><span class="comment">#    RUN指令创建的中间镜像会被缓存，并会在下次构建中使用。如果不想使用这些缓存镜像，可以在构建时指定--no-cache参数，如：docker build --no-cache</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用daemon off的方式将nginx运行在前台保证镜像不至于退出</span></span><br><span class="line"><span class="string">CMD</span> <span class="string">["nginx",</span> <span class="string">"-g"</span><span class="string">,</span> <span class="string">"daemon off;"</span><span class="string">]</span></span><br></pre></td></tr></table></figure></p><h2 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h2><p>内容如下：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  server:</span>                                  <span class="comment"># 后端springboot容器</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">server</span>              <span class="comment"># 容器名为'server'</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span>                     <span class="comment"># 重启策略: 容器退出时总是重启容器</span></span><br><span class="line"><span class="attr">    build:</span></span><br><span class="line"><span class="attr">      context:</span> <span class="string">./</span>                       <span class="comment"># 指定设定上下文根目录，然后以该目录为准指定Dockerfile</span></span><br><span class="line"><span class="attr">      dockerfile:</span> <span class="string">./server-Dockerfile</span></span><br><span class="line"><span class="attr">    working_dir:</span> <span class="string">/app</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="attr">    volumes:</span>                            <span class="comment"># 挂载文件</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./logs/:/app/logs</span>                <span class="comment"># 映射容器产生的日志到主机的logs文件夹</span></span><br><span class="line"><span class="attr">    ports:</span>                              <span class="comment"># 映射端口</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8099:8099"</span></span><br><span class="line"><span class="attr">    command:</span> <span class="string">sh</span> <span class="string">./bin/start.sh</span>            <span class="comment"># 后端服务启动脚本命令，注意：后端服务不能后台运行，会不断重启</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  fe:</span>                                  <span class="comment"># 前端node容器(运行nginx中的Vue项目)</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">fe</span>              <span class="comment"># 容器名为'fe'</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span>                     <span class="comment"># 重启策略: 容器退出时总是重启容器</span></span><br><span class="line"><span class="attr">    build:</span></span><br><span class="line"><span class="attr">      context:</span> <span class="string">./</span>                       <span class="comment"># 指定设定上下文根目录，然后以该目录为准指定Dockerfile</span></span><br><span class="line"><span class="attr">      dockerfile:</span> <span class="string">./fe-Dockerfile</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"80:80"</span>                      <span class="comment"># 映射端口</span></span><br><span class="line"><span class="attr">    depends_on:</span>                          <span class="comment"># 依赖于server容器，被依赖容器启动后此fe容器才可启动</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">server</span></span><br></pre></td></tr></table></figure></p><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build    # 编译环境</span><br><span class="line">docker-compose up      # 起服务</span><br><span class="line">docker-compose down    # 停服务</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目编写完了，到了部署这一步发现过程比较繁杂，部署完后端部署前端。为了避免每次更新项目后繁琐的部署流程，选择docker可以一键部署，非常的方便，本文使用docker-compose，编写docker-compose.yml，实现一键部署与起停服务。&lt;/p&gt;
&lt;h2 id=&quot;Compose-简介&quot;&gt;&lt;a href=&quot;#Compose-简介&quot; class=&quot;headerlink&quot; title=&quot;Compose 简介&quot;&gt;&lt;/a&gt;Compose 简介&lt;/h2&gt;&lt;p&gt;Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文编写server.Dockerfile和fe.Dockerfile来安装前后端环境和编译项目，其中涉及到的配置文件有settings.xml和ngnix.conf，加上docker-compose.yml共5个文件。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;server-Dockerfile&quot;&gt;&lt;a href=&quot;#server-Dockerfile&quot; class=&quot;headerlink&quot; title=&quot;server.Dockerfile&quot;&gt;&lt;/a&gt;server.Dockerfile&lt;/h2&gt;
    
    </summary>
    
      <category term="docker" scheme="https://xyueji.github.io/categories/docker/"/>
    
    
      <category term="docker-compose" scheme="https://xyueji.github.io/tags/docker-compose/"/>
    
      <category term="vue" scheme="https://xyueji.github.io/tags/vue/"/>
    
      <category term="springboot" scheme="https://xyueji.github.io/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>vue-simple-uploader+springboot大文件上传</title>
    <link href="https://xyueji.github.io/vue-simple-uploader+springboot%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.html"/>
    <id>https://xyueji.github.io/vue-simple-uploader+springboot大文件上传.html</id>
    <published>2020-05-22T14:20:50.000Z</published>
    <updated>2021-09-02T09:08:54.150Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;最近遇到一个vue大文件上传的问题，需要实现断点和分片上传。在网上查询许久，发现vue-simple-uploader这个插件可以满足新需求。由于本人项目用的是vue+springboot前后端分离技术，因此在此分前后端记录一下vue-simple-uploader如何使用。</p><h2 id="SpringBoot后端"><a href="#SpringBoot后端" class="headerlink" title="SpringBoot后端"></a>SpringBoot后端</h2><p><strong>一、创建文件分片和文件实体类</strong><br><a id="more"></a><br>Chunk.class<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-19 10:07</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 文件块</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Chunk</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前文件块，从1开始</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer chunkNumber;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分块大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer chunkSize;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前分块大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer currentChunkSize;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 总大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalSize;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件标识</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String identifier;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String filename;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 相对路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String relativePath;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 总块数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalChunks;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> MultipartFile file;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//setter、getter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>FileInfo.class<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-19 10:04</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileInfo</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String filename;</span><br><span class="line">    <span class="keyword">private</span> String identifier;</span><br><span class="line">    <span class="keyword">private</span> Integer totalSize;</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> String location;</span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="keyword">private</span> Integer game_id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>二、编写业务逻辑</strong><br>文件分片相关逻辑，主要由两部分：入库和分片检验，用于vue-simple-uploader每次上传分片时都会检验该分片是否上传，用到controller里的@PostMapping(“chunk”)和@GetMapping(“chunk”)，这两个接口稍后再说。<br>ChunkServiceImpl.class<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-19 10:12</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 文件块操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChunkServiceImpl</span> <span class="keyword">implements</span> <span class="title">ChunkService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span>(name = <span class="string">"kfUserDao"</span>)</span><br><span class="line">    <span class="keyword">private</span> KFUserDao kfUserDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存分片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> chunk</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveChunk</span><span class="params">(Chunk chunk)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        kfUserDao.addOrUpdate(saveChunk, <span class="keyword">new</span> Object[]&#123;</span><br><span class="line">                chunk.getChunkNumber(), chunk.getChunkSize(), chunk.getCurrentChunkSize(),</span><br><span class="line">                chunk.getTotalSize(), chunk.getIdentifier(), chunk.getFilename(),</span><br><span class="line">                chunk.getRelativePath(), chunk.getTotalChunks(), chunk.getType()&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检查分片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> identifier</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> chunkNumber</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkChunk</span><span class="params">(String identifier, Integer chunkNumber)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        StringBuilder sql = <span class="keyword">new</span> StringBuilder(checkChunkSql);</span><br><span class="line">        sql.append(<span class="string">" where identifier = ? and chunkNumber = ? and rownum = 1"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res = kfUserDao.queryForInt(sql.toString(), <span class="keyword">new</span> Object[]&#123;identifier,chunkNumber&#125;);</span><br><span class="line">        <span class="keyword">return</span> res == -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>文件相关逻辑主要是入库和处理文件相关操作<br>FileInfoServiceImpl.class<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-19 11:31</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 文件操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileInfoServiceImpl</span> <span class="keyword">implements</span> <span class="title">FileInfoService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加文件信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileInfo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addFileInfo</span><span class="params">(FileInfo fileInfo)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> res = kfUserDao.addOrUpdate(addFileInfoSql, <span class="keyword">new</span> Object[]&#123;</span><br><span class="line">                fileInfo.getFilename(), fileInfo.getIdentifier(),</span><br><span class="line">                fileInfo.getTotalSize(), fileInfo.getType(), fileInfo.getLocation(),</span><br><span class="line">                fileInfo.getStatus(), fileInfo.getGame_id()&#125;);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他逻辑...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>三、控制器</strong><br>这部分最为关键，主要分为@PostMapping(“chunk”)、@GetMapping(“chunk”)和@PostMapping(“merge”)，第一个Post请求的chunk是分片写入服务器和分片信息入库的，第二个Get请求的chunk是检验分片是否上传过(可以用于断点或跨浏览器上传)，第三个merge负责在文件分片完成后进行合并。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xiongzhigang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-05-19 11:34</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 文件操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/uploader"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;upload.folder&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String uploadFolder;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> FileInfoService fileInfoService;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ChunkService chunkService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分片上传</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> chunk</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"chunk"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">uploadChunk</span><span class="params">(Chunk chunk)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        MultipartFile file = chunk.getFile();</span><br><span class="line">        LogInfo.WEB_LOG.info(<span class="string">"file originName: &#123;&#125;, chunkNumber: &#123;&#125;"</span>, file.getOriginalFilename(), chunk.getChunkNumber());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bytes = file.getBytes();</span><br><span class="line">        Path path = Paths.get(generatePath(uploadFolder, chunk));</span><br><span class="line">        <span class="comment">//文件写入指定路径</span></span><br><span class="line">        Files.write(path, bytes);</span><br><span class="line">        LogInfo.WEB_LOG.info(<span class="string">"文件 &#123;&#125; 写入成功, uuid:&#123;&#125;"</span>, chunk.getFilename(), chunk.getIdentifier());</span><br><span class="line">        chunkService.saveChunk(chunk);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"文件上传成功"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 断点和快传</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> chunk</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"chunk"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">checkChunk</span><span class="params">(Chunk chunk, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (chunkService.checkChunk(chunk.getIdentifier(), chunk.getChunkNumber())) &#123;</span><br><span class="line">            response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> chunk;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 合并分片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileInfo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/mergeFile"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">mergeFile</span><span class="params">( @RequestBody FileInfo fileInfo)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String filename = fileInfo.getFilename();</span><br><span class="line">        String file = uploadFolder + <span class="string">"/"</span> + fileInfo.getIdentifier() + <span class="string">"/"</span> + filename;</span><br><span class="line">        String folder = uploadFolder + <span class="string">"/"</span> + fileInfo.getIdentifier();</span><br><span class="line">        merge(file, folder, filename);</span><br><span class="line"></span><br><span class="line">        fileInfo.setLocation(file);</span><br><span class="line">        fileInfo.setStatus(<span class="number">0</span>);</span><br><span class="line">        fileInfoService.addFileInfo(fileInfo);</span><br><span class="line">        <span class="comment">// 异步读取excel且批量insert overwrite impala</span></span><br><span class="line">        fileInfoService.addGameItemBatch(fileInfo);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"合并成功"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检查上传是否完毕</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> game</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"checkUploadComplete"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">checkUploadComplete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Vue前端"><a href="#Vue前端" class="headerlink" title="Vue前端"></a>Vue前端</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;首先安装vue-simple-uploader，安装命令如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save vue-simple-uploader</span><br></pre></td></tr></table></figure></p><p>新建一个组件便于引用，里面主要包括：uploader、uploader-btn、uploader-list和uploader-file，其中详细的解释见：<a href="https://github.com/simple-uploader/vue-uploader" target="_blank" rel="noopener">simple-uploader</a>。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 上传 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uploader</span></span></span><br><span class="line"><span class="tag">            <span class="attr">ref</span>=<span class="string">"uploader"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:options</span>=<span class="string">"options"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:file-status-text</span>=<span class="string">"statusText"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">file-added</span>=<span class="string">"onFileAdded"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">file-success</span>=<span class="string">"onFileSuccess"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">file-complete</span>=<span class="string">"fileComplete"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">file-error</span>=<span class="string">"onFileError"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">file-removed</span>=<span class="string">"fileRemoved"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">"uploader-app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">uploader-unsupport</span>&gt;</span><span class="tag">&lt;/<span class="name">uploader-unsupport</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-tooltip</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">effect</span>=<span class="string">"dark"</span> <span class="attr">:content</span>=<span class="string">"uploadTip"</span> <span class="attr">placement</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">uploader-btn</span> <span class="attr">class</span>=<span class="string">"global-uploader-btn"</span> <span class="attr">:attrs</span>=<span class="string">"attrs"</span> <span class="attr">ref</span>=<span class="string">"uploadBtn"</span>&gt;</span>选择文件<span class="tag">&lt;/<span class="name">uploader-btn</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-tooltip</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">uploader-list</span> <span class="attr">v-show</span>=<span class="string">"panelShow"</span> <span class="attr">class</span>=<span class="string">"global-uploader-list"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">upload-file</span>&gt;</span><span class="tag">&lt;/<span class="name">upload-file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">uploader-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">uploader</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">        name: <span class="string">"upload"</span>,</span></span><br><span class="line"><span class="undefined">        data() &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="undefined">                options: &#123;</span></span><br><span class="line"><span class="actionscript">                    target: serverURL + <span class="string">'/uploader/chunk'</span>,</span></span><br><span class="line"><span class="undefined">                    chunkSize: 10 * 1024 * 1024,</span></span><br><span class="line"><span class="undefined">                    maxChunkRetries: 3,</span></span><br><span class="line"><span class="actionscript">                    testChunks: <span class="literal">true</span>,</span></span><br><span class="line"><span class="undefined">                    headers: &#123;&#125;,</span></span><br><span class="line"><span class="undefined">                    query() &#123;</span></span><br><span class="line"><span class="undefined">                    &#125;,</span></span><br><span class="line"><span class="actionscript">                    single: <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                attrs: &#123;</span></span><br><span class="line"><span class="actionscript">                    accept: [<span class="string">'.xlsx'</span>, <span class="string">'.xls'</span>]</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                statusText: &#123;</span></span><br><span class="line"><span class="actionscript">                    success: <span class="string">'成功了'</span>,</span></span><br><span class="line"><span class="actionscript">                    error: <span class="string">'出错了'</span>,</span></span><br><span class="line"><span class="actionscript">                    uploading: <span class="string">'上传中'</span>,</span></span><br><span class="line"><span class="actionscript">                    paused: <span class="string">'暂停中'</span>,</span></span><br><span class="line"><span class="actionscript">                    waiting: <span class="string">'等待中'</span></span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        computed: &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//Uploader实例</span></span></span><br><span class="line"><span class="undefined">            uploader() &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="keyword">this</span>.$refs.uploader.uploader;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        methods: &#123;</span></span><br><span class="line"><span class="undefined">            onFileAdded(file) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 选择文件后触发，可以检验文件</span></span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            onFileSuccess(rootFile, file, response, chunk) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> res = <span class="built_in">JSON</span>.parse(response);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 服务器自定义的错误（即虽返回200，但是是错误的情况），这种错误是Uploader无法拦截的</span></span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            onFileError(rootFile, file, response, chunk) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 上传失败</span></span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            fileComplete() &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 上传完成</span></span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            fileRemoved(file) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 移除上传文件</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;最近遇到一个vue大文件上传的问题，需要实现断点和分片上传。在网上查询许久，发现vue-simple-uploader这个插件可以满足新需求。由于本人项目用的是vue+springboot前后端分离技术，因此在此分前后端记录一下vue-simple-uploader如何使用。&lt;/p&gt;
&lt;h2 id=&quot;SpringBoot后端&quot;&gt;&lt;a href=&quot;#SpringBoot后端&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot后端&quot;&gt;&lt;/a&gt;SpringBoot后端&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;一、创建文件分片和文件实体类&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="功能小记" scheme="https://xyueji.github.io/categories/%E5%8A%9F%E8%83%BD%E5%B0%8F%E8%AE%B0/"/>
    
    
      <category term="大文件" scheme="https://xyueji.github.io/tags/%E5%A4%A7%E6%96%87%E4%BB%B6/"/>
    
      <category term="分片" scheme="https://xyueji.github.io/tags/%E5%88%86%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>IDEA连接Impala</title>
    <link href="https://xyueji.github.io/IDEA%E8%BF%9E%E6%8E%A5Impala.html"/>
    <id>https://xyueji.github.io/IDEA连接Impala.html</id>
    <published>2020-05-21T06:01:35.000Z</published>
    <updated>2020-07-04T18:19:19.360Z</updated>
    
    <content type="html"><![CDATA[<p><strong>IDEA添加Driver and Data Source</strong></p><ol><li>打开idea右侧Database选项=》点击加号=》点击Driver and Data Source。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200521132254056.png" alt="image-20200521132254056"></p><ol start="2"><li>添加Driver，点击User  Driver =》Go to Driver。</li></ol><a id="more"></a><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200521134009611.png" alt="image-20200521134009611"></p><ol start="3"><li>配置Driver</li></ol><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200521135321680.png" alt="image-20200521135321680"></p><ol start="4"><li>配置Data Source</li></ol><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200521135914518.png" alt="image-20200521135914518"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;IDEA添加Driver and Data Source&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开idea右侧Database选项=》点击加号=》点击Driver and Data Source。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200521132254056.png&quot; alt=&quot;image-20200521132254056&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;添加Driver，点击User  Driver =》Go to Driver。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="impala" scheme="https://xyueji.github.io/categories/impala/"/>
    
    
      <category term="idea" scheme="https://xyueji.github.io/tags/idea/"/>
    
      <category term="impala" scheme="https://xyueji.github.io/tags/impala/"/>
    
      <category term="datasource" scheme="https://xyueji.github.io/tags/datasource/"/>
    
  </entry>
  
  <entry>
    <title>HBase基本知识</title>
    <link href="https://xyueji.github.io/HBase%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86.html"/>
    <id>https://xyueji.github.io/HBase基本知识.html</id>
    <published>2020-02-06T09:56:57.000Z</published>
    <updated>2020-07-04T18:19:19.360Z</updated>
    
    <content type="html"><![CDATA[<p><strong>数据模型</strong></p><ol><li><p>Name Space</p><p>​    命名空间，类似于关系型数据库的 DatabBase 概念，每个命名空间下有多个表。HBase 有两个自带的命名空间，分别是 hbase 和 default，hbase中存放的是 HBase 内置的表， default 表是用户默认使用的命名空间。</p></li><li><p>Region</p></li></ol><a id="more"></a><p>   ​    类似于关系型数据库的表概念。不同的是，HBase 定义表时只需要声明列族即可，不需 要声明具体的列。这意味着，往 HBase 写入数据时，字段可以动态、按需指定。因此，和关 系型数据库相比，HBase 能够轻松应对字段变更的场景。</p><ol start="3"><li><p>Row</p><p>​    HBase 表中的每行数据都由一个 RowKey 和多个 Column(列)组成，数据是按照 RowKey 的字典顺序存储的，并且查询数据时只能根据 RowKey 进行检索，所以 RowKey 的设计十分重要。</p></li><li><p>Column</p></li></ol><p>   ​    HBase 中的每个列都由 Column Family(列族)和 Column Qualifier(列限定符)进行限 定，例如 info:name，info:age。建表时，只需指明列族，而列限定符无需预先定义。</p><ol start="5"><li><p>Time Stamp</p><p>​    用于标识数据的不同版本(version)，每条数据写入时，如果不指定时间戳，系统会自动为其加上该字段，其值为写入 HBase 的时间。</p></li></ol><p><strong>HBase基本架构</strong></p><ol><li><p>RegionServer</p><p>​    RegionServer为Region的管理者，其实现类为HRegionServer，主要作用如下（一些表数据的操作DML）：</p><ul><li>对于数据的操作：get，put，delete</li><li>对于Region的操作：splitRegion、compactRegion</li></ul></li><li><p>Master</p><p>​    Master是所有RegionServer的管理者，其实现类HMaster，主要作用如下（一些元数据的操作DDL）：</p><ul><li>对于表的操作：create、drop、alter</li><li>对于RegionServer的操作：分配regions到每个RegionServer，监控每个RegionServer的状态，负载均衡和故障转移。</li></ul></li><li><p>Zookeeper</p><p>​    HBase通过Zookeeper来做Master的高可用、RegionServer的监控、元数据的入口以及集群配置的维护工作。</p></li><li><p>HDFS</p><p>​    HDFS为HBase提供最终的底层数据存储服务，同时为HBase提供高可用的支持。</p></li></ol><p><strong><em>HBase详细架构图</em></strong></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200206155538738.png" alt="image-20200206155538738"></p><ol><li><p>StroreFile</p><pre><code>保存实际数据的物理文件，StoreFile以HFile的形式存储在HDFS上。每个Store会有一个或多个StoreFile(HFile)，数据在每个StoreFile中都是有序的。</code></pre></li><li><p>MemStore</p><p>​    写缓存，由于HFile中的数据要求是有序的，所以数据是先存在MemStore中，排好序后，等到刷写时机时才会刷写到HFile，每次刷写都会形成一个新的HFile。</p></li><li><p>WALs</p><p>​    由于数据要经MemStore排序后才能刷写到HFile，但把数据保存在内存中会有很高概率导致数据丢失，为了解决这个问题，数据会先写在一个叫做Write-Ahead logfile的文件中，然后再写入MemStore中。所以在系统出现故障的时候，数据可以通过这个日志文件重建。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;数据模型&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Name Space&lt;/p&gt;
&lt;p&gt;​    命名空间，类似于关系型数据库的 DatabBase 概念，每个命名空间下有多个表。HBase 有两个自带的命名空间，分别是 hbase 和 default，hbase中存放的是 HBase 内置的表， default 表是用户默认使用的命名空间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Region&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="hbase" scheme="https://xyueji.github.io/categories/hbase/"/>
    
    
      <category term="hbase" scheme="https://xyueji.github.io/tags/hbase/"/>
    
      <category term="基础知识" scheme="https://xyueji.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>IDE破解</title>
    <link href="https://xyueji.github.io/IDE%E7%A0%B4%E8%A7%A3.html"/>
    <id>https://xyueji.github.io/IDE破解.html</id>
    <published>2020-02-06T09:46:34.000Z</published>
    <updated>2020-07-04T18:19:19.360Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IDE破解"><a href="#IDE破解" class="headerlink" title="IDE破解"></a>IDE破解</h1><p>目前提供Idea2019和Pycharm2019.3.1破解方法，持续收集中~~~</p><p>相关破解补丁如下：</p><p>链接:<a href="https://pan.baidu.com/s/16_vBzCo_UKqkXSjHJ0J-MQ" target="_blank" rel="noopener">https://pan.baidu.com/s/16_vBzCo_UKqkXSjHJ0J-MQ</a>  密码:3ga4</p><a id="more"></a><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120123216303.png" alt="image-20200120123216303"></p><h2 id="Idea2019破解"><a href="#Idea2019破解" class="headerlink" title="Idea2019破解"></a>Idea2019破解</h2><p><strong>1. 下载破解补丁和激活码</strong></p><p>把破解补丁jetbrains-agent.jar放在安装目录的bin目录下（位置随意，放这是为了防止误删）。</p><p><strong>2. 修改配置文件</strong></p><p>在被修改文件末行添加：<code>-javaagent:你Idea的安装目录jetbrains-agent.jar</code></p><p>mac修改idea.properties文件，右击IDEA应用程序=》显示包内容=》Contents=》bin</p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200206174018672.png" alt="image-20200206174018672"></p><p>windows修改idea-exe.vmoptions和idea-exe64.vmoptions，两者内容与上述一致，如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200206174257732.png" alt="image-20200206174257732"></p><p>修改完配置文件之后重启Idea</p><p><strong>4. 输入激活码</strong></p><p>重启Idea之后，点击菜单栏中的 “Help” -&gt; “Register …”</p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120124221374.png" alt="image-20200120124221374"></p><p>##Pycharm2019.3.1破解</p><p>Pycharm激活过程跟idea类似，只是在修改配置文件时修改的是Edit Custom VM Options。</p><p><strong>修改配置文件</strong></p><p>点击Pycharm最上面的菜单栏中的 “Help” -&gt; “Edit Custom VM Options …”，如果提示是否要创建文件，请点”Yes”。</p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120124510846.png" alt="image-20200120124510846"></p><p> 在打开的vmoptions编辑窗口末行添加：-javaagent:你pycharm的安装目录\jetbrains-agent.jar</p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120124549013.png" alt="image-20200120124549013"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;IDE破解&quot;&gt;&lt;a href=&quot;#IDE破解&quot; class=&quot;headerlink&quot; title=&quot;IDE破解&quot;&gt;&lt;/a&gt;IDE破解&lt;/h1&gt;&lt;p&gt;目前提供Idea2019和Pycharm2019.3.1破解方法，持续收集中~~~&lt;/p&gt;
&lt;p&gt;相关破解补丁如下：&lt;/p&gt;
&lt;p&gt;链接:&lt;a href=&quot;https://pan.baidu.com/s/16_vBzCo_UKqkXSjHJ0J-MQ&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pan.baidu.com/s/16_vBzCo_UKqkXSjHJ0J-MQ&lt;/a&gt;  密码:3ga4&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://xyueji.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="idea" scheme="https://xyueji.github.io/tags/idea/"/>
    
      <category term="pycharm" scheme="https://xyueji.github.io/tags/pycharm/"/>
    
  </entry>
  
  <entry>
    <title>salt-api配置</title>
    <link href="https://xyueji.github.io/salt-api%E9%85%8D%E7%BD%AE.html"/>
    <id>https://xyueji.github.io/salt-api配置.html</id>
    <published>2020-01-20T08:30:15.000Z</published>
    <updated>2020-07-04T18:19:19.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="salt-api配置"><a href="#salt-api配置" class="headerlink" title="salt-api配置"></a>salt-api配置</h1><h3 id="一、安装salt-api相关软件"><a href="#一、安装salt-api相关软件" class="headerlink" title="一、安装salt-api相关软件"></a>一、安装salt-api相关软件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum install salt-minion.noarch -y</span><br><span class="line">yum install salt-master.noarch -y</span><br><span class="line">yum install salt-syndic.noarch -y</span><br><span class="line">yum install salt-api.noarch -y</span><br><span class="line">yum install pyOpenSSL.x86_64 -y </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">设置开机自启动</span></span><br><span class="line">chkconfig salt-api on</span><br><span class="line">chkconfig salt-master on</span><br><span class="line">chkconfig salt-minion on</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="二、配置salt-api"><a href="#二、配置salt-api" class="headerlink" title="二、配置salt-api"></a>二、配置salt-api</h3><ol><li>在salt-master的/etc/salt/下创建master.d文件夹创建api.conf和eauth.conf文件，具体内容如下：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> api.conf</span></span><br><span class="line">rest_cherrypy:</span><br><span class="line">  port: 8000                          #  salt-api 监听端口</span><br><span class="line">  ssl_crt: /etc/pki/tls/certs/localhost.crt          # ssl认证的证书</span><br><span class="line">  ssl_key: /etc/pki/tls/private/localhost_nopass.key</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> eauth.conf</span></span><br><span class="line">external_auth:</span><br><span class="line">  pam:</span><br><span class="line">    hbaseapi:</span><br><span class="line">      - .*</span><br><span class="line">      - '@wheel' # to allow access to all wheel modules</span><br><span class="line">      - '@runner' # to allow access to all runner modules</span><br><span class="line">      - '@jobs' # to allow access to the jobs runner and/or wheel module</span><br></pre></td></tr></table></figure><ol start="2"><li>创建localhost.crt和localhost_nopass.key</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/pki/tls/certs/</span><br><span class="line">make testcert</span><br><span class="line">hbaseapi</span><br><span class="line">hbaseapi</span><br><span class="line">hbaseapi</span><br><span class="line"> </span><br><span class="line">cd ../private/</span><br><span class="line">openssl rsa -in localhost.key -out localhost_nopass.key</span><br><span class="line">hbaseapi</span><br></pre></td></tr></table></figure><ol start="3"><li>重启salt-master和salt-api</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service salt-master restart</span><br><span class="line">service salt-api restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;salt-api配置&quot;&gt;&lt;a href=&quot;#salt-api配置&quot; class=&quot;headerlink&quot; title=&quot;salt-api配置&quot;&gt;&lt;/a&gt;salt-api配置&lt;/h1&gt;&lt;h3 id=&quot;一、安装salt-api相关软件&quot;&gt;&lt;a href=&quot;#一、安装salt-api相关软件&quot; class=&quot;headerlink&quot; title=&quot;一、安装salt-api相关软件&quot;&gt;&lt;/a&gt;一、安装salt-api相关软件&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install salt-minion.noarch -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install salt-master.noarch -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install salt-syndic.noarch -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install salt-api.noarch -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install pyOpenSSL.x86_64 -y &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;设置开机自启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chkconfig salt-api on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chkconfig salt-master on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chkconfig salt-minion on&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="SaltStack" scheme="https://xyueji.github.io/categories/SaltStack/"/>
    
    
      <category term="salt-api" scheme="https://xyueji.github.io/tags/salt-api/"/>
    
  </entry>
  
  <entry>
    <title>线上HBase表重建</title>
    <link href="https://xyueji.github.io/%E7%BA%BF%E4%B8%8AHBase%E8%A1%A8%E9%87%8D%E5%BB%BA.html"/>
    <id>https://xyueji.github.io/线上HBase表重建.html</id>
    <published>2020-01-20T07:48:53.000Z</published>
    <updated>2020-07-04T18:19:19.452Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、创建临时表"><a href="#一、创建临时表" class="headerlink" title="一、创建临时表"></a>一、创建临时表</h3><ol><li>预切分</li></ol><p>​           根据表数据特点选取合适的方式预切分表。</p><ol start="2"><li>创建临时表</li></ol><a id="more"></a><p>​           选取预切分方式，创建结构与原表格式相同的临时表。</p><h3 id="二、数据迁移"><a href="#二、数据迁移" class="headerlink" title="二、数据迁移"></a>二、数据迁移</h3><ol><li>原数据表数据导出</li></ol><p>​           为了不影响线上HBase表，使用snapshot的ExportSnapshot方式把snapshot数据迁移到公共Hadoop集群进行处理。执行命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hbase org.apache.hadoop.hbase.snapshot.ExportSnapshot \ </span><br><span class="line">-snapshot table_snapshot -copy-from hdfs://master:9000/hbase \ </span><br><span class="line">-copy-to hdfs://nn-cluster/hbase -mappers 16 -bandwidth 256</span><br></pre></td></tr></table></figure><p>​      2.导出Snapshot数据</p><p>​           若没有Snapshot导出工具，仿照org.apache.hadoop.hbase.mapreduce.Export类编写SnapshotExport工具类，参考类容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Job job = new Job(conf); Path restoreDir = new Path("XX"); // restore dir should not be a subdirectory of hbase.rootdir Scan scan = new Scan(); TableMapReduceUtil.initTableSnapshotMapperJob(snapshotName, scan, MyTableMapper.class, MyMapKeyOutput.class, MyMapOutputValueWritable.class, job, true, restoreDir);</span><br></pre></td></tr></table></figure><p>​            执行SnapshotExport工具类，执行命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hbase com.ke.dtarch.ExportSnapshot \ </span><br><span class="line">table_snapshot \ </span><br><span class="line">hdfs://nn-cluster/user/bigdata/snapshotTest/resotre_table \ </span><br><span class="line">hdfs://nn-cluster/user/bigdata/snapshotTest/snapshot_out</span><br></pre></td></tr></table></figure><p>​      3.生成HFiles</p><p>​         根据Snapshot导出的数据使用org.apache.hadoop.hbase.mapreduce.Export生成HFiles，执行命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hbase org.apache.hadoop.hbase.mapreduce.Import \  </span><br><span class="line">-Dimport.bulk.output=hdfs://nn-cluster/user/bigdata/snapshotTest/importOut \  </span><br><span class="line">-Dhbase.import.version=1.4.9 \  </span><br><span class="line">&lt;临时HBase表名&gt; hdfs://nn-cluster/user/bigdata/snapshotTest/rptOut</span><br></pre></td></tr></table></figure><p>​      4.使用distcp把HFiles导到HBase集群</p><p>​         执行命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hadoop distcp \ </span><br><span class="line">-bandwidth 20 \ </span><br><span class="line">hdfs://nn-cluster/user/bigdata/snapshotTest/importOut \ </span><br><span class="line">hdfs://master:9000/tmp/</span><br></pre></td></tr></table></figure><p>​      5.使用BulkLoad把HFile导入临时表</p><p>​         执行命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hbase org.apache.hadoop.hbase.mapreduce.LoadIncrementalHFiles \ </span><br><span class="line">/tmp/importSplitOut &lt;临时表名&gt;</span><br></pre></td></tr></table></figure><h3 id="三、HBase表替换"><a href="#三、HBase表替换" class="headerlink" title="三、HBase表替换"></a>三、HBase表替换</h3><ol><li>创建snapshot</li></ol><p>​           给原表和临时表创建snapshot，执行命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snapshot 'origin_table', 'origin_table_snapshot' snapshot 'tmp_table', 'tmp_table_snapshot'</span><br></pre></td></tr></table></figure><p>​       2.删除原表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable 'origin_table' drop 'origin_table'</span><br></pre></td></tr></table></figure><p>​       3.修改表名称</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clone_snapshot 'tmp_table_snapshot', 'origin_table'</span><br></pre></td></tr></table></figure><p>​       4.检查HBase表状态，无异常后，删除多余的表和数据</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、创建临时表&quot;&gt;&lt;a href=&quot;#一、创建临时表&quot; class=&quot;headerlink&quot; title=&quot;一、创建临时表&quot;&gt;&lt;/a&gt;一、创建临时表&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;预切分&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​           根据表数据特点选取合适的方式预切分表。&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;创建临时表&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="hbase" scheme="https://xyueji.github.io/categories/hbase/"/>
    
    
      <category term="表重建" scheme="https://xyueji.github.io/tags/%E8%A1%A8%E9%87%8D%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Alluxio+Presto多版本测试</title>
    <link href="https://xyueji.github.io/Alluxio+Presto%E5%A4%9A%E7%89%88%E6%9C%AC%E6%B5%8B%E8%AF%95.html"/>
    <id>https://xyueji.github.io/Alluxio+Presto多版本测试.html</id>
    <published>2020-01-20T04:03:50.000Z</published>
    <updated>2020-07-04T18:19:19.359Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Alluxio-Presto多版本测试"><a href="#Alluxio-Presto多版本测试" class="headerlink" title="Alluxio+Presto多版本测试"></a>Alluxio+Presto多版本测试</h2><h4 id="一、测试环境"><a href="#一、测试环境" class="headerlink" title="一、测试环境"></a>一、测试环境</h4><table><thead><tr><th>Prestosql</th><th>1台主节点，4台worker节点（版本0.211&amp;327）</th></tr></thead><tbody><tr><td>Prestodb</td><td>1台主节点，4台worker节点（版本0.211&amp;0.229）</td></tr><tr><td>Alluxio</td><td>1台主节点，4台worker节点（版本2.1.0）</td></tr><tr><td>硬件信息</td><td>共5台机器，每台48核cpu、125G内存</td></tr><tr><td>测试工具</td><td>Jmeter</td></tr></tbody></table><a id="more"></a><h6 id="Presto关键配置"><a href="#Presto关键配置" class="headerlink" title="Presto关键配置"></a>Presto关键配置</h6><p>Jvm.comfig配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-server</span><br><span class="line">-Xmx80G</span><br><span class="line">-XX:+UseG1GC</span><br><span class="line">-XX:G1HeapRegionSize=32M</span><br><span class="line">-XX:+UseGCOverheadLimit</span><br><span class="line">-XX:+ExplicitGCInvokesConcurrent</span><br><span class="line">-XX:+HeapDumpOnOutOfMemoryError</span><br><span class="line">-XX:+ExitOnOutOfMemoryError</span><br></pre></td></tr></table></figure><p>Config.properties配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">query.max-memory=120GB</span><br><span class="line">query.max-memory-per-node=20GB</span><br><span class="line">query.max-total-memory-per-node=20GB</span><br><span class="line">memory.heap-headroom-per-node=16GB</span><br></pre></td></tr></table></figure><p>内存分布如下：</p><table><thead><tr><th></th><th>RESERVED_POOL</th><th>GENERAL_POOL</th></tr></thead><tbody><tr><td>单个worker</td><td>20G</td><td>44G</td></tr></tbody></table><p>resource_groups.json配置如下： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">          &quot;name&quot;: &quot;pipeline&quot;,</span><br><span class="line">          &quot;softMemoryLimit&quot;: &quot;80%&quot;,</span><br><span class="line">          &quot;hardConcurrencyLimit&quot;: 90,</span><br><span class="line">          &quot;maxQueued&quot;: 1500, </span><br><span class="line">          &quot;schedulingWeight&quot;: 1,</span><br><span class="line">          &quot;jmxExport&quot;: true,</span><br><span class="line">          &quot;subGroups&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;name&quot;: &quot;pipeline_$&#123;USER&#125;&quot;,</span><br><span class="line">              &quot;softMemoryLimit&quot;: &quot;50%&quot;,</span><br><span class="line">              &quot;hardConcurrencyLimit&quot;: 30, </span><br><span class="line">              &quot;maxQueued&quot;: 500</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h6 id="Alluxio关键配置"><a href="#Alluxio关键配置" class="headerlink" title="Alluxio关键配置"></a>Alluxio关键配置</h6> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">alluxio.worker.memory.size=40GB</span><br><span class="line">alluxio.worker.tieredstore.levels=1</span><br><span class="line">alluxio.worker.tieredstore.level0.alias=MEM</span><br><span class="line">alluxio.worker.tieredstore.level0.dirs.path=/dev/shm/alluxio</span><br><span class="line">alluxio.worker.tieredstore.level0.dirs.quota=40GB</span><br><span class="line">alluxio.worker.tieredstore.level0.watermark.high.ratio=0.9</span><br><span class="line">alluxio.worker.tieredstore.level0.watermark.low.ratio=0.7</span><br></pre></td></tr></table></figure><h4 id="二、测试过程"><a href="#二、测试过程" class="headerlink" title="二、测试过程"></a>二、测试过程</h4><h5 id="Presto-0-211-压测"><a href="#Presto-0-211-压测" class="headerlink" title="Presto(0.211)压测"></a>Presto(0.211)压测</h5><p>测试一：</p><p>选取一天线上执行的400条sql。</p><table><thead><tr><th>并发</th><th>用户</th><th>每用户sql</th><th>总sql</th></tr></thead><tbody><tr><td>90</td><td>3</td><td>400</td><td>1200</td></tr></tbody></table><p>执行情况：</p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114102936.png" alt="image-20200120114102936"></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114121991.png" alt="image-20200120114121991"></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114207933.png" alt="image-20200120114207933"></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114219180.png" alt="image-20200120114219180"></p><p>测试二：</p><p>选取线上一天内cpu负载最高的时间区间，取出执行sql进行测试。（2019.12.27 08:00~09:00）</p><p>第一组：</p><table><thead><tr><th>并发</th><th>用户</th><th>sql</th></tr></thead><tbody><tr><td>300</td><td>1</td><td>300</td></tr></tbody></table><p>执行情况</p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114254746.png" alt="image-20200120114254746"></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114302859.png" alt="image-20200120114302859"></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114312334.png" alt="image-20200120114312334"></p><p>第二组：</p><table><thead><tr><th>并发</th><th>用户</th><th>sql</th></tr></thead><tbody><tr><td>300</td><td>1</td><td>1000</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114349956.png" alt="image-20200120114349956"></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114359496.png" alt="image-20200120114359496"></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114406068.png" alt="image-20200120114406068"></p><p>第三组</p><table><thead><tr><th>并发</th><th>用户</th><th>sql</th></tr></thead><tbody><tr><td>300</td><td>1</td><td>2000</td></tr></tbody></table><p>执行情况</p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114502901.png" alt="image-20200120114502901"></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114509332.png" alt="image-20200120114509332"></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114521096.png" alt="image-20200120114521096"></p><h5 id="Alluxio-presto-0-211-测试（alluxio和presto混合部署）"><a href="#Alluxio-presto-0-211-测试（alluxio和presto混合部署）" class="headerlink" title="Alluxio+presto(0.211)测试（alluxio和presto混合部署）"></a>Alluxio+presto(0.211)测试（alluxio和presto混合部署）</h5><p>随机选取线上执行的一条SQL，把相关表使用alluxio加速和不加速分别测试。</p><p>测试结果</p><p>第一组：1并发，重复试验50次</p><table><thead><tr><th></th><th>样本值</th><th>平均值</th><th>最小值</th><th>最大值</th><th>少于10s</th></tr></thead><tbody><tr><td>Hdfs</td><td>50</td><td>2543</td><td>1037</td><td>15442</td><td>47</td></tr><tr><td>Alluxio</td><td>50</td><td>1247</td><td>1029</td><td>1762</td><td>50</td></tr></tbody></table><p>第二组：10并发，重复试验50次</p><table><thead><tr><th></th><th>样本值</th><th>平均值</th><th>最小值</th><th>最大值</th><th>少于10s</th></tr></thead><tbody><tr><td>Hdfs</td><td>500</td><td>5358</td><td>1001</td><td>31227</td><td>458</td></tr><tr><td>Alluxio</td><td>500</td><td>5428</td><td>1663</td><td>10883</td><td>499</td></tr></tbody></table><p>第三组：20并发，重复试验50次</p><table><thead><tr><th></th><th>样本值</th><th>平均值</th><th>最小值</th><th>最大值</th><th>少于10s</th></tr></thead><tbody><tr><td>Hdfs</td><td>1000</td><td>6604</td><td>1414</td><td>23482</td><td>896</td></tr><tr><td>Alluxio</td><td>1000</td><td>7002</td><td>491</td><td>11381</td><td>963</td></tr></tbody></table><p>第四组：40并发，重复试验50次</p><table><thead><tr><th></th><th>样本值</th><th>平均值</th><th>最小值</th><th>最大值</th><th>少于10s</th></tr></thead><tbody><tr><td>Hdfs</td><td>2000</td><td>10971</td><td>1147</td><td>55482</td><td>1173</td></tr><tr><td>Alluxio</td><td>2000</td><td>10027</td><td>1194</td><td>35920</td><td>1130</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114916236.png" alt="image-20200120114916236"></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114925624.png" alt="image-20200120114925624"></p><h5 id="Alluxio-prestodb-0-229-测试（alluxio和presto混合部署）"><a href="#Alluxio-prestodb-0-229-测试（alluxio和presto混合部署）" class="headerlink" title="Alluxio+prestodb(0.229)测试（alluxio和presto混合部署）"></a>Alluxio+prestodb(0.229)测试（alluxio和presto混合部署）</h5><p>测试结果</p><p>第一组：1并发，重复试验50次</p><table><thead><tr><th></th><th>样本值</th><th>平均值</th><th>最小值</th><th>最大值</th><th>少于10s</th></tr></thead><tbody><tr><td>Hdfs+presto0.211</td><td>50</td><td>2543</td><td>1037</td><td>15442</td><td>47</td></tr><tr><td>Hdfs+presto0.229</td><td>50</td><td>1873</td><td>998</td><td>6408</td><td>50</td></tr><tr><td>Alluxio+presto0.211</td><td>50</td><td>1247</td><td>1029</td><td>1762</td><td>50</td></tr><tr><td>Alluxio+presto0.229</td><td>50</td><td>869</td><td>408</td><td>1240</td><td>50</td></tr></tbody></table><p>第二组：10并发，重复试验50次</p><table><thead><tr><th></th><th>样本值</th><th>平均值</th><th>最小值</th><th>最大值</th><th>少于10s</th></tr></thead><tbody><tr><td>Hdfs+presto0.211</td><td>500</td><td>5358</td><td>1001</td><td>31227</td><td>458</td></tr><tr><td>Hdfs+presto0.229</td><td>500</td><td>5158</td><td>1452</td><td>28068</td><td>454</td></tr><tr><td>Alluxio+presto0.211</td><td>500</td><td>5428</td><td>1663</td><td>10883</td><td>499</td></tr><tr><td>Alluxio+presto0.229</td><td>500</td><td>3346</td><td>728</td><td>5745</td><td>500</td></tr></tbody></table><p>第三组：20并发，重复试验50次</p><table><thead><tr><th></th><th>样本值</th><th>平均值</th><th>最小值</th><th>最大值</th><th>少于10s</th></tr></thead><tbody><tr><td>Hdfs+presto0.211</td><td>1000</td><td>6604</td><td>1414</td><td>23482</td><td>896</td></tr><tr><td>Hdfs+presto0.229</td><td>1000</td><td>6230</td><td>893</td><td>30044</td><td>924</td></tr><tr><td>Alluxio+presto0.211</td><td>1000</td><td>7002</td><td>491</td><td>11381</td><td>963</td></tr><tr><td>Alluxio+presto0.229</td><td>1000</td><td>5801</td><td>461</td><td>10650</td><td>996</td></tr></tbody></table><p>第四组：40并发，重复试验50次</p><table><thead><tr><th></th><th>样本值</th><th>平均值</th><th>最小值</th><th>最大值</th><th>少于10s</th></tr></thead><tbody><tr><td>Hdfs+presto0.211</td><td>2000</td><td>10971</td><td>1147</td><td>55482</td><td>1173</td></tr><tr><td>Hdfs+presto0.229</td><td>2000</td><td>10004</td><td>1436</td><td>35411</td><td>1305</td></tr><tr><td>Alluxio+presto0.211</td><td>2000</td><td>10027</td><td>1194</td><td>35920</td><td>1130</td></tr><tr><td>Alluxio+presto0.229</td><td>2000</td><td>9098</td><td>812</td><td>16986</td><td>1330</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120114959135.png" alt="image-20200120114959135"></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120115011627.png" alt="image-20200120115011627"></p><h5 id="Alluxio-prestosql-327-测试（alluxio和presto混合部署）"><a href="#Alluxio-prestosql-327-测试（alluxio和presto混合部署）" class="headerlink" title="Alluxio+prestosql(327)测试（alluxio和presto混合部署）"></a>Alluxio+prestosql(327)测试（alluxio和presto混合部署）</h5><p>测试结果</p><p>第一组：1并发，重复试验50次</p><table><thead><tr><th></th><th>样本值</th><th>平均值</th><th>最小值</th><th>最大值</th><th>少于10s</th></tr></thead><tbody><tr><td>Hdfs+prestosql0.211</td><td>50</td><td>2543</td><td>1037</td><td>15442</td><td>47</td></tr><tr><td>Hdfs+prestodb0.229</td><td>50</td><td>1873</td><td>998</td><td>6408</td><td>50</td></tr><tr><td>Hdfs++prestosql327</td><td>50</td><td>2448</td><td>615</td><td>17361</td><td>48</td></tr><tr><td>Alluxio+prestosql0.211</td><td>50</td><td>1247</td><td>1029</td><td>1762</td><td>50</td></tr><tr><td>Alluxio+prestodb0.229</td><td>50</td><td>869</td><td>408</td><td>1240</td><td>50</td></tr><tr><td>Alluxio+prestosql327</td><td>50</td><td>510</td><td>360</td><td>1026</td><td>50</td></tr></tbody></table><p>第二组：10并发，重复试验50次</p><table><thead><tr><th></th><th>样本值</th><th>平均值</th><th>最小值</th><th>最大值</th><th>少于10s</th></tr></thead><tbody><tr><td>Hdfs+prestosql0.211</td><td>500</td><td>5358</td><td>1001</td><td>31227</td><td>458</td></tr><tr><td>Hdfs+prestodb0.229</td><td>500</td><td>5158</td><td>1452</td><td>28068</td><td>454</td></tr><tr><td>Hdfs+prestosql327</td><td>500</td><td>4987</td><td>614</td><td>20588</td><td>454</td></tr><tr><td>Alluxio+prestosql0.211</td><td>500</td><td>5428</td><td>1663</td><td>10883</td><td>499</td></tr><tr><td>Alluxio+prestodb0.229</td><td>500</td><td>3346</td><td>728</td><td>5745</td><td>500</td></tr><tr><td>Alluxio+prestosql327</td><td>500</td><td>2650</td><td>369</td><td>5737</td><td>500</td></tr></tbody></table><p>第三组：20并发，重复试验50次</p><table><thead><tr><th></th><th>样本值</th><th>平均值</th><th>最小值</th><th>最大值</th><th>少于10s</th></tr></thead><tbody><tr><td>Hdfs+prestosql0.211</td><td>1000</td><td>6604</td><td>1414</td><td>23482</td><td>896</td></tr><tr><td>Hdfs+prestodb0.229</td><td>1000</td><td>6230</td><td>893</td><td>30044</td><td>924</td></tr><tr><td>Hdfs+prestosql327</td><td>1000</td><td>5660</td><td>924</td><td>19574</td><td>926</td></tr><tr><td>Alluxio+prestosql0.211</td><td>1000</td><td>7002</td><td>491</td><td>11381</td><td>963</td></tr><tr><td>Alluxio+prestodb0.229</td><td>1000</td><td>5801</td><td>461</td><td>10650</td><td>996</td></tr><tr><td>Alluxio+prestosql327</td><td>1000</td><td>4998</td><td>421</td><td>10152</td><td>999</td></tr></tbody></table><p>第四组：40并发，重复试验50次</p><table><thead><tr><th></th><th>样本值</th><th>平均值</th><th>最小值</th><th>最大值</th><th>少于10s</th></tr></thead><tbody><tr><td>Hdfs+prestosql0.211</td><td>2000</td><td>10971</td><td>1147</td><td>55482</td><td>1173</td></tr><tr><td>Hdfs+prestodb0.229</td><td>2000</td><td>10004</td><td>1436</td><td>35411</td><td>1305</td></tr><tr><td>Hdfs+prestosql327</td><td>2000</td><td>10436</td><td>554</td><td>52987</td><td>1377</td></tr><tr><td>Alluxio+prestosql0.211</td><td>2000</td><td>10027</td><td>1194</td><td>35920</td><td>1130</td></tr><tr><td>Alluxio+prestodb0.229</td><td>2000</td><td>9098</td><td>812</td><td>16986</td><td>1330</td></tr><tr><td>Alluxio+prestosql327</td><td>2000</td><td>9231</td><td>1032</td><td>16277</td><td>1290</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120115052564.png" alt="image-20200120115052564"></p><p><img src="https://cdn.jsdelivr.net/gh/xyueji/img@master/web/image-20200120115103149.png" alt="image-20200120115103149"></p><h4 id="三、测试结论和思考"><a href="#三、测试结论和思考" class="headerlink" title="三、测试结论和思考"></a>三、测试结论和思考</h4><p>结论</p><ol><li><p>目前presto集群资源足够支撑线上业务，最大性能限制在CPU，5台机器最大可支撑线上300sql并发查询。</p></li><li><p>alluxio+presto模式在并发查询量少时性能提升很大，并且查询性能非常稳定。但并发在达到40并发时，性能提升和查询10s内占比提升并不明显。</p></li><li><p>升级presto版本对查询性能有明显提升，但并发达到一定程度时效果逐渐不明显。</p></li></ol><p>思考</p><ol><li><p>考虑到presto集群在查询出现排队时会严重影响查询性能，可以适当调整resource_groups.json配置，包括最大并发、排队队列大小、多租户调整，尽量使线上用户查询没有排队的情况。</p></li><li><p>目前alluxio+presto模式并没用到alluxiuo的数据本地性读写，需进行深入研究，利用起alluxio的本地性。</p></li><li><p>presto新版本对查询性能有很大提升，通过对prestodb-0.229和prestosql-327两个最新版本的测试，且考虑到两种版本的社区活跃度和版本更新速度，建议采用prestosql-327进行presto集群的版本升级。</p></li><li><p>需探索alluxio更多的使用场景，比如说yarn、spark、tensorflow等。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Alluxio-Presto多版本测试&quot;&gt;&lt;a href=&quot;#Alluxio-Presto多版本测试&quot; class=&quot;headerlink&quot; title=&quot;Alluxio+Presto多版本测试&quot;&gt;&lt;/a&gt;Alluxio+Presto多版本测试&lt;/h2&gt;&lt;h4 id=&quot;一、测试环境&quot;&gt;&lt;a href=&quot;#一、测试环境&quot; class=&quot;headerlink&quot; title=&quot;一、测试环境&quot;&gt;&lt;/a&gt;一、测试环境&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Prestosql&lt;/th&gt;
&lt;th&gt;1台主节点，4台worker节点（版本0.211&amp;amp;327）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Prestodb&lt;/td&gt;
&lt;td&gt;1台主节点，4台worker节点（版本0.211&amp;amp;0.229）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alluxio&lt;/td&gt;
&lt;td&gt;1台主节点，4台worker节点（版本2.1.0）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;硬件信息&lt;/td&gt;
&lt;td&gt;共5台机器，每台48核cpu、125G内存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;测试工具&lt;/td&gt;
&lt;td&gt;Jmeter&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="presto" scheme="https://xyueji.github.io/categories/presto/"/>
    
    
      <category term="测试" scheme="https://xyueji.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="alluxio" scheme="https://xyueji.github.io/tags/alluxio/"/>
    
      <category term="presto" scheme="https://xyueji.github.io/tags/presto/"/>
    
  </entry>
  
</feed>
